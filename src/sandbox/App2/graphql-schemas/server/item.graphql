type Item {
  id: Int!
  userId: Int!
  title: String!
}

type RelatedItem {
  item: Item!
  relationship: Relationship!
}

type ItemWithRelatedItems {
  relation: Item!
  item: Item!
  items: [Item!]!
  relationshipIds: [Int!]!
}

extend type Query {
  items: [Item!]!
  item(id: Int!): Item
  itemsById(ids: [Int!]!): [Item!]!

  coreItems: [Item!]!
  coreItem(title: String!): Item

  itemWithRelatedItems(relatedToId: Int!, relationId: Int!): ItemWithRelatedItems!
}

extend type Mutation {
  createItem(title: String!): Item!
  updateItem(id: Int!, title: String!): Item!
  destroyItem(id: Int!): Item!

  destroyItems(ids: [Int!]!): [Item!]!
  
  createRelatedItem(relatedToId: Int!, relationId: Int!, title: String!): RelatedItem!
  destroyRelatedItem(relatedToId: Int!, relationId: Int!, related: Int!): RelatedItem!
}