{"results":[{"filePath":"/home/jason/Projets/js/tenth/src/core/AddItem.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":5,"column":16,"nodeType":null,"endLine":5,"endColumn":16,"fix":{"range":[79,79],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Paper' is defined but never used.","line":8,"column":3,"nodeType":"Identifier","endLine":8,"endColumn":8},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Grid' is defined but never used.","line":9,"column":3,"nodeType":"Identifier","endLine":9,"endColumn":7},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'TextField' is defined but never used.","line":10,"column":3,"nodeType":"Identifier","endLine":10,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":12,"column":3,"nodeType":"Identifier","endLine":12,"endColumn":9},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":13,"column":14,"nodeType":null,"endLine":13,"endColumn":14,"fix":{"range":[176,176],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":53,"column":27,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":53,"endColumn":60},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":56,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":56,"endColumn":64},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":59,"column":28,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":59,"endColumn":33},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":64,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":64,"endColumn":63},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":77,"column":13,"nodeType":null,"endLine":77,"endColumn":13,"fix":{"range":[1560,1560],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":88,"column":16,"nodeType":null,"endLine":88,"endColumn":16,"fix":{"range":[1762,1762],"text":","}}],"errorCount":4,"warningCount":9,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import React, {\n  FunctionComponent,\n  useState,\n  ChangeEvent,\n  KeyboardEvent\n} from \"react\";\nimport {\n  Paper,\n  Grid,\n  TextField,\n  TextFieldProps,\n  Button,\n  ButtonProps\n} from \"@material-ui/core\";\n\nexport type AddItemProps = TextFieldProps & {\n  buttonProps?: ButtonProps;\n};\n\nexport const AddItem: FunctionComponent<AddItemProps> = ({\n  buttonProps,\n  ...other\n}) => {\n  const textField = (\n    <TextField placeholder=\"Add item here\" fullWidth {...other} />\n  );\n\n  return (\n    <Paper elevation={0} style={{ marginBottom: 16, padding: 16 }}>\n      {buttonProps ? (\n        <Grid container>\n          <Grid xs={10} md={11} item style={{ paddingRight: 16 }}>\n            {textField}\n          </Grid>\n          <Grid xs={2} md={1} item>\n            <Button\n              fullWidth\n              color=\"secondary\"\n              variant=\"outlined\"\n              {...buttonProps}\n            >\n              Add\n            </Button>\n          </Grid>\n        </Grid>\n      ) : (\n        textField\n      )}\n    </Paper>\n  );\n};\n\nexport const useAddItem = (add: (value: string) => void) => {\n  const [value, setValue] = useState(\"\");\n\n  const changeInput = (event: ChangeEvent<HTMLInputElement>) =>\n    setValue(event.target.value);\n\n  const clearInputAndAdd = () => {\n    setValue(\"\");\n    add(value);\n  };\n\n  const keyInput = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      clearInputAndAdd();\n      return true;\n    }\n\n    return false;\n  };\n\n  return {\n    value,\n    changeInput,\n    clearInputAndAdd,\n    keyInput\n  };\n};\n\nexport interface StatefulAddItemProps {\n  add: (value: string) => void;\n  button?: boolean;\n}\n\nexport const StatefulAddItem: FunctionComponent<StatefulAddItemProps> = ({\n  add,\n  button = true\n}) => {\n  const { value, changeInput, clearInputAndAdd, keyInput } = useAddItem(add);\n\n  return (\n    <AddItem\n      value={value}\n      onChange={changeInput}\n      onKeyPress={keyInput}\n      buttonProps={button ? { onClick: clearInputAndAdd } : undefined}\n    />\n  );\n};\n\nexport default AddItem;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/CardHeader.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MuiCardHeader' is defined but never used.","line":3,"column":17,"nodeType":"Identifier","endLine":3,"endColumn":30},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":6,"column":20,"nodeType":null,"endLine":6,"endColumn":20,"fix":{"range":[168,168],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'InlineText' is defined but never used.","line":8,"column":32,"nodeType":"Identifier","endLine":8,"endColumn":42}],"errorCount":1,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport {\n  CardHeader as MuiCardHeader,\n  CardHeaderProps as MuiCardHeaderProps,\n  TextFieldProps,\n  TypographyVariant\n} from \"@material-ui/core\";\nimport { StatefulInlineText as InlineText } from \"./InlineText\";\n\nexport interface CardHeaderProps {\n  title: string;\n  titleVariant?: TypographyVariant;\n  titleLabel?: string;\n  titleHelperText?: string;\n  titleError?: boolean;\n  titleEnter?: (title: string) => void;\n  titleTextFieldProps?: TextFieldProps;\n}\n\nexport type BaseCardHeaderProps = Omit<MuiCardHeaderProps, \"title\">;\nexport type FullCardHeaderProps = CardHeaderProps & BaseCardHeaderProps;\n\nexport const CardHeader: FunctionComponent<FullCardHeaderProps> = ({\n  title,\n  titleVariant = \"h5\",\n  titleLabel,\n  titleHelperText,\n  titleError,\n  titleEnter,\n  titleTextFieldProps,\n  ...other\n}) => {\n  return titleEnter ? (\n    <MuiCardHeader\n      disableTypography\n      title={\n        <InlineText\n          text={title}\n          textClassName=\"MuiCardHeader-title\"\n          textVariant={titleVariant}\n          label={titleLabel}\n          helperText={titleHelperText}\n          error={titleError}\n          enter={titleEnter}\n          textFieldProps={titleTextFieldProps}\n        />\n      }\n      {...other}\n    />\n  ) : (\n    <MuiCardHeader title={title} {...other} />\n  );\n};\n\nexport default CardHeader;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/InlineText.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Typography' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'TextField' is defined but never used.","line":3,"column":31,"nodeType":"Identifier","endLine":3,"endColumn":40},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Alert' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'AlertTitle' is defined but never used.","line":4,"column":17,"nodeType":"Identifier","endLine":4,"endColumn":27},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ErrorTooltip' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","endLine":5,"endColumn":22},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":30,"column":17,"nodeType":null,"endLine":30,"endColumn":17,"fix":{"range":[764,764],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":83,"column":17,"nodeType":null,"endLine":83,"endColumn":17,"fix":{"range":[1679,1679],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":96,"column":13,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":96,"endColumn":18},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":97,"column":14,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":97,"endColumn":32}],"errorCount":2,"warningCount":8,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React, { FunctionComponent, useState } from \"react\";\nimport { Typography, TypographyVariant } from \"@material-ui/core\";\nimport { StatefulTextField as TextField, TextFieldProps } from \"./TextField\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { ErrorTooltip } from \"./Tooltip\";\n\nexport interface InlineTextProps {\n  text: string;\n  textClassName: string;\n  textVariant: TypographyVariant;\n  edited?: boolean;\n  label?: string;\n  helperText?: string;\n  error?: boolean;\n  edit: () => void;\n  enter: (value: string) => void;\n  textFieldProps?: TextFieldProps;\n}\n\nexport const InlineText: FunctionComponent<InlineTextProps> = ({\n  text,\n  textClassName,\n  textVariant,\n  edited,\n  label,\n  helperText,\n  error,\n  edit,\n  enter,\n  textFieldProps\n}) => {\n  if (edited) {\n    return (\n      <TextField\n        defaultValue={text}\n        label={label}\n        helperText={helperText}\n        error={error}\n        enter={enter}\n        {...textFieldProps}\n      />\n    );\n  }\n\n  if (error) {\n    const alert = (\n      <Alert variant=\"outlined\" severity=\"error\" onClick={edit}>\n        <AlertTitle>{text}</AlertTitle>\n      </Alert>\n    );\n\n    return helperText ? (\n      <ErrorTooltip title={helperText}>{alert}</ErrorTooltip>\n    ) : (\n      alert\n    );\n  }\n\n  return (\n    <Typography\n      variant={textVariant}\n      className={textClassName}\n      component=\"span\"\n      display=\"block\"\n      onClick={edit}\n    >\n      {text}\n    </Typography>\n  );\n};\n\nexport const StatefulInlineText: FunctionComponent<Omit<\n  InlineTextProps,\n  \"edited\" | \"edit\"\n>> = ({\n  text,\n  textClassName,\n  textVariant,\n  label,\n  helperText,\n  error,\n  enter,\n  textFieldProps\n}) => {\n  const [edited, setEdited] = useState(false);\n\n  return (\n    <InlineText\n      text={text}\n      textClassName={textClassName}\n      textVariant={textVariant}\n      edited={edited}\n      label={label}\n      helperText={helperText}\n      error={error}\n      edit={() => setEdited(true)}\n      enter={(value: string) => {\n        setEdited(false);\n        enter(value);\n      }}\n      textFieldProps={textFieldProps}\n    />\n  );\n};\n\nexport default InlineText;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/List.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MuiList' is defined but never used.","line":3,"column":18,"nodeType":"Identifier","endLine":3,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ListItem' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","endLine":5,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'AddItem' is defined but never used.","line":7,"column":22,"nodeType":"Identifier","endLine":7,"endColumn":29},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":8,"column":39,"nodeType":null,"endLine":8,"endColumn":39,"fix":{"range":[379,379],"text":","}}],"errorCount":1,"warningCount":4,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport { CheckboxProps, IconButtonProps } from \"@material-ui/core\";\nimport { List as MuiList, ListProps as MuiListProps } from \"../mui-base\";\nimport { BaseListItemTextProps } from \"./ListItemText\";\nimport { ListItem, ListItemProps } from \"./ListItem\";\nimport {\n  StatefulAddItem as AddItem,\n  StatefulAddItemProps as AddItemProps\n} from \"./AddItem\";\n\nexport interface ListProps {\n  droppableId?: string;\n  addItemProps?: AddItemProps;\n  listItems?: ListItemProps[];\n  checkboxProps?: Omit<CheckboxProps, \"checked\">;\n  listItemTextProps?: BaseListItemTextProps;\n  deleteButtonProps?: IconButtonProps;\n}\n\nexport type BaseListProps = MuiListProps;\nexport type FullListProps = ListProps & BaseListProps;\n\nexport const List: FunctionComponent<FullListProps> = ({\n  droppableId,\n  addItemProps,\n  listItems,\n  checkboxProps,\n  listItemTextProps,\n  deleteButtonProps,\n  ...other\n}) => {\n  const dnd = Boolean(droppableId);\n  const droppableProps = (dnd && { droppableId }) as\n    | false\n    | { droppableId: string };\n\n  return (\n    <>\n      {addItemProps && <AddItem {...addItemProps} />}\n      <MuiList droppableProps={droppableProps} {...other}>\n        {listItems &&\n          listItems.map((listItem, index) => {\n            const id = listItem.itemId;\n\n            return (\n              <ListItem\n                draggableProps={dnd && { draggableId: id, index }}\n                key={id}\n                checkboxProps={checkboxProps}\n                listItemTextProps={listItemTextProps}\n                deleteButtonProps={deleteButtonProps}\n                {...listItem}\n              />\n            );\n          })}\n      </MuiList>\n    </>\n  );\n};\n\nexport default List;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/ListCard.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Card' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CardContent' is defined but never used.","line":2,"column":16,"nodeType":"Identifier","endLine":2,"endColumn":27},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CardHeader' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'List' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'titleVariant' is defined but never used.","line":18,"column":3,"nodeType":"Identifier","endLine":18,"endColumn":15}],"errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport { Card, CardContent, CardProps } from \"@material-ui/core\";\nimport { CardHeader, CardHeaderProps, BaseCardHeaderProps } from \"./CardHeader\";\nimport { List, ListProps, BaseListProps } from \"./List\";\n\nexport interface ListCardProps extends CardHeaderProps, ListProps {\n  cardHeaderProps?: BaseCardHeaderProps;\n  listProps?: BaseListProps;\n}\n\nexport type BaseListCardProps = CardProps;\nexport type FullListCardProps = ListCardProps & CardProps;\n\nexport const ListCard: FunctionComponent<FullListCardProps> = ({\n  droppableId,\n\n  title,\n  titleVariant,\n  titleLabel,\n  titleHelperText,\n  titleError,\n  titleEnter,\n  titleTextFieldProps,\n  cardHeaderProps,\n\n  addItemProps,\n  listItems,\n  checkboxProps,\n  listItemTextProps,\n  deleteButtonProps,\n  listProps,\n\n  ...other\n}) => {\n  return (\n    <Card {...other}>\n      <CardHeader\n        title={title}\n        titleLabel={titleLabel}\n        titleHelperText={titleHelperText}\n        titleError={titleError}\n        titleEnter={titleEnter}\n        titleTextFieldProps={titleTextFieldProps}\n        {...cardHeaderProps}\n      />\n      <CardContent>\n        <List\n          droppableId={droppableId}\n          addItemProps={addItemProps}\n          listItems={listItems}\n          checkboxProps={checkboxProps}\n          listItemTextProps={listItemTextProps}\n          deleteButtonProps={deleteButtonProps}\n          {...listProps}\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ListCard;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/ListItem.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Checkbox' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MuiListItem' is defined but never used.","line":4,"column":15,"nodeType":"Identifier","endLine":4,"endColumn":26},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":5,"column":36,"nodeType":null,"endLine":5,"endColumn":36,"fix":{"range":[205,205],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ListItemText' is defined but never used.","line":8,"column":3,"nodeType":"Identifier","endLine":8,"endColumn":15},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":10,"column":24,"nodeType":null,"endLine":10,"endColumn":24,"fix":{"range":[297,297],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'DeleteButton' is defined but never used.","line":12,"column":10,"nodeType":"Identifier","endLine":12,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'OpenInNewButton' is defined but never used.","line":12,"column":24,"nodeType":"Identifier","endLine":12,"endColumn":39},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'itemId' is defined but never used.","line":28,"column":5,"nodeType":"Identifier","endLine":28,"endColumn":11}],"errorCount":2,"warningCount":7,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React, { FunctionComponent, memo } from \"react\";\nimport { Checkbox, CheckboxProps, IconButtonProps } from \"@material-ui/core\";\nimport {\n  ListItem as MuiListItem,\n  ListItemProps as MuiListItemProps\n} from \"../mui-base\";\nimport {\n  ListItemText,\n  ListItemTextProps,\n  BaseListItemTextProps\n} from \"./ListItemText\";\nimport { DeleteButton, OpenInNewButton } from \"./buttons\";\n\nexport interface ListItemProps extends ListItemTextProps {\n  itemId: string;\n  checked?: boolean;\n  checkboxProps?: Omit<CheckboxProps, \"checked\">;\n  listItemTextProps?: BaseListItemTextProps;\n  deleteButtonProps?: IconButtonProps;\n  expandButtonProps?: IconButtonProps;\n}\n\nexport type BaseListItemProps = MuiListItemProps;\nexport type FullListItemProps = ListItemProps & BaseListItemProps;\n\nexport const ListItem: FunctionComponent<FullListItemProps> = memo(\n  ({\n    itemId,\n\n    checked,\n    checkboxProps,\n\n    primary,\n    primaryLabel,\n    primaryHelperText,\n    primaryError,\n    primaryEnter,\n    primaryTextFieldProps,\n    listItemTextProps,\n\n    deleteButtonProps,\n    expandButtonProps,\n\n    ...other\n  }) => {\n    return (\n      <MuiListItem {...other}>\n        {checkboxProps && <Checkbox checked={checked} {...checkboxProps} />}\n        <ListItemText\n          primary={primary}\n          primaryLabel={primaryLabel}\n          primaryHelperText={primaryHelperText}\n          primaryError={primaryError}\n          primaryEnter={primaryEnter}\n          primaryTextFieldProps={primaryTextFieldProps}\n          {...listItemTextProps}\n        />\n        {expandButtonProps && <OpenInNewButton {...expandButtonProps} />}\n        {deleteButtonProps && <DeleteButton {...deleteButtonProps} />}\n      </MuiListItem>\n    );\n  },\n  (prevProps, nextProps) => {\n    let eq =\n      prevProps.itemId === nextProps.itemId &&\n      prevProps.primary === nextProps.primary &&\n      prevProps.checked === nextProps.checked;\n\n    const pdp = prevProps.draggableProps;\n    const ndp = nextProps.draggableProps;\n\n    if (pdp && ndp) {\n      eq = eq && pdp.draggableId === ndp.draggableId;\n    } else {\n      eq = eq && pdp === ndp;\n    }\n\n    const pep = prevProps.expandButtonProps;\n    const nep = nextProps.expandButtonProps;\n\n    if (pep && nep) {\n      eq = eq && pep.className === nep.className;\n    } else {\n      eq = eq && pep === nep;\n    }\n\n    return eq;\n  }\n);\n\nexport default ListItem;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/ListItemText.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MuiListItemText' is defined but never used.","line":3,"column":19,"nodeType":"Identifier","endLine":3,"endColumn":34},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":6,"column":20,"nodeType":null,"endLine":6,"endColumn":20,"fix":{"range":[176,176],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'InlineText' is defined but never used.","line":8,"column":32,"nodeType":"Identifier","endLine":8,"endColumn":42}],"errorCount":1,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport {\n  ListItemText as MuiListItemText,\n  ListItemTextProps as MuiListItemTextProps,\n  TextFieldProps,\n  TypographyVariant\n} from \"@material-ui/core\";\nimport { StatefulInlineText as InlineText } from \"./InlineText\";\n\nexport interface ListItemTextProps {\n  primary: string;\n  primaryVariant?: TypographyVariant;\n  primaryLabel?: string;\n  primaryHelperText?: string;\n  primaryError?: boolean;\n  primaryEnter?: (value: string) => void;\n  primaryTextFieldProps?: TextFieldProps;\n}\n\nexport type BaseListItemTextProps = Omit<MuiListItemTextProps, \"primary\">;\nexport type FullListItemTextProps = ListItemTextProps & BaseListItemTextProps;\n\nexport const ListItemText: FunctionComponent<FullListItemTextProps> = ({\n  primary,\n  primaryVariant = \"body1\",\n  primaryLabel,\n  primaryHelperText,\n  primaryError,\n  primaryEnter,\n  primaryTextFieldProps,\n  ...other\n}) => {\n  return primaryEnter ? (\n    <MuiListItemText\n      disableTypography\n      primary={\n        <InlineText\n          text={primary}\n          textClassName=\"MuiListItemText-primary\"\n          textVariant={primaryVariant}\n          label={primaryLabel}\n          helperText={primaryHelperText}\n          error={primaryError}\n          enter={primaryEnter}\n          textFieldProps={primaryTextFieldProps}\n        />\n      }\n      {...other}\n    />\n  ) : (\n    <MuiListItemText primary={primary} {...other} />\n  );\n};\n\nexport default ListItemText;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/TextField.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":5,"column":16,"nodeType":null,"endLine":5,"endColumn":16,"fix":{"range":[79,79],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":19,"column":25,"nodeType":null,"endLine":19,"endColumn":25,"fix":{"range":[670,670],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":23,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":26,"endColumn":5},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":29,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":29,"endColumn":64},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":32,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":32,"endColumn":63},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":50,"column":13,"nodeType":null,"endLine":50,"endColumn":13,"fix":{"range":[1304,1304],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":78,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":78,"endColumn":20}],"errorCount":3,"warningCount":5,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import React, {\n  FunctionComponent,\n  useState,\n  ChangeEvent,\n  KeyboardEvent\n} from \"react\";\n\n// Dummy fix to help Babel:\n// The exported identifier \"_TextField\" is not declared in Babel's scope tracker\n// as a JavaScript value binding, and \"@babel/plugin-transform-typescript\"\n// never encountered it as a TypeScript type declaration.\n// It will be treated as a JavaScript value.\n//\n// This problem is likely caused by another plugin injecting\n// \"_TextField\" without registering it in the scope tracker. If you are the author\n//  of that plugin, please use \"scope.registerDeclaration(declarationPath)\".\nimport {\n  TextField as MuiTextField,\n  StandardTextFieldProps\n} from \"@material-ui/core\";\nconst TextField = MuiTextField;\n\nexport const useTextField = (\n  initialValue: string,\n  enter: (value: string) => void\n) => {\n  const [value, setValue] = useState(initialValue);\n\n  const changeInput = (event: ChangeEvent<HTMLInputElement>) =>\n    setValue(event.target.value);\n\n  const keyInput = (event: KeyboardEvent<HTMLInputElement>) => {\n    switch (event.key) {\n      case \"Enter\":\n        enter(value);\n        return true;\n\n      case \"Escape\":\n        enter(initialValue);\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  return {\n    value,\n    changeInput,\n    keyInput\n  };\n};\n\nexport interface StatefulTextFieldProps extends StandardTextFieldProps {\n  defaultValue?: string;\n  enter: (value: string) => void;\n}\n\nexport type TextFieldProps = Omit<\n  StandardTextFieldProps,\n  \"defaultValue\" | \"variant\"\n>;\n\nexport const StatefulTextField: FunctionComponent<StatefulTextFieldProps> = ({\n  defaultValue = \"\",\n  enter,\n  ...other\n}) => {\n  const { value, changeInput, keyInput } = useTextField(defaultValue, enter);\n\n  return (\n    <TextField\n      variant=\"standard\"\n      autoFocus\n      fullWidth\n      value={value}\n      onChange={changeInput}\n      onBlur={() => enter(defaultValue)}\n      onKeyDown={keyInput}\n      {...other}\n    />\n  );\n};\n\nexport default TextField;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/buttons/AddButton.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'IconButton' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'AddOutlined' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":21}],"errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport { IconButton, IconButtonProps } from \"@material-ui/core\";\nimport { AddOutlined } from \"@material-ui/icons\";\nimport { addLabel } from \"./aria-labels\";\n\nexport type AddButtonProps = IconButtonProps;\n\nexport const AddButton: FunctionComponent<AddButtonProps> = (props) => {\n  return (\n    <IconButton aria-label={addLabel} {...props}>\n      <AddOutlined />\n    </IconButton>\n  );\n};\n\nexport default AddButton;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/buttons/CloseButton.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'IconButton' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CloseOutlined' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":23}],"errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport { IconButton, IconButtonProps } from \"@material-ui/core\";\nimport { CloseOutlined } from \"@material-ui/icons\";\nimport { closeLabel } from \"./aria-labels\";\n\nexport type CloseButtonProps = IconButtonProps;\n\nexport const CloseButton: FunctionComponent<CloseButtonProps> = (props) => {\n  return (\n    <IconButton aria-label={closeLabel} {...props}>\n      <CloseOutlined />\n    </IconButton>\n  );\n};\n\nexport default CloseButton;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/buttons/DeleteButton.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'IconButton' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'DeleteOutlined' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":24}],"errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport { IconButton, IconButtonProps } from \"@material-ui/core\";\nimport { DeleteOutlined } from \"@material-ui/icons\";\nimport { deleteLabel } from \"./aria-labels\";\n\nexport type DeleteButtonProps = IconButtonProps;\n\nexport const DeleteButton: FunctionComponent<DeleteButtonProps> = (props) => {\n  return (\n    <IconButton aria-label={deleteLabel} {...props}>\n      <DeleteOutlined />\n    </IconButton>\n  );\n};\n\nexport default DeleteButton;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/buttons/OpenInNewButton.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'IconButton' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'OpenInNewOutlined' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":27}],"errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport { IconButton, IconButtonProps } from \"@material-ui/core\";\nimport { OpenInNewOutlined } from \"@material-ui/icons\";\nimport { expandLabel } from \"./aria-labels\";\n\nexport type OpenInNewButtonProps = IconButtonProps;\n\nexport const OpenInNewButton: FunctionComponent<OpenInNewButtonProps> = (\n  props\n) => {\n  return (\n    <IconButton aria-label={expandLabel} {...props}>\n      <OpenInNewOutlined />\n    </IconButton>\n  );\n};\n\nexport default OpenInNewButton;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/mui-base/List/DroppableList.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Droppable' is defined but never used.","line":3,"column":3,"nodeType":"Identifier","endLine":3,"endColumn":12},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":6,"column":25,"nodeType":null,"endLine":6,"endColumn":25,"fix":{"range":[135,135],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'BaseList' is defined but never used.","line":9,"column":10,"nodeType":"Identifier","endLine":9,"endColumn":18},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":24,"column":6,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":27,"endColumn":9}],"errorCount":1,"warningCount":4,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport {\n  Droppable,\n  DroppableProps,\n  DroppableProvided,\n  DroppableStateSnapshot\n} from \"react-beautiful-dnd\";\nimport clsx from \"clsx\";\nimport { BaseList, BaseListPropsWithoutRef } from \"./BaseList\";\n\nexport type DroppablePropsWithoutChildren = Omit<DroppableProps, \"children\">;\n\nexport interface DroppableListProps extends BaseListPropsWithoutRef {\n  droppableProps: DroppablePropsWithoutChildren;\n}\n\nexport const DroppableList: FunctionComponent<DroppableListProps> = ({\n  children,\n  className,\n  droppableProps,\n  ...other\n}) => (\n  <Droppable {...droppableProps}>\n    {(\n      { innerRef, droppableProps, placeholder }: DroppableProvided,\n      { isDraggingOver }: DroppableStateSnapshot\n    ) => (\n      <BaseList\n        className={clsx(className, { isDraggingOver })}\n        ref={innerRef}\n        {...droppableProps}\n        {...other}\n      >\n        {children}\n        {placeholder}\n      </BaseList>\n    )}\n  </Droppable>\n);\n"},{"filePath":"/home/jason/Projets/js/tenth/src/mui-base/List/List.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'DroppableList' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'BaseList' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":18}],"errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport { DroppableList, DroppablePropsWithoutChildren } from \"./DroppableList\";\nimport { BaseList, BaseListPropsWithoutRef } from \"./BaseList\";\n\nexport interface ListProps extends BaseListPropsWithoutRef {\n  droppableProps?: DroppablePropsWithoutChildren | false;\n}\n\nexport const List: FunctionComponent<ListProps> = ({\n  children,\n  droppableProps,\n  ...other\n}) => {\n  if (droppableProps) {\n    return (\n      <DroppableList droppableProps={droppableProps} {...other}>\n        {children}\n      </DroppableList>\n    );\n  }\n\n  return <BaseList {...other}>{children}</BaseList>;\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/mui-base/ListItem/DraggableListItem.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Draggable' is defined but never used.","line":3,"column":3,"nodeType":"Identifier","endLine":3,"endColumn":12},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":6,"column":25,"nodeType":null,"endLine":6,"endColumn":25,"fix":{"range":[135,135],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'BaseListItem' is defined but never used.","line":9,"column":10,"nodeType":"Identifier","endLine":9,"endColumn":22},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":24,"column":6,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":27,"endColumn":9}],"errorCount":1,"warningCount":4,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport {\n  Draggable,\n  DraggableProps,\n  DraggableProvided,\n  DraggableStateSnapshot\n} from \"react-beautiful-dnd\";\nimport clsx from \"clsx\";\nimport { BaseListItem, BaseListItemPropsWithoutRef } from \"./BaseListItem\";\n\nexport type DraggablePropsWithoutChildren = Omit<DraggableProps, \"children\">;\n\nexport interface DraggableListItemProps extends BaseListItemPropsWithoutRef {\n  draggableProps: DraggablePropsWithoutChildren;\n}\n\nexport const DraggableListItem: FunctionComponent<DraggableListItemProps> = ({\n  children,\n  className,\n  draggableProps,\n  ...other\n}) => (\n  <Draggable {...draggableProps}>\n    {(\n      { innerRef, draggableProps, dragHandleProps }: DraggableProvided,\n      { isDragging }: DraggableStateSnapshot\n    ) => (\n      <BaseListItem\n        className={clsx(className, { isDragging })}\n        ref={innerRef}\n        {...draggableProps}\n        {...dragHandleProps}\n        role=\"listitem\"\n        draggable\n        {...other}\n      >\n        {children}\n      </BaseListItem>\n    )}\n  </Draggable>\n);\n"},{"filePath":"/home/jason/Projets/js/tenth/src/mui-base/ListItem/ListItem.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'DraggableListItem' is defined but never used.","line":3,"column":3,"nodeType":"Identifier","endLine":3,"endColumn":20},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":4,"column":32,"nodeType":null,"endLine":4,"endColumn":32,"fix":{"range":[111,111],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'BaseListItem' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","endLine":6,"endColumn":22}],"errorCount":1,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport {\n  DraggableListItem,\n  DraggablePropsWithoutChildren\n} from \"./DraggableListItem\";\nimport { BaseListItem, BaseListItemPropsWithoutRef } from \"./BaseListItem\";\n\nexport interface ListItemProps extends BaseListItemPropsWithoutRef {\n  draggableProps?: DraggablePropsWithoutChildren | false;\n}\n\nexport const ListItem: FunctionComponent<ListItemProps> = ({\n  children,\n  draggableProps,\n  ...other\n}) => {\n  if (draggableProps) {\n    return (\n      <DraggableListItem draggableProps={draggableProps} {...other}>\n        {children}\n      </DraggableListItem>\n    );\n  }\n\n  return <BaseListItem {...other}>{children}</BaseListItem>;\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/index.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Provider' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Main' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","endLine":5,"endColumn":14}],"errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { createLogger } from \"redux-logger\";\nimport { Main, combinedManager } from \"./components/main\";\n\nconst logger = createLogger({ collapsed: true });\n\nexport const store = createStore(\n  combinedManager.reducer,\n  applyMiddleware(logger, combinedManager.sagaMiddleware)\n);\n\ncombinedManager.runSagas();\n\nconst App: FunctionComponent = () => {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n};\n\nexport default App;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/App.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Provider' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Layout' is defined but never used.","line":8,"column":10,"nodeType":"Identifier","endLine":8,"endColumn":16},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":23,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":23,"endColumn":15}],"errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createLogger } from \"redux-logger\";\nimport { combinedReducer } from \"./reducers\";\nimport { mainSaga, enableLocalStorageSaga } from \"./sagas\";\nimport { Layout } from \"./Layout\";\n\nconst localStorageId = \"todos\";\n\nconst logger = createLogger({ collapsed: true });\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n  combinedReducer,\n  applyMiddleware(logger, sagaMiddleware)\n);\n\nsagaMiddleware.run(mainSaga);\nsagaMiddleware.run(enableLocalStorageSaga, localStorageId);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Layout />\n    </Provider>\n  );\n}\n\nexport default App;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/CurrentTodo.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Card' is defined but never used.","line":4,"column":3,"nodeType":"Identifier","endLine":4,"endColumn":7},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CardHeader' is defined but never used.","line":5,"column":3,"nodeType":"Identifier","endLine":5,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CardContent' is defined but never used.","line":6,"column":3,"nodeType":"Identifier","endLine":6,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Typography' is defined but never used.","line":7,"column":3,"nodeType":"Identifier","endLine":7,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":8,"column":3,"nodeType":"Identifier","endLine":8,"endColumn":9},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":8,"column":9,"nodeType":null,"endLine":8,"endColumn":9,"fix":{"range":[151,151],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":15,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":15,"endColumn":60},{"ruleId":"prefer-const","severity":2,"message":"'newTodo' is never reassigned. Use 'const' instead.","line":36,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":36,"endColumn":16,"fix":{"range":[805,808],"text":"const"}},{"ruleId":"no-constant-condition","severity":2,"message":"Unexpected constant condition.","line":44,"column":12,"nodeType":"Literal","messageId":"unexpected","endLine":44,"endColumn":13},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":57,"column":24,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":57,"endColumn":29}],"errorCount":3,"warningCount":8,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Button\n} from \"@material-ui/core\";\nimport { TodoState, TodoStates, TodosState } from \"./types\";\nimport { toggleTodo } from \"./action-creators\";\nimport { useStyles } from \"./TodoList\";\nimport { rootId } from \"./todo\";\n\nexport function CurrentTodo({ viewId }: { viewId: string }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { views, parts } = useSelector(\n    (state: { todos: TodosState }) => state.todos\n  );\n\n  const noTodos = !parts[rootId]?.length;\n\n  let partId = views[viewId].partId;\n  let todos: TodoStates;\n  let todo: TodoState | undefined;\n\n  do {\n    todos = parts[partId];\n\n    if (!todos) {\n      break;\n    }\n\n    let newTodo = todos.find((todo) => !todo.checked);\n\n    if (!newTodo) {\n      break;\n    }\n\n    todo = newTodo;\n    partId = todo.id;\n  } while (1);\n\n  const id = todo?.id;\n\n  return (\n    <Card classes={{ root: classes.card }}>\n      <CardHeader\n        action={\n          id ? (\n            <Button\n              variant={\"contained\"}\n              disableRipple\n              color=\"secondary\"\n              onClick={() => dispatch(toggleTodo({ viewId, id }))}\n            >\n              Done\n            </Button>\n          ) : undefined\n        }\n      />\n      <CardContent>\n        {noTodos ? (\n          <Typography variant=\"h4\" align=\"center\">\n            {\"Please enter something\"}\n          </Typography>\n        ) : (\n          <Typography variant=\"h2\" align=\"center\">\n            {todo ? todo.title : \"🥳 ALL DONE\"}\n          </Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/Layout.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Card' is defined but never used.","line":3,"column":3,"nodeType":"Identifier","endLine":3,"endColumn":7},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CardContent' is defined but never used.","line":4,"column":3,"nodeType":"Identifier","endLine":4,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CardActions' is defined but never used.","line":5,"column":3,"nodeType":"Identifier","endLine":5,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Collapse' is defined but never used.","line":6,"column":3,"nodeType":"Identifier","endLine":6,"endColumn":11},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'IconButton' is defined but never used.","line":7,"column":3,"nodeType":"Identifier","endLine":7,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Grid' is defined but never used.","line":8,"column":3,"nodeType":"Identifier","endLine":8,"endColumn":7},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":8,"column":7,"nodeType":null,"endLine":8,"endColumn":7,"fix":{"range":[106,106],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Close' is defined but never used.","line":10,"column":10,"nodeType":"Identifier","endLine":10,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ExpandMore' is defined but never used.","line":10,"column":17,"nodeType":"Identifier","endLine":10,"endColumn":27},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'TodoList' is defined but never used.","line":14,"column":10,"nodeType":"Identifier","endLine":14,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CurrentTodo' is defined but never used.","line":15,"column":10,"nodeType":"Identifier","endLine":15,"endColumn":21},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":26,"column":24,"nodeType":null,"endLine":26,"endColumn":24,"fix":{"range":[748,748],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":33,"column":54,"nodeType":null,"endLine":33,"endColumn":54,"fix":{"range":[989,989],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":34,"column":9,"nodeType":null,"endLine":34,"endColumn":9,"fix":{"range":[998,998],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":37,"column":34,"nodeType":null,"endLine":37,"endColumn":34,"fix":{"range":[1057,1057],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":38,"column":6,"nodeType":null,"endLine":38,"endColumn":6,"fix":{"range":[1063,1063],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":44,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":44,"endColumn":28},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":49,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":49,"endColumn":34},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":65,"column":43,"nodeType":null,"endLine":65,"endColumn":43,"fix":{"range":[1713,1713],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":90,"column":34,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":90,"endColumn":39},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":94,"column":22,"nodeType":null,"endLine":94,"endColumn":22,"fix":{"range":[2684,2684],"text":","}}],"errorCount":8,"warningCount":13,"fixableErrorCount":8,"fixableWarningCount":0,"source":"import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Collapse,\n  IconButton,\n  Grid\n} from \"@material-ui/core\";\nimport { Close, ExpandMore } from \"@material-ui/icons\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { TodoList } from \"./TodoList\";\nimport { CurrentTodo } from \"./CurrentTodo\";\nimport { UI, closeSubView } from \"./ui\";\nimport \"./ListItem.css\";\nimport \"./IconButton.css\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      borderRadius: 0,\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText,\n      boxShadow: \"none\"\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      color: theme.palette.primary.contrastText,\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\"\n    }\n  })\n);\n\nexport const defaultTitle = \"TODOS\";\n\nexport const Layout = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [expanded, setExpanded] = React.useState(true);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const { mainViewId: viewId, subViewId }: UI = useSelector(\n    (state: { ui: UI }) => state.ui\n  );\n\n  return (\n    <Card classes={{ root: classes.card }}>\n      <CardContent>\n        <CurrentTodo viewId={viewId} />\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMore />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <Grid container>\n          <Grid item xs={12} md={subViewId ? 6 : 12}>\n            <CardContent>\n              <TodoList viewId={viewId} title={defaultTitle} />\n            </CardContent>\n          </Grid>\n          {subViewId && (\n            <Grid item xs={12} md={6}>\n              <CardContent>\n                <TodoList\n                  viewId={subViewId}\n                  cardHeaderProps={{\n                    action: (\n                      <IconButton\n                        aria-label=\"Close item\"\n                        onClick={() => dispatch(closeSubView({ subViewId }))}\n                      >\n                        <Close />\n                      </IconButton>\n                    )\n                  }}\n                />\n              </CardContent>\n            </Grid>\n          )}\n        </Grid>\n      </Collapse>\n    </Card>\n  );\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/Menu.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'IconButton' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Popover' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","endLine":3,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MenuList' is defined but never used.","line":3,"column":31,"nodeType":"Identifier","endLine":3,"endColumn":39},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MenuItem' is defined but never used.","line":3,"column":41,"nodeType":"Identifier","endLine":3,"endColumn":49},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MoreVert' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":18},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":18,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":18,"endColumn":64},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":22,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":22,"endColumn":28},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":26,"column":64,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":26,"endColumn":69},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":48,"column":31,"nodeType":null,"endLine":48,"endColumn":31,"fix":{"range":[1440,1440],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":52,"column":31,"nodeType":null,"endLine":52,"endColumn":31,"fix":{"range":[1536,1536],"text":","}}],"errorCount":2,"warningCount":9,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React, { FunctionComponent, useState, MouseEvent } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IconButton, Popover, MenuList, MenuItem } from \"@material-ui/core\";\nimport { MoreVert } from \"@material-ui/icons\";\nimport { VisibilityFilter, TodosState } from \"./types\";\nimport { setVisibilityFilter } from \"./action-creators\";\n\nexport const Menu: FunctionComponent<{ viewId: string }> = ({ viewId }) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const dispatch = useDispatch();\n\n  const visibilityFilter = useSelector(\n    (state: { todos: TodosState }) => state.todos.views[viewId].visibilityFilter\n  );\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const changeFilter = (visibilityFilter: VisibilityFilter) => () => {\n    dispatch(setVisibilityFilter({ viewId, visibilityFilter }));\n    handleClose();\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"setting\"\n        aria-controls=\"menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVert />\n      </IconButton>\n      <Popover\n        id=\"menu\"\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n      >\n        <MenuList dense>\n          {visibilityFilter !== VisibilityFilter.SHOW_ALL && (\n            <MenuItem onClick={changeFilter(VisibilityFilter.SHOW_ALL)}>\n              Show all\n            </MenuItem>\n          )}\n          {visibilityFilter !== VisibilityFilter.SHOW_ACTIVE && (\n            <MenuItem onClick={changeFilter(VisibilityFilter.SHOW_ACTIVE)}>\n              Show active\n            </MenuItem>\n          )}\n          {visibilityFilter !== VisibilityFilter.SHOW_COMPLETED && (\n            <MenuItem onClick={changeFilter(VisibilityFilter.SHOW_COMPLETED)}>\n              Show completed\n            </MenuItem>\n          )}\n          {visibilityFilter !== VisibilityFilter.SHOW_INVALID && (\n            <MenuItem onClick={changeFilter(VisibilityFilter.SHOW_INVALID)}>\n              Show invalid\n            </MenuItem>\n          )}\n        </MenuList>\n      </Popover>\n    </div>\n  );\n};\n\nexport default Menu;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/TodoList.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'DragDropContext' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":25},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":12,"column":11,"nodeType":null,"endLine":12,"endColumn":11,"fix":{"range":[341,341],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'List' is defined but never used.","line":14,"column":22,"nodeType":"Identifier","endLine":14,"endColumn":26},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Menu' is defined but never used.","line":15,"column":8,"nodeType":"Identifier","endLine":15,"endColumn":12},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":22,"column":22,"nodeType":null,"endLine":22,"endColumn":22,"fix":{"range":[672,672],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":23,"column":4,"nodeType":null,"endLine":23,"endColumn":4,"fix":{"range":[676,676],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":26,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":34,"endColumn":3},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":29,"column":18,"nodeType":null,"endLine":29,"endColumn":18,"fix":{"range":[746,746],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":50,"column":18,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":50,"endColumn":45},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":59,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":59,"endColumn":34},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":59,"column":71,"nodeType":null,"endLine":59,"endColumn":71,"fix":{"range":[1457,1457],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":73,"column":27,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":73,"endColumn":45},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":77,"column":24,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":77,"endColumn":29},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":77,"column":66,"nodeType":null,"endLine":77,"endColumn":66,"fix":{"range":[2107,2107],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":80,"column":24,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":80,"endColumn":29},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":80,"column":66,"nodeType":null,"endLine":80,"endColumn":66,"fix":{"range":[2221,2221],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":84,"column":24,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":84,"endColumn":29},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":84,"column":66,"nodeType":null,"endLine":84,"endColumn":66,"fix":{"range":[2383,2383],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":85,"column":14,"nodeType":null,"endLine":85,"endColumn":14,"fix":{"range":[2397,2397],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":90,"column":45,"nodeType":null,"endLine":90,"endColumn":45,"fix":{"range":[2524,2524],"text":","}}],"errorCount":10,"warningCount":11,"fixableErrorCount":10,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { TodosState } from \"./types\";\nimport {\n  addTodo,\n  deleteTodo,\n  expandTodo,\n  updateTodoTitle,\n  toggleTodo,\n  moveTodo\n} from \"./action-creators\";\nimport { ListCard as List, BaseCardHeaderProps } from \"../../core\";\nimport Menu from \"./Menu\";\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    borderRadius: 0,\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText,\n    boxShadow: \"none\"\n  }\n}));\n\nexport function TodoList({\n  viewId,\n  title,\n  cardHeaderProps\n}: {\n  viewId: string;\n  title?: string;\n  cardHeaderProps?: BaseCardHeaderProps;\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { parts, views, todos: allTodos } = useSelector(\n    (state: { todos: TodosState }) => state.todos\n  );\n\n  const { todos, partId } = views[viewId];\n\n  if (!title) {\n    title = allTodos[partId].title;\n  }\n\n  return (\n    <DragDropContext\n      onDragEnd={(dropResult: DropResult) =>\n        dispatch(moveTodo({ viewId, dropResult }))\n      }\n    >\n      <List\n        droppableId=\"drop-area\"\n        classes={{ root: classes.card }}\n        title={title}\n        addItemProps={{\n          add: (title: string) => dispatch(addTodo({ viewId, title }))\n        }}\n        listItems={todos.map((todo) => {\n          const errors = todo.errors;\n          const id = todo.id;\n          const expandButtonClassName = parts[id]?.length\n            ? \"hasElements\"\n            : undefined;\n\n          return {\n            itemId: id,\n            primary: todo.title,\n            primaryError: Boolean(errors),\n            primaryHelperText: errors && errors.join(\", \"),\n            primaryEnter: (title: string) =>\n              dispatch(updateTodoTitle({ viewId, id, title })),\n            checked: todo.checked,\n            checkboxProps: {\n              onClick: () => dispatch(toggleTodo({ viewId, id }))\n            },\n            deleteButtonProps: {\n              onClick: () => dispatch(deleteTodo({ viewId, id }))\n            },\n            expandButtonProps: {\n              className: expandButtonClassName,\n              onClick: () => dispatch(expandTodo({ viewId, id }))\n            }\n          };\n        })}\n        cardHeaderProps={\n          cardHeaderProps || {\n            action: <Menu viewId={viewId} />\n          }\n        }\n      />\n    </DragDropContext>\n  );\n}\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/components/container-components.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'DragDropContext' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CoreList' is defined but never used.","line":3,"column":18,"nodeType":"Identifier","endLine":3,"endColumn":26},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CoreListCard' is defined but never used.","line":3,"column":40,"nodeType":"Identifier","endLine":3,"endColumn":52},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Menu' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","endLine":6,"endColumn":14},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":9,"column":21,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":14,"endColumn":41},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":13,"column":9,"nodeType":null,"endLine":13,"endColumn":9,"fix":{"range":[407,407],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":16,"column":33,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":16,"endColumn":60},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'dropResult' is defined but never used.","line":16,"column":34,"nodeType":"Identifier","endLine":16,"endColumn":56},{"ruleId":"@typescript-eslint/no-empty-function","severity":2,"message":"Unexpected empty arrow function.","line":16,"column":61,"nodeType":"ArrowFunctionExpression","messageId":"unexpected"},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":20,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":20,"endColumn":39},{"ruleId":"@typescript-eslint/no-inferrable-types","severity":2,"message":"Type string trivially inferred from a string literal, remove type annotation.","line":20,"column":17,"nodeType":"AssignmentPattern","messageId":"noInferrableType","endLine":20,"endColumn":35,"fix":{"range":[620,628],"text":""}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":20,"column":66,"nodeType":null,"endLine":20,"endColumn":66,"fix":{"range":[664,664],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":26,"column":27,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":26,"endColumn":45},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":28,"column":24,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":28,"endColumn":29},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":28,"column":43,"nodeType":null,"endLine":28,"endColumn":43,"fix":{"range":[971,971],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":29,"column":14,"nodeType":null,"endLine":29,"endColumn":14,"fix":{"range":[985,985],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":37,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":45,"endColumn":41},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":44,"column":22,"nodeType":null,"endLine":44,"endColumn":22,"fix":{"range":[1168,1168],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_' is defined but never used.","line":48,"column":50,"nodeType":"Identifier","endLine":48,"endColumn":51},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_' is defined but never used.","line":53,"column":50,"nodeType":"Identifier","endLine":53,"endColumn":51},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_' is defined but never used.","line":59,"column":36,"nodeType":"Identifier","endLine":59,"endColumn":37},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":70,"column":14,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":70,"endColumn":37},{"ruleId":"@typescript-eslint/no-inferrable-types","severity":2,"message":"Type string trivially inferred from a string literal, remove type annotation.","line":70,"column":15,"nodeType":"AssignmentPattern","messageId":"noInferrableType","endLine":70,"endColumn":33,"fix":{"range":[1818,1826],"text":""}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":70,"column":64,"nodeType":null,"endLine":70,"endColumn":64,"fix":{"range":[1862,1862],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":77,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":77,"endColumn":27},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":78,"column":72,"nodeType":null,"endLine":78,"endColumn":72,"fix":{"range":[2128,2128],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":80,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":80,"endColumn":43},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":83,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":83,"endColumn":27},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":83,"column":41,"nodeType":null,"endLine":83,"endColumn":41,"fix":{"range":[2316,2316],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":86,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":86,"endColumn":27},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":86,"column":48,"nodeType":null,"endLine":86,"endColumn":48,"fix":{"range":[2408,2408],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":87,"column":12,"nodeType":null,"endLine":87,"endColumn":12,"fix":{"range":[2420,2420],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":96,"column":10,"nodeType":null,"endLine":96,"endColumn":10,"fix":{"range":[2625,2625],"text":","}}],"errorCount":14,"warningCount":20,"fixableErrorCount":13,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { List as CoreList, ListCard as CoreListCard } from \"../../../core\";\nimport { VisibilityFilter } from \"../types\";\nimport { ContainerComponentProps } from \"./view-manager\";\nimport { Menu } from \"./menu\";\nimport { TodoView } from \"./custom-types\";\n\nexport const List = ({\n  views,\n  create,\n  close,\n  update\n}: ContainerComponentProps<TodoView>) => {\n  return (\n    <DragDropContext onDragEnd={(dropResult: DropResult) => {}}>\n      <CoreList\n        droppableId=\"drop-area\"\n        addItemProps={{\n          add: (input: string = \"\") => create({ primary: input })\n        }}\n        listItems={Array.from(views.entries()).map(([itemId, payload]) => {\n          return {\n            itemId,\n            ...payload,\n            primaryEnter: (value: string) => update(itemId, { primary: value }),\n            deleteButtonProps: {\n              onClick: () => close(itemId)\n            }\n          };\n        })}\n      />\n    </DragDropContext>\n  );\n};\n\nexport const ListCard = ({\n  views,\n  create,\n  close,\n  update,\n  expand,\n  visibilityFilter,\n  setVisibilityFilter\n}: ContainerComponentProps<TodoView>) => {\n  switch (visibilityFilter) {\n    case VisibilityFilter.SHOW_ACTIVE: {\n      views = new Map(Array.from(views).filter(([_, { checked }]) => !checked));\n      break;\n    }\n\n    case VisibilityFilter.SHOW_COMPLETED: {\n      views = new Map(Array.from(views).filter(([_, { checked }]) => checked));\n      break;\n    }\n\n    case VisibilityFilter.SHOW_INVALID: {\n      views = new Map(\n        Array.from(views).filter(([_, { errors }]) => errors?.length)\n      );\n      break;\n    }\n  }\n\n  return (\n    <CoreListCard\n      droppableId=\"drop-area\"\n      title={\"ITEMS\"}\n      addItemProps={{\n        add: (input: string = \"\") => create({ primary: input })\n      }}\n      listItems={Array.from(views.entries()).map(([itemId, payload]) => {\n        return {\n          itemId,\n          ...payload,\n          checkboxProps: {\n            onClick: () =>\n              update(itemId, { ...payload, checked: !payload.checked })\n          },\n          primaryEnter: (value: string) =>\n            update(itemId, { ...payload, primary: value }),\n          deleteButtonProps: {\n            onClick: () => close(itemId)\n          },\n          expandButtonProps: {\n            onClick: () => expand(itemId, true)\n          }\n        };\n      })}\n      cardHeaderProps={{\n        action: (\n          <Menu\n            visibilityFilter={visibilityFilter}\n            setVisibilityFilter={setVisibilityFilter}\n          />\n        )\n      }}\n    />\n  );\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/components/main.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'DragDropContext' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ViewManager' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","endLine":6,"endColumn":21},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":24,"column":24,"nodeType":null,"endLine":24,"endColumn":24,"fix":{"range":[849,849],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":31,"column":50,"nodeType":null,"endLine":31,"endColumn":50,"fix":{"range":[1010,1010],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":37,"column":39,"nodeType":null,"endLine":37,"endColumn":39,"fix":{"range":[1180,1180],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":46,"column":42,"nodeType":null,"endLine":46,"endColumn":42,"fix":{"range":[1389,1389],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":55,"column":24,"nodeType":null,"endLine":55,"endColumn":24,"fix":{"range":[1612,1612],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":65,"column":33,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":65,"endColumn":60},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'dropResult' is defined but never used.","line":65,"column":34,"nodeType":"Identifier","endLine":65,"endColumn":56},{"ruleId":"@typescript-eslint/no-empty-function","severity":2,"message":"Unexpected empty arrow function.","line":65,"column":61,"nodeType":"ArrowFunctionExpression","messageId":"unexpected"}],"errorCount":6,"warningCount":5,"fixableErrorCount":5,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { Payload, ManagerRelationship } from \"../types\";\nimport { makeManager } from \"../manager\";\nimport { makeCombinedManager } from \"../combined-manager\";\nimport { ViewManager } from \"./view-manager\";\nimport { ListCard as MainView } from \"./container-components\";\nimport { enableLocalStorage } from \"../enable-localstorage\";\nimport { Todo, TodoView } from \"./custom-types\";\n\nconst todosId = \"todos\";\nconst todosManager = makeManager<Todo>(todosId);\n\ntodosManager.addValidator((todo: Todo) => {\n  if (!todo.title) {\n    return [\"Empty string\"];\n  }\n  return [];\n});\n\nconst adaptToChild = (todo: Payload<Todo>): Payload<TodoView> => {\n  const childPayload: Payload<TodoView> = {\n    checked: todo.completed,\n    primary: todo.title\n  };\n\n  return todo.errors\n    ? {\n        ...childPayload,\n        primaryError: Boolean(todo.errors.length),\n        primaryHelperText: todo.errors.join(\", \")\n      }\n    : childPayload;\n};\nconst adaptToParent = (todoView: Payload<TodoView>): Payload<Todo> => ({\n  title: todoView.primary,\n  completed: Boolean(todoView.checked)\n});\n\nconst todosViewId = \"todosView\";\nconst todosViewManager = todosManager.progenyHandler.addChild<TodoView>(\n  todosViewId,\n  {\n    adaptToParent,\n    adaptToChild,\n    relationship: ManagerRelationship.MAP\n  }\n);\n\nconst todosROOTViewId = \"todosROOTView\";\nconst todosROOTViewManager = todosViewManager.progenyHandler.addChild<TodoView>(\n  todosROOTViewId,\n  {\n    relationship: ManagerRelationship.FILTER,\n    selectionId: \"ROOT\"\n  }\n);\n\nenableLocalStorage(todosManager);\n\nexport const combinedManager = makeCombinedManager([todosManager]);\n\nexport const Main: FunctionComponent = () => {\n  return (\n    <DragDropContext onDragEnd={(dropResult: DropResult) => {}}>\n      <ViewManager\n        key={todosROOTViewId}\n        manager={todosROOTViewManager}\n        Component={MainView}\n      />\n    </DragDropContext>\n  );\n};\n\nexport default Main;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/components/menu.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'IconButton' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Popover' is defined but never used.","line":2,"column":22,"nodeType":"Identifier","endLine":2,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MenuList' is defined but never used.","line":2,"column":31,"nodeType":"Identifier","endLine":2,"endColumn":39},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MenuItem' is defined but never used.","line":2,"column":41,"nodeType":"Identifier","endLine":2,"endColumn":49},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MoreVert' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":18},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":14,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":14,"endColumn":64},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":18,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":18,"endColumn":28},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":22,"column":64,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":22,"endColumn":69},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":44,"column":31,"nodeType":null,"endLine":44,"endColumn":31,"fix":{"range":[1256,1256],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":48,"column":31,"nodeType":null,"endLine":48,"endColumn":31,"fix":{"range":[1352,1352],"text":","}}],"errorCount":2,"warningCount":9,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React, { FunctionComponent, useState, MouseEvent } from \"react\";\nimport { IconButton, Popover, MenuList, MenuItem } from \"@material-ui/core\";\nimport { MoreVert } from \"@material-ui/icons\";\nimport { VisibilityFilter } from \"../types\";\n\nexport const Menu: FunctionComponent<{\n  visibilityFilter: VisibilityFilter;\n  setVisibilityFilter: (visibilityFilter: VisibilityFilter) => void;\n}> = ({ visibilityFilter, setVisibilityFilter }) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const changeFilter = (visibilityFilter: VisibilityFilter) => () => {\n    setVisibilityFilter(visibilityFilter);\n    handleClose();\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"setting\"\n        aria-controls=\"menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVert />\n      </IconButton>\n      <Popover\n        id=\"menu\"\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n      >\n        <MenuList dense>\n          {visibilityFilter !== VisibilityFilter.SHOW_ALL && (\n            <MenuItem onClick={changeFilter(VisibilityFilter.SHOW_ALL)}>\n              Show all\n            </MenuItem>\n          )}\n          {visibilityFilter !== VisibilityFilter.SHOW_ACTIVE && (\n            <MenuItem onClick={changeFilter(VisibilityFilter.SHOW_ACTIVE)}>\n              Show active\n            </MenuItem>\n          )}\n          {visibilityFilter !== VisibilityFilter.SHOW_COMPLETED && (\n            <MenuItem onClick={changeFilter(VisibilityFilter.SHOW_COMPLETED)}>\n              Show completed\n            </MenuItem>\n          )}\n          {visibilityFilter !== VisibilityFilter.SHOW_INVALID && (\n            <MenuItem onClick={changeFilter(VisibilityFilter.SHOW_INVALID)}>\n              Show invalid\n            </MenuItem>\n          )}\n        </MenuList>\n      </Popover>\n    </div>\n  );\n};\n\nexport default Menu;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/components/view-manager.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Grid' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":21,"column":28,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":24,"endColumn":27},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":21,"column":39,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":21,"endColumn":42,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[735,738],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[735,738],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Component' is defined but never used.","line":23,"column":3,"nodeType":"Identifier","endLine":23,"endColumn":12},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":23,"column":12,"nodeType":null,"endLine":23,"endColumn":12,"fix":{"range":[764,764],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":27,"column":77,"nodeType":null,"endLine":27,"endColumn":77,"fix":{"range":[937,937],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":36,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":36,"endColumn":30},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":39,"column":14,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":39,"endColumn":33},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":42,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":42,"endColumn":46},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":46,"column":28,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":46,"endColumn":67},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":49,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":49,"endColumn":53},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":56,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":59,"endColumn":27},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":56,"column":43,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":56,"endColumn":46,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1730,1733],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1730,1733],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":58,"column":12,"nodeType":null,"endLine":58,"endColumn":12,"fix":{"range":[1759,1759],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":62,"column":19,"nodeType":null,"endLine":62,"endColumn":19,"fix":{"range":[1870,1870],"text":","}},{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":80,"column":22,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":80,"endColumn":54}],"errorCount":4,"warningCount":13,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport { Payload, Manager, VisibilityFilter } from \"../types\";\n\nexport interface ContainerComponentProps<T> {\n  views: Map<string, Payload<T>>;\n  create: (payload: T) => void;\n  close: (viewId: string) => void;\n  update: (viewId: string, payload: T) => void;\n  expand: (viewId: string, expanded: boolean) => void;\n  visibilityFilter: VisibilityFilter;\n  setVisibilityFilter: (visibilityFilter: VisibilityFilter) => void;\n}\n\nexport interface ViewManagerProps<T> {\n  manager: Manager<T>;\n  Component: FunctionComponent<ContainerComponentProps<T>>;\n}\n\nexport const ViewManager = <T extends any>({\n  manager,\n  Component\n}: ViewManagerProps<T>) => {\n  const {\n    stateSelectors: { getItemMap, getVisibilityFilter },\n    actionCreators: { create, destroy, modify, setVisibilityFilter, expand }\n  } = manager;\n  const dispatch = useDispatch();\n  const views = useSelector(getItemMap);\n  const visibilityFilter = useSelector(getVisibilityFilter);\n\n  return (\n    <Component\n      views={views}\n      create={(payload: T) => {\n        dispatch(create(payload));\n      }}\n      close={(viewId: string) => {\n        dispatch(destroy(viewId));\n      }}\n      update={(viewId: string, payload: T) => {\n        dispatch(modify(viewId, payload));\n      }}\n      visibilityFilter={visibilityFilter}\n      setVisibilityFilter={(visibilityFilter: VisibilityFilter) =>\n        dispatch(setVisibilityFilter(visibilityFilter))\n      }\n      expand={(viewId: string, expanded: boolean) => {\n        dispatch(expand(viewId, expanded));\n      }}\n    />\n  );\n};\n\nexport const DualViewManager = <T extends any>({\n  manager,\n  Component\n}: ViewManagerProps<T>) => {\n  const {\n    stateSelectors: { getItemMap, getSelectionMap },\n    progenyHandler\n  } = manager;\n  const views = useSelector(getItemMap);\n  const selections = useSelector(getSelectionMap);\n  const expandedViews = Array.from(views).filter(([viewId]) =>\n    selections.has(viewId)\n  );\n\n  console.log(expandedViews);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} md={expandedViews.length ? 6 : 12}>\n        <ViewManager manager={manager} Component={Component} />\n      </Grid>\n      {expandedViews.map(([viewId]) => (\n        <Grid item key={viewId} xs={12} md={6}>\n          <ViewManager\n            manager={progenyHandler.getChild(viewId)!}\n            Component={Component}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/index.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ApolloProvider' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":24},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","endLine":5,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Pages' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","endLine":6,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Login' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","endLine":7,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'GlobalStyle' is defined but never used.","line":8,"column":10,"nodeType":"Identifier","endLine":8,"endColumn":21},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":17,"column":49,"nodeType":null,"endLine":17,"endColumn":49,"fix":{"range":[642,642],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":18,"column":4,"nodeType":null,"endLine":18,"endColumn":4,"fix":{"range":[646,646],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":25,"column":12,"nodeType":null,"endLine":25,"endColumn":12,"fix":{"range":[763,763],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":31,"column":18,"nodeType":null,"endLine":31,"endColumn":18,"fix":{"range":[863,863],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":32,"column":4,"nodeType":null,"endLine":32,"endColumn":4,"fix":{"range":[867,867],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":41,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":41,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'IsLoggedIn' is defined but never used.","line":41,"column":10,"nodeType":"Identifier","endLine":41,"endColumn":20},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":46,"column":13,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":46,"endColumn":18}],"errorCount":5,"warningCount":8,"fixableErrorCount":5,"fixableWarningCount":0,"source":"import { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache, NormalizedCacheObject } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport React from \"react\";\nimport Pages from \"./pages\";\nimport Login from \"./pages/login\";\nimport { GlobalStyle } from \"./styles\";\nimport { resolvers, typeDefs } from \"./resolvers\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"http://localhost:4000/\",\n  headers: {\n    authorization: localStorage.getItem(\"token\")\n  }\n});\n\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  cache,\n  link,\n  typeDefs,\n  resolvers\n});\n\ncache.writeData({\n  data: {\n    isLoggedIn: !!localStorage.getItem(\"token\"),\n    cartItems: []\n  }\n});\n\nconst IS_LOGGED_IN = gql`\n  query IsUserLoggedIn {\n    isLoggedIn @client\n  }\n`;\n\nfunction IsLoggedIn() {\n  const { data } = useQuery(IS_LOGGED_IN);\n  return data.isLoggedIn ? <Pages /> : <Login />;\n}\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <GlobalStyle />\n      <IsLoggedIn />\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/resolvers.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":24,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":24,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[565,568],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[565,568],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":25,"column":9,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":25,"endColumn":12,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[578,581],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[578,581],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":26,"column":35,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":26,"endColumn":38,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[617,620],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[617,620],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":27,"column":6,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":27,"endColumn":9,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[629,632],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[629,632],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":42,"column":30,"nodeType":null,"endLine":42,"endColumn":30,"fix":{"range":[1023,1023],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":48,"column":6,"nodeType":null,"endLine":48,"endColumn":6,"fix":{"range":[1150,1150],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":53,"column":30,"nodeType":null,"endLine":53,"endColumn":30,"fix":{"range":[1353,1353],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":60,"column":33,"nodeType":null,"endLine":60,"endColumn":33,"fix":{"range":[1579,1579],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":66,"column":6,"nodeType":null,"endLine":66,"endColumn":6,"fix":{"range":[1711,1711],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":67,"column":4,"nodeType":null,"endLine":67,"endColumn":4,"fix":{"range":[1715,1715],"text":","}}],"errorCount":6,"warningCount":4,"fixableErrorCount":6,"fixableWarningCount":0,"source":"import gql from \"graphql-tag\";\nimport { GET_CART_ITEMS } from \"./pages/cart\";\nimport * as LaunchTileTypes from \"./pages/__generated__/LaunchTile\";\nimport { ApolloCache } from \"apollo-cache\";\nimport * as GetCartItemTypes from \"./pages/__generated__/GetCartItems\";\nimport { Resolvers } from \"apollo-client\";\n\nexport const typeDefs = gql`\n  extend type Query {\n    isLoggedIn: Boolean!\n    cartItems: [ID!]!\n  }\n\n  extend type Launch {\n    isInCart: Boolean!\n  }\n\n  extend type Mutation {\n    addOrRemoveFromCart(id: ID!): [ID!]!\n  }\n`;\n\ntype ResolverFn = (\n  parent: any,\n  args: any,\n  { cache }: { cache: ApolloCache<any> }\n) => any;\n\ninterface ResolverMap {\n  [field: string]: ResolverFn;\n}\n\ninterface AppResolvers extends Resolvers {\n  Launch: ResolverMap;\n  Mutation: ResolverMap;\n}\n\nexport const resolvers: AppResolvers = {\n  Launch: {\n    isInCart: (launch: LaunchTileTypes.LaunchTile, _, { cache }): boolean => {\n      const queryResult = cache.readQuery<GetCartItemTypes.GetCartItems>({\n        query: GET_CART_ITEMS\n      });\n      if (queryResult) {\n        return queryResult.cartItems.includes(launch.id);\n      }\n      return false;\n    }\n  },\n  Mutation: {\n    addOrRemoveFromCart: (_, { id }: { id: string }, { cache }): string[] => {\n      const queryResult = cache.readQuery<GetCartItemTypes.GetCartItems>({\n        query: GET_CART_ITEMS\n      });\n      if (queryResult) {\n        const { cartItems } = queryResult;\n        const data = {\n          cartItems: cartItems.includes(id)\n            ? cartItems.filter((i) => i !== id)\n            : [...cartItems, id]\n        };\n        cache.writeQuery({ query: GET_CART_ITEMS, data });\n        return data.cartItems;\n      }\n      return [];\n    }\n  }\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/styles.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Global' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":16},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":12,"column":27,"nodeType":null,"endLine":12,"endColumn":27,"fix":{"range":[294,294],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":19,"column":23,"nodeType":null,"endLine":19,"endColumn":23,"fix":{"range":[438,438],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":26,"column":27,"nodeType":null,"endLine":26,"endColumn":27,"fix":{"range":[624,624],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":31,"column":26,"nodeType":null,"endLine":31,"endColumn":26,"fix":{"range":[734,734],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":34,"column":32,"nodeType":null,"endLine":34,"endColumn":32,"fix":{"range":[788,788],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":38,"column":24,"nodeType":null,"endLine":38,"endColumn":24,"fix":{"range":[899,899],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":42,"column":22,"nodeType":null,"endLine":42,"endColumn":22,"fix":{"range":[964,964],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":45,"column":21,"nodeType":null,"endLine":45,"endColumn":21,"fix":{"range":[1006,1006],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":48,"column":21,"nodeType":null,"endLine":48,"endColumn":21,"fix":{"range":[1048,1048],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":53,"column":25,"nodeType":null,"endLine":53,"endColumn":25,"fix":{"range":[1152,1152],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":54,"column":8,"nodeType":null,"endLine":54,"endColumn":8,"fix":{"range":[1160,1160],"text":","}}],"errorCount":11,"warningCount":2,"fixableErrorCount":11,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport { Global } from \"@emotion/core\";\n\nexport const unit = 8;\nexport const colors = {\n  primary: \"#220a82\",\n  secondary: \"#14cbc4\",\n  accent: \"#e535ab\",\n  background: \"#f7f8fa\",\n  grey: \"#d8d9e0\",\n  text: \"#343c5a\",\n  textSecondary: \"#747790\"\n};\n\nexport const GlobalStyle: FunctionComponent = () => (\n  <Global\n    styles={{\n      [[\"html\", \"body\"].toString()]: {\n        height: \"100%\"\n      },\n      body: {\n        margin: 0,\n        padding: 0,\n        fontFamily: \"'Source Sans Pro', sans-serif\",\n        backgroundColor: colors.background,\n        color: colors.text\n      },\n      \"#root\": {\n        display: \"flex\",\n        flexDirection: \"column\",\n        minHeight: \"100%\"\n      },\n      \"*\": {\n        boxSizing: \"border-box\"\n      },\n      [[\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"].toString()]: {\n        margin: 0,\n        fontWeight: 600\n      },\n      h1: {\n        fontSize: 48,\n        lineHeight: 1\n      },\n      h2: {\n        fontSize: 40\n      },\n      h3: {\n        fontSize: 36\n      },\n      h5: {\n        fontSize: 16,\n        textTransform: \"uppercase\",\n        letterSpacing: 4\n      }\n    }}\n  />\n);\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__testHelpers__/App.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Provider' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Layout' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","endLine":5,"endColumn":16},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":17,"column":55,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":17,"endColumn":69},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'InnerList' is assigned a value but never used.","line":22,"column":9,"nodeType":"Identifier","endLine":22,"endColumn":37},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":28,"column":29,"nodeType":null,"endLine":28,"endColumn":29,"fix":{"range":[1006,1006],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":36,"column":52,"nodeType":null,"endLine":36,"endColumn":52,"fix":{"range":[1230,1230],"text":","}},{"ruleId":"new-cap","severity":2,"message":"A function with a name starting with an uppercase letter should only be used as a constructor.","line":50,"column":60,"nodeType":"CallExpression","messageId":"upper"},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":54,"column":21,"nodeType":null,"endLine":54,"endColumn":21,"fix":{"range":[1502,1502],"text":","}}],"errorCount":4,"warningCount":5,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import React, { FunctionComponent } from \"react\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport { Layout } from \"../Layout\";\nimport { tmpId, rootId } from \"../todo\";\nimport { resetTodos, setVisibilityFilter } from \"../action-creators\";\nimport { combinedReducer } from \"../reducers\";\nimport { mainSaga } from \"../sagas\";\nimport { VisibilityFilter } from \"../types\";\n\nexport const AppFactory: (\n  fn: (\n    item: string,\n    i: number\n  ) => { id: string; title: string; completed: boolean }\n) => FunctionComponent<{ items: string[] }> = (fn) => ({ items }) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(combinedReducer, applyMiddleware(sagaMiddleware));\n  sagaMiddleware.run(mainSaga);\n\n  const InnerList: FunctionComponent = () => {\n    const dispatch = useDispatch();\n\n    dispatch(\n      resetTodos({\n        partId: rootId,\n        todos: items.map(fn)\n      })\n    );\n\n    // Make sure, whatever the default filter, that tests start with all items displayed\n    dispatch(\n      setVisibilityFilter({\n        viewId: rootId,\n        visibilityFilter: VisibilityFilter.SHOW_ALL\n      })\n    );\n\n    return <Layout />;\n  };\n\n  return (\n    <Provider store={store}>\n      <InnerList />\n    </Provider>\n  );\n};\n\nexport const App: FunctionComponent<{ items: string[] }> = AppFactory(\n  (item) => ({\n    id: tmpId(),\n    title: item,\n    completed: false\n  })\n);\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__tests__/basic-actions.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":7,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":12,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":15,"column":12,"nodeType":null,"endLine":15,"endColumn":12,"fix":{"range":[508,508],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":19,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":30,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":30,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":35,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":35,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":40,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":40,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":46,"column":18,"nodeType":null,"endLine":46,"endColumn":18,"fix":{"range":[1409,1409],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":50,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":50,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":53,"column":12,"nodeType":null,"endLine":53,"endColumn":12,"fix":{"range":[1577,1577],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":57,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":57,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":67,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":67,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":73,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":73,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":81,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":81,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":87,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":87,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":94,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":94,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":97,"column":12,"nodeType":null,"endLine":97,"endColumn":12,"fix":{"range":[2838,2838],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":102,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":102,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":105,"column":12,"nodeType":null,"endLine":105,"endColumn":12,"fix":{"range":[3049,3049],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":110,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":110,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":113,"column":12,"nodeType":null,"endLine":113,"endColumn":12,"fix":{"range":[3259,3259],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":118,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":118,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":121,"column":12,"nodeType":null,"endLine":121,"endColumn":12,"fix":{"range":[3470,3470],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":125,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":125,"endColumn":5},{"ruleId":"prefer-const","severity":2,"message":"'buttons' is never reassigned. Use 'const' instead.","line":138,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":138,"endColumn":16,"fix":{"range":[3985,3988],"text":"const"}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":142,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":142,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":145,"column":12,"nodeType":null,"endLine":145,"endColumn":12,"fix":{"range":[4195,4195],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":147,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":147,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":150,"column":11,"nodeType":null,"endLine":150,"endColumn":11,"fix":{"range":[4302,4302],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":156,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":156,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":157,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":157,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":164,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":164,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":167,"column":13,"nodeType":null,"endLine":167,"endColumn":13,"fix":{"range":[4926,4926],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":169,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":169,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":172,"column":12,"nodeType":null,"endLine":172,"endColumn":12,"fix":{"range":[5033,5033],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":180,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":180,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":184,"column":15,"nodeType":null,"endLine":184,"endColumn":15,"fix":{"range":[5363,5363],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":186,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":186,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":190,"column":12,"nodeType":null,"endLine":190,"endColumn":12,"fix":{"range":[5483,5483],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":197,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":197,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":201,"column":15,"nodeType":null,"endLine":201,"endColumn":15,"fix":{"range":[5771,5771],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":203,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":203,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":207,"column":12,"nodeType":null,"endLine":207,"endColumn":12,"fix":{"range":[5890,5890],"text":","}}],"errorCount":44,"warningCount":2,"fixableErrorCount":16,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { render, fireEvent, within } from \"@testing-library/react\";\nimport userEvents from \"@testing-library/user-event\";\nimport { App, getDeleteButtons } from \"../__testHelpers__\";\n\ndescribe(\"TodoList\", () => {\n  it(\"Initialize\", () => {\n    const { getAllByRole } = render(<App items={[\"foo\", \"bar\", \"baz\"]} />);\n\n    const listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foo\",\n      \"bar\",\n      \"baz\"\n    ]);\n  });\n\n  it(\"Add\", async () => {\n    const { getByRole, getByText, getAllByRole } = render(\n      <App items={[\"foo\"]} />\n    );\n\n    const textbox = getByRole(\"textbox\") as HTMLInputElement;\n    const addButton = getByText(/add/i) as HTMLButtonElement;\n\n    await userEvents.type(textbox, \"bar\");\n\n    let listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"foo\"]);\n\n    userEvents.click(addButton);\n\n    listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"foo\", \"bar\"]);\n\n    await userEvents.type(textbox, \"baz\");\n\n    listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"foo\", \"bar\"]);\n\n    fireEvent.keyPress(textbox, {\n      key: \"Enter\",\n      code: 13,\n      charCode: 13,\n      keyCode: 13\n    });\n\n    listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foo\",\n      \"bar\",\n      \"baz\"\n    ]);\n  });\n\n  it(\"Remove\", () => {\n    const { getByRole } = render(<App items={[\"foo\", \"bar\", \"baz\"]} />);\n\n    const list = getByRole(\"list\") as HTMLUListElement;\n    const { getAllByRole } = within(list);\n\n    let buttons = getDeleteButtons(list);\n    userEvents.click(buttons[0]);\n\n    let listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"bar\", \"baz\"]);\n\n    buttons = getDeleteButtons(list);\n    userEvents.click(buttons[1]);\n\n    listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"bar\"]);\n\n    buttons = getDeleteButtons(list);\n    userEvents.click(buttons[0]);\n\n    try {\n      getAllByRole(\"listitem\");\n    } catch (e) {\n      expect(e.message).toContain(\n        `Unable to find an accessible element with the role \"listitem\"`\n      );\n    }\n  });\n\n  it(\"Check\", () => {\n    const { getByRole } = render(<App items={[\"foo\", \"bar\", \"baz\"]} />);\n\n    const list = getByRole(\"list\") as HTMLUListElement;\n    const { getAllByRole } = within(list);\n\n    let checkboxes = getAllByRole(\"checkbox\") as HTMLInputElement[];\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      false,\n      false,\n      false\n    ]);\n\n    userEvents.click(checkboxes[0]);\n    checkboxes = getAllByRole(\"checkbox\") as HTMLInputElement[];\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      true,\n      false,\n      false\n    ]);\n\n    userEvents.click(checkboxes[1]);\n    checkboxes = getAllByRole(\"checkbox\") as HTMLInputElement[];\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      true,\n      true,\n      false\n    ]);\n\n    userEvents.click(checkboxes[0]);\n    checkboxes = getAllByRole(\"checkbox\") as HTMLInputElement[];\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      false,\n      true,\n      false\n    ]);\n  });\n\n  it(\"Check/Add/Remove\", async () => {\n    const { getByRole, getByText } = render(\n      <App items={[\"foo\", \"bar\", \"baz\"]} />\n    );\n\n    const list = getByRole(\"list\") as HTMLUListElement;\n    const { getAllByRole } = within(list);\n\n    const textbox = getByRole(\"textbox\") as HTMLInputElement;\n    const addButton = getByText(/add/i) as HTMLButtonElement;\n\n    let checkboxes = getAllByRole(\"checkbox\") as HTMLInputElement[];\n    let listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    let buttons = getDeleteButtons(list);\n\n    userEvents.click(checkboxes[0]);\n    userEvents.click(checkboxes[2]);\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foo\",\n      \"bar\",\n      \"baz\"\n    ]);\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      true,\n      false,\n      true\n    ]);\n\n    userEvents.click(buttons[1]);\n    checkboxes = getAllByRole(\"checkbox\") as HTMLInputElement[];\n    listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"foo\", \"baz\"]);\n    expect(checkboxes.map((input) => input.checked)).toEqual([true, true]);\n\n    await userEvents.type(textbox, \"quux\");\n    userEvents.click(addButton);\n    checkboxes = getAllByRole(\"checkbox\") as HTMLInputElement[];\n    listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foo\",\n      \"baz\",\n      \"quux\"\n    ]);\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      true,\n      true,\n      false\n    ]);\n\n    await userEvents.type(textbox, \"foobar\");\n    userEvents.click(addButton);\n    checkboxes = getAllByRole(\"checkbox\") as HTMLInputElement[];\n    listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foo\",\n      \"baz\",\n      \"quux\",\n      \"foobar\"\n    ]);\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      true,\n      true,\n      false,\n      false\n    ]);\n\n    userEvents.click(checkboxes[2]);\n    checkboxes = getAllByRole(\"checkbox\") as HTMLInputElement[];\n    listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foo\",\n      \"baz\",\n      \"quux\",\n      \"foobar\"\n    ]);\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      true,\n      true,\n      true,\n      false\n    ]);\n  });\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__tests__/dnd.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":3,"column":3,"nodeType":"Identifier","endLine":3,"endColumn":6},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":7,"column":9,"nodeType":null,"endLine":7,"endColumn":9,"fix":{"range":[114,114],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":11,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":16,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":19,"column":12,"nodeType":null,"endLine":19,"endColumn":12,"fix":{"range":[442,442],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":23,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":37,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":37,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":41,"column":13,"nodeType":null,"endLine":41,"endColumn":13,"fix":{"range":[1056,1056],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":46,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":46,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":50,"column":13,"nodeType":null,"endLine":50,"endColumn":13,"fix":{"range":[1259,1259],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":55,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":55,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":59,"column":13,"nodeType":null,"endLine":59,"endColumn":13,"fix":{"range":[1462,1462],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":64,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":64,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":68,"column":13,"nodeType":null,"endLine":68,"endColumn":13,"fix":{"range":[1665,1665],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":72,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":72,"endColumn":7}],"errorCount":15,"warningCount":2,"fixableErrorCount":6,"fixableWarningCount":0,"source":"import React from \"react\";\nimport {\n  App,\n  getDroppables,\n  getDraggables,\n  mockGetBoundingClientRect,\n  render\n} from \"../__testHelpers__\";\n\ndescribe(\"DnD App\", () => {\n  it(\"Initialize\", () => {\n    const { getAllByRole } = render(<App items={[\"foo\", \"bar\", \"baz\"]} />);\n\n    const listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foo\",\n      \"bar\",\n      \"baz\"\n    ]);\n  });\n\n  it(\"Drag and drop\", async () => {\n    const { getAllByRole, container, dnd } = render(\n      <App items={[\"foo\", \"bar\", \"baz\", \"quux\"]} />\n    );\n\n    const droppables = getDroppables(container);\n\n    droppables.forEach((droppable) => {\n      mockGetBoundingClientRect(droppable);\n      const draggables = getDraggables(droppable);\n      draggables.forEach((draggable) => mockGetBoundingClientRect(draggable));\n    });\n\n    let listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foo\",\n      \"bar\",\n      \"baz\",\n      \"quux\"\n    ]);\n\n    await dnd(0, 2);\n    listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"bar\",\n      \"baz\",\n      \"foo\",\n      \"quux\"\n    ]);\n\n    await dnd(0, 2);\n    listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"baz\",\n      \"foo\",\n      \"bar\",\n      \"quux\"\n    ]);\n\n    await dnd(1, 0);\n    listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foo\",\n      \"baz\",\n      \"bar\",\n      \"quux\"\n    ]);\n  });\n\n  test.todo(\"Drag and drop/Check: BEWARE OF VIEW/AUTOSORT\");\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__tests__/edit.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'defaultTitle' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","endLine":5,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":11,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":5},{"ruleId":"prefer-const","severity":2,"message":"'listitem' is never reassigned. Use 'const' instead.","line":18,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":18,"endColumn":17,"fix":{"range":[655,658],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'text' is never reassigned. Use 'const' instead.","line":21,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":21,"endColumn":13,"fix":{"range":[758,761],"text":"const"}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":24,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":24,"endColumn":11},{"ruleId":"prefer-const","severity":2,"message":"'textbox' is never reassigned. Use 'const' instead.","line":26,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":26,"endColumn":16,"fix":{"range":[882,885],"text":"const"}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":33,"column":18,"nodeType":null,"endLine":33,"endColumn":18,"fix":{"range":[1092,1092],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":35,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":35,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":37,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":37,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":40,"column":12,"nodeType":null,"endLine":40,"endColumn":12,"fix":{"range":[1248,1248],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":44,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":44,"endColumn":7}],"errorCount":11,"warningCount":3,"fixableErrorCount":5,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { render, fireEvent, within } from \"@testing-library/react\";\nimport userEvents from \"@testing-library/user-event\";\nimport { defaultTitle } from \"../Layout\";\nimport { App } from \"../__testHelpers__\";\n\n// const CONTENT_ATTRIBUTE = \".MuiCardHeader-content\";\n// const TITLE_ATTRIBUTE = \".MuiCardHeader-title\";\n\ndescribe(\"TodoList\", () => {\n  it(\"Edit Item primary\", async () => {\n    const { getByRole } = render(<App items={[\"foo\", \"bar\", \"baz\"]} />);\n\n    const list = getByRole(\"list\") as HTMLUListElement;\n    const { getAllByRole } = within(list);\n\n    const listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    let listitem = listitems[1];\n    const { getByRole: subGetByRole, getByText } = within(listitem);\n\n    let text = getByText(\"bar\") as HTMLSpanElement;\n\n    userEvents.click(text);\n    expect(text).not.toBeInTheDocument();\n\n    let textbox = subGetByRole(\"textbox\") as HTMLInputElement;\n\n    await userEvents.type(textbox, \"bozo\");\n    fireEvent.keyDown(textbox, {\n      key: \"Enter\",\n      code: 13,\n      charCode: 13,\n      keyCode: 13\n    });\n    expect(textbox).not.toBeInTheDocument();\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foo\",\n      \"barbozo\",\n      \"baz\"\n    ]);\n  });\n\n  test.todo(\"Edit card title\");\n  // it(\"Edit title\", async () => {\n  //   const { container } = render(<App items={[\"foo\", \"bar\", \"baz\"]} />);\n\n  //   const cardHeaderContent = container.querySelector(\n  //     CONTENT_ATTRIBUTE\n  //   ) as HTMLElement;\n  //   const { getByRole, getByText } = within(cardHeaderContent);\n\n  //   const text = getByText(defaultTitle) as HTMLSpanElement;\n\n  //   userEvents.click(text);\n  //   expect(text).not.toBeInTheDocument();\n\n  //   const textbox = getByRole(\"textbox\") as HTMLInputElement;\n\n  //   await userEvents.type(textbox, \"bozo\");\n  //   fireEvent.keyDown(textbox, {\n  //     key: \"Enter\",\n  //     code: 13,\n  //     charCode: 13,\n  //     keyCode: 13\n  //   });\n  //   expect(textbox).not.toBeInTheDocument();\n\n  //   const title = cardHeaderContent.querySelector(\n  //     TITLE_ATTRIBUTE\n  //   ) as HTMLElement;\n  //   expect(title.textContent).toEqual(defaultTitle + \"bozo\");\n  // });\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__tests__/expand.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":7,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":12,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":15,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":11},{"ruleId":"prefer-const","severity":2,"message":"'buttons' is never reassigned. Use 'const' instead.","line":17,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":17,"endColumn":16,"fix":{"range":[578,581],"text":"const"}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":20,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":21,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":24,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":24,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":29,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":29,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":30,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":30,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":35,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":35,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":36,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":36,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":39,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":39,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":42,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":42,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":43,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":43,"endColumn":11}],"errorCount":15,"warningCount":2,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { render } from \"@testing-library/react\";\nimport userEvents from \"@testing-library/user-event\";\nimport { App, getExpandButtons, getCloseButtons } from \"../__testHelpers__\";\n\ndescribe(\"TodoList\", () => {\n  it(\"Expand item\", () => {\n    const { getByRole, getAllByRole, getAllByText } = render(\n      <App items={[\"foo\", \"bar\", \"baz\"]} />\n    );\n\n    expect(Array.from(getAllByRole(\"list\"))).toHaveLength(1);\n\n    // \"foo\" is the current todo, so shows up also in the main header\n    expect(Array.from(getAllByText(\"foo\"))).toHaveLength(2);\n\n    let buttons = getExpandButtons(getByRole(\"list\") as HTMLUListElement);\n    userEvents.click(buttons[0]);\n\n    expect(Array.from(getAllByRole(\"list\"))).toHaveLength(2);\n    expect(Array.from(getAllByText(\"foo\"))).toHaveLength(3);\n  });\n\n  it(\"Close item\", () => {\n    const { getByRole, getAllByRole, getAllByText } = render(\n      <App items={[\"foo\", \"bar\", \"baz\"]} />\n    );\n\n    expect(Array.from(getAllByRole(\"list\"))).toHaveLength(1);\n    expect(Array.from(getAllByText(\"bar\"))).toHaveLength(1);\n\n    let buttons = getExpandButtons(getByRole(\"list\") as HTMLUListElement);\n    userEvents.click(buttons[1]);\n\n    expect(Array.from(getAllByRole(\"list\"))).toHaveLength(2);\n    expect(Array.from(getAllByText(\"bar\"))).toHaveLength(2);\n\n    buttons = getCloseButtons(document.body);\n    expect(buttons).toHaveLength(1);\n    userEvents.click(buttons[0]);\n\n    expect(Array.from(getAllByRole(\"list\"))).toHaveLength(1);\n    expect(Array.from(getAllByText(\"bar\"))).toHaveLength(1);\n  });\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__tests__/filters.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'App' is assigned a value but never used.","line":7,"column":7,"nodeType":"Identifier","endLine":7,"endColumn":10},{"ruleId":"new-cap","severity":2,"message":"A function with a name starting with an uppercase letter should only be used as a constructor.","line":7,"column":13,"nodeType":"CallExpression","messageId":"upper"},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":10,"column":22,"nodeType":null,"endLine":10,"endColumn":22,"fix":{"range":[335,335],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":14,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":28,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":28,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":31,"column":15,"nodeType":null,"endLine":31,"endColumn":15,"fix":{"range":[969,969],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":35,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":35,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":49,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":49,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":52,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":52,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":66,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":66,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":69,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":69,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":83,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":83,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":89,"column":15,"nodeType":null,"endLine":89,"endColumn":15,"fix":{"range":[2813,2813],"text":","}}],"errorCount":13,"warningCount":2,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { render, within } from \"@testing-library/react\";\nimport userEvents from \"@testing-library/user-event\";\nimport { tmpId } from \"../todo\";\nimport { AppFactory, getMenuButton } from \"../__testHelpers__\";\n\nconst App = AppFactory((item, i) => ({\n  id: tmpId(),\n  title: i ? item : \"\",\n  completed: !(i % 2)\n}));\n\ndescribe(\"Visibility filters\", () => {\n  it(\"SHOW_ACTIVE\", async () => {\n    const { container, getByRole } = render(\n      <App items={[\"foo\", \"bar\", \"baz\", \"qux\", \"quux\", \"foobar\"]} />\n    );\n\n    const menu = getMenuButton(container) as HTMLButtonElement;\n    userEvents.click(menu);\n\n    const menuItem = within(document.body).getByText(\"Show active\");\n    userEvents.click(menuItem);\n\n    const list = getByRole(\"list\") as HTMLUListElement;\n    const listitems = within(list).getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"bar\",\n      \"qux\",\n      \"foobar\"\n    ]);\n  });\n\n  it(\"SHOW_COMPLETED\", async () => {\n    const { container, getByRole } = render(\n      <App items={[\"foo\", \"bar\", \"baz\", \"qux\", \"quux\", \"foobar\"]} />\n    );\n\n    const menu = getMenuButton(container) as HTMLButtonElement;\n    userEvents.click(menu);\n\n    const menuItem = within(document.body).getByText(\"Show completed\");\n    userEvents.click(menuItem);\n\n    const list = getByRole(\"list\") as HTMLUListElement;\n    const listitems = within(list).getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\"\", \"baz\", \"quux\"]);\n  });\n\n  it(\"SHOW_INVALID\", async () => {\n    const { container, getByRole } = render(\n      <App items={[\"foo\", \"bar\", \"baz\", \"qux\", \"quux\", \"foobar\"]} />\n    );\n\n    const menu = getMenuButton(container) as HTMLButtonElement;\n    userEvents.click(menu);\n\n    const menuItem = within(document.body).getByText(\"Show invalid\");\n    userEvents.click(menuItem);\n\n    const list = getByRole(\"list\") as HTMLUListElement;\n    const listitems = within(list).getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\"\"]);\n  });\n\n  it(\"SHOW_ALL\", async () => {\n    const { container, getByRole } = render(\n      <App items={[\"foo\", \"bar\", \"baz\", \"qux\", \"quux\", \"foobar\"]} />\n    );\n\n    const menu = getMenuButton(container) as HTMLButtonElement;\n    userEvents.click(menu);\n    userEvents.click(within(document.body).getByText(\"Show active\"));\n    userEvents.click(menu);\n    userEvents.click(within(document.body).getByText(\"Show all\"));\n\n    const list = getByRole(\"list\") as HTMLUListElement;\n    const listitems = within(list).getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"\",\n      \"bar\",\n      \"baz\",\n      \"qux\",\n      \"quux\",\n      \"foobar\"\n    ]);\n  });\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__tests__/invalid.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":7,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"prefer-const","severity":2,"message":"'listitem' is never reassigned. Use 'const' instead.","line":14,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":14,"endColumn":17,"fix":{"range":[490,493],"text":"const"}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":18,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":21,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":5},{"ruleId":"prefer-const","severity":2,"message":"'listitem' is never reassigned. Use 'const' instead.","line":28,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":28,"endColumn":17,"fix":{"range":[965,968],"text":"const"}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":34,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":34,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":43,"column":18,"nodeType":null,"endLine":43,"endColumn":18,"fix":{"range":[1401,1401],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":46,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":46,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":47,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":47,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":50,"column":12,"nodeType":null,"endLine":50,"endColumn":12,"fix":{"range":[1553,1553],"text":","}}],"errorCount":11,"warningCount":2,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { render, fireEvent, within } from \"@testing-library/react\";\nimport userEvents from \"@testing-library/user-event\";\nimport { App } from \"../__testHelpers__\";\n\ndescribe(\"TodoList\", () => {\n  it(\"Show error\", () => {\n    const { getByRole } = render(<App items={[\"foo\", \"\", \"baz\"]} />);\n\n    const list = getByRole(\"list\") as HTMLUListElement;\n    const { getAllByRole } = within(list);\n\n    const listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    let listitem = listitems[1];\n    const { getByRole: subGetByRole } = within(listitem);\n\n    const alert = subGetByRole(\"alert\") as HTMLDivElement;\n    expect(alert.textContent).toEqual(\"\");\n  });\n\n  it(\"Correct error\", async () => {\n    const { getByRole } = render(<App items={[\"foo\", \"\", \"baz\"]} />);\n\n    const list = getByRole(\"list\") as HTMLUListElement;\n    const { getAllByRole } = within(list);\n\n    const listitems = getAllByRole(\"listitem\") as HTMLLIElement[];\n    let listitem = listitems[1];\n    const { getByRole: subGetByRole } = within(listitem);\n\n    const alert = subGetByRole(\"alert\") as HTMLDivElement;\n\n    userEvents.click(alert);\n    expect(alert).not.toBeInTheDocument();\n\n    const textbox = subGetByRole(\"textbox\") as HTMLInputElement;\n    await userEvents.type(textbox, \"bar\");\n\n    fireEvent.keyDown(textbox, {\n      key: \"Enter\",\n      code: 13,\n      charCode: 13,\n      keyCode: 13\n    });\n\n    expect(textbox).not.toBeInTheDocument();\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foo\",\n      \"bar\",\n      \"baz\"\n    ]);\n  });\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/components/button.tsx","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":25,"column":49,"nodeType":null,"endLine":25,"endColumn":49,"fix":{"range":[587,587],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":28,"column":49,"nodeType":null,"endLine":28,"endColumn":49,"fix":{"range":[656,656],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":29,"column":4,"nodeType":null,"endLine":29,"endColumn":4,"fix":{"range":[660,660],"text":","}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import styled from \"@emotion/styled\";\nimport { lighten } from \"polished\";\n\nimport { unit, colors } from \"../styles\";\n\nconst height = 50;\nexport default styled(\"button\")({\n  display: \"block\",\n  minWidth: 200,\n  height,\n  margin: \"0 auto\",\n  padding: `0 ${unit * 4}px`,\n  border: \"none\",\n  borderRadius: height / 2,\n  fontFamily: \"inherit\",\n  fontSize: 18,\n  lineHeight: `${height}px`,\n  fontWeight: 700,\n  color: \"white\",\n  textTransform: \"uppercase\",\n  backgroundColor: colors.accent,\n  cursor: \"pointer\",\n  outline: \"none\",\n  \":hover\": {\n    backgroundColor: lighten(0.1, colors.accent)\n  },\n  \":active\": {\n    backgroundColor: lighten(0.2, colors.accent)\n  }\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/components/footer.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MenuItem' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","endLine":4,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'LogoutButton' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","endLine":5,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'HomeIcon' is defined but never used.","line":6,"column":28,"nodeType":"Identifier","endLine":6,"endColumn":36},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CartIcon' is defined but never used.","line":7,"column":28,"nodeType":"Identifier","endLine":7,"endColumn":36},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ProfileIcon' is defined but never used.","line":8,"column":28,"nodeType":"Identifier","endLine":8,"endColumn":39},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":11,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":11,"endColumn":33},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Container' is assigned a value but never used.","line":37,"column":7,"nodeType":"Identifier","endLine":37,"endColumn":16},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":43,"column":12,"nodeType":null,"endLine":43,"endColumn":12,"fix":{"range":[1078,1078],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'InnerContainer' is assigned a value but never used.","line":46,"column":7,"nodeType":"Identifier","endLine":46,"endColumn":21},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":51,"column":19,"nodeType":null,"endLine":51,"endColumn":19,"fix":{"range":[1224,1224],"text":","}}],"errorCount":2,"warningCount":9,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport MenuItem from \"./menu-item\";\nimport LogoutButton from \"../containers/logout-button\";\nimport { ReactComponent as HomeIcon } from \"../assets/icons/home.svg\";\nimport { ReactComponent as CartIcon } from \"../assets/icons/cart.svg\";\nimport { ReactComponent as ProfileIcon } from \"../assets/icons/profile.svg\";\nimport { colors, unit } from \"../styles\";\n\nexport default function Footer() {\n  return (\n    <Container>\n      <InnerContainer>\n        <MenuItem to=\"/\">\n          <HomeIcon />\n          Home\n        </MenuItem>\n        <MenuItem to=\"/cart\">\n          <CartIcon />\n          Cart\n        </MenuItem>\n        <MenuItem to=\"/profile\">\n          <ProfileIcon />\n          Profile\n        </MenuItem>\n        <LogoutButton />\n      </InnerContainer>\n    </Container>\n  );\n}\n\n/**\n * STYLED COMPONENTS USED IN THIS FILE ARE BELOW HERE\n */\n\nconst Container = styled(\"footer\")({\n  flexShrink: 0,\n  marginTop: \"auto\",\n  backgroundColor: \"white\",\n  color: colors.textSecondary,\n  position: \"sticky\",\n  bottom: 0\n});\n\nconst InnerContainer = styled(\"div\")({\n  display: \"flex\",\n  alignItems: \"center\",\n  maxWidth: 460,\n  padding: unit * 2.5,\n  margin: \"0 auto\"\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/components/header.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":15,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":15,"endColumn":42},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":22,"column":20,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":22,"endColumn":23,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[722,725],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[722,725],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":23,"column":14,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":23,"endColumn":17,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[740,743],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[740,743],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":28,"column":30,"nodeType":null,"endLine":28,"endColumn":30,"fix":{"range":[827,827],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Container' is assigned a value but never used.","line":50,"column":7,"nodeType":"Identifier","endLine":50,"endColumn":16},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":53,"column":27,"nodeType":null,"endLine":53,"endColumn":27,"fix":{"range":[1349,1349],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Image' is assigned a value but never used.","line":56,"column":7,"nodeType":"Identifier","endLine":56,"endColumn":12},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":58,"column":43,"nodeType":null,"endLine":58,"endColumn":43,"fix":{"range":[1497,1497],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Subheading' is assigned a value but never used.","line":61,"column":7,"nodeType":"Identifier","endLine":61,"endColumn":17},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":63,"column":30,"nodeType":null,"endLine":63,"endColumn":30,"fix":{"range":[1590,1590],"text":","}}],"errorCount":4,"warningCount":6,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { size } from \"polished\";\n\nimport { unit, colors } from \"../styles\";\nimport dog1 from \"../assets/images/dog-1.png\";\nimport dog2 from \"../assets/images/dog-2.png\";\nimport dog3 from \"../assets/images/dog-3.png\";\n\nconst max = 25; // 25 letters in the alphabet\nconst offset = 97; // letter A's charcode is 97\nconst avatars = [dog1, dog2, dog3];\nconst maxIndex = avatars.length - 1;\n\nfunction pickAvatarByEmail(email: string) {\n  const charCode = email.toLowerCase().charCodeAt(0) - offset;\n  const percentile = Math.max(0, Math.min(max, charCode)) / max;\n  return avatars[Math.round(maxIndex * percentile)];\n}\n\ninterface HeaderProps {\n  image?: string | any;\n  children?: any;\n}\n\nconst Header: React.FC<HeaderProps> = ({\n  image,\n  children = \"Space Explorer\"\n}) => {\n  const email = atob(localStorage.getItem(\"token\") as string);\n  const avatar = image || pickAvatarByEmail(email);\n\n  return (\n    <Container>\n      <Image round={!image} src={avatar} alt=\"Space dog\" />\n      <div>\n        <h2>{children}</h2>\n        <Subheading>{email}</Subheading>\n      </div>\n    </Container>\n  );\n};\n\nexport default Header;\n\n/**\n * STYLED COMPONENTS USED IN THIS FILE ARE BELOW HERE\n */\n\nconst Container = styled(\"div\")({\n  display: \"flex\",\n  alignItems: \"center\",\n  marginBottom: unit * 4.5\n});\n\nconst Image = styled(\"img\")(size(134), (props: { round: boolean }) => ({\n  marginRight: unit * 2.5,\n  borderRadius: props.round ? \"50%\" : \"0%\"\n}));\n\nconst Subheading = styled(\"h5\")({\n  marginTop: unit / 2,\n  color: colors.textSecondary\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/components/index.tsx","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/components/launch-detail.tsx","messages":[{"ruleId":"@typescript-eslint/camelcase","severity":2,"message":"Identifier 'LaunchDetails_launch' is not in camel case.","line":5,"column":10,"nodeType":"Identifier","messageId":"notCamelCase","endLine":5,"endColumn":30},{"ruleId":"@typescript-eslint/camelcase","severity":2,"message":"Identifier 'LaunchDetails_launch' is not in camel case.","line":5,"column":10,"nodeType":"Identifier","messageId":"notCamelCase","endLine":5,"endColumn":30},{"ruleId":"@typescript-eslint/camelcase","severity":2,"message":"Identifier 'LaunchDetails_launch' is not in camel case.","line":7,"column":34,"nodeType":"Identifier","messageId":"notCamelCase","endLine":7,"endColumn":54},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":12,"column":56,"nodeType":null,"endLine":12,"endColumn":56,"fix":{"range":[455,455],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Card' is assigned a value but never used.","line":26,"column":7,"nodeType":"Identifier","endLine":26,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":28,"column":25,"nodeType":null,"endLine":28,"endColumn":25,"fix":{"range":[722,722],"text":","}}],"errorCount":5,"warningCount":1,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { unit } from \"../styles\";\nimport { cardClassName, getBackgroundImage } from \"./launch-tile\";\nimport { LaunchDetails_launch } from \"../pages/__generated__/LaunchDetails\";\n\ntype LaunchDetailProps = Partial<LaunchDetails_launch>;\n\nconst LaunchDetail: React.FC<LaunchDetailProps> = ({ id, site, rocket }) => (\n  <Card\n    style={{\n      backgroundImage: getBackgroundImage(id as string)\n    }}\n  >\n    <h3>\n      {rocket && rocket.name} ({rocket && rocket.type})\n    </h3>\n    <h5>{site}</h5>\n  </Card>\n);\n\n/**\n * STYLED COMPONENTS USED IN THIS FILE ARE BELOW HERE\n */\n\nconst Card = styled(\"div\")(cardClassName, {\n  height: 365,\n  marginBottom: unit * 4\n});\n\nexport default LaunchDetail;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/components/launch-tile.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":13,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":13,"endColumn":47},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":27,"column":48,"nodeType":null,"endLine":27,"endColumn":48,"fix":{"range":[835,835],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":47,"column":31,"nodeType":null,"endLine":47,"endColumn":31,"fix":{"range":[1224,1224],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'StyledLink' is assigned a value but never used.","line":51,"column":7,"nodeType":"Identifier","endLine":51,"endColumn":17},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":57,"column":30,"nodeType":null,"endLine":57,"endColumn":30,"fix":{"range":[1442,1442],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":58,"column":4,"nodeType":null,"endLine":58,"endColumn":4,"fix":{"range":[1446,1446],"text":","}}],"errorCount":4,"warningCount":2,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"@reach/router\";\n\nimport galaxy from \"../assets/images/galaxy.jpg\";\nimport iss from \"../assets/images/iss.jpg\";\nimport moon from \"../assets/images/moon.jpg\";\nimport { unit } from \"../styles\";\nimport * as LaunchTileTypes from \"../pages/__generated__/LaunchTile\";\n\nconst backgrounds = [galaxy, iss, moon];\nexport function getBackgroundImage(id: string) {\n  return `url(${backgrounds[Number(id) % backgrounds.length]})`;\n}\n\ninterface LaunchTileProps {\n  launch: LaunchTileTypes.LaunchTile;\n}\n\nconst LaunchTile: React.FC<LaunchTileProps> = ({ launch }) => {\n  const { id, mission, rocket } = launch;\n  return (\n    <StyledLink\n      to={`/launch/${id}`}\n      style={{\n        backgroundImage: getBackgroundImage(id)\n      }}\n    >\n      <h3>{mission ? mission.name : \"\"}</h3>\n      <h5>{rocket && rocket.name}</h5>\n    </StyledLink>\n  );\n};\n\nexport default LaunchTile;\n\n/**\n * STYLED COMPONENTS USED IN THIS FILE ARE BELOW HERE\n */\n\nexport const cardClassName = css({\n  padding: `${unit * 4}px ${unit * 5}px`,\n  borderRadius: 7,\n  color: \"white\",\n  backgroundSize: \"cover\",\n  backgroundPosition: \"center\"\n});\n\nconst padding = unit * 2;\nconst StyledLink = styled(Link)(cardClassName, {\n  display: \"block\",\n  height: 193,\n  marginTop: padding,\n  textDecoration: \"none\",\n  \":not(:last-child)\": {\n    marginBottom: padding * 2\n  }\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/components/loading.tsx","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":20,"column":44,"nodeType":null,"endLine":20,"endColumn":44,"fix":{"range":[467,467],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":21,"column":4,"nodeType":null,"endLine":21,"endColumn":4,"fix":{"range":[471,471],"text":","}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import styled from \"@emotion/styled\";\nimport { keyframes } from \"@emotion/core\";\nimport { size } from \"polished\";\n\nimport { ReactComponent as Logo } from \"../assets/logo.svg\";\nimport { colors } from \"../styles\";\n\nconst spin = keyframes`\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Loading = styled(Logo)(size(64), {\n  display: \"block\",\n  margin: \"auto\",\n  fill: colors.grey,\n  path: {\n    transformOrigin: \"center\",\n    animation: `${spin} 1s linear infinite`\n  }\n});\n\nexport default Loading;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/components/login-form.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","endLine":6,"endColumn":14},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":28,"column":14,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":28,"endColumn":61},{"ruleId":"no-invalid-this","severity":2,"message":"Unexpected 'this'.","line":30,"column":5,"nodeType":"ThisExpression","endLine":30,"endColumn":9},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'s' is defined but never used.","line":30,"column":20,"nodeType":"Identifier","endLine":30,"endColumn":21},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":33,"column":14,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":33,"endColumn":58},{"ruleId":"no-invalid-this","severity":2,"message":"Unexpected 'this'.","line":35,"column":5,"nodeType":"ThisExpression","endLine":35,"endColumn":9},{"ruleId":"no-invalid-this","severity":2,"message":"Unexpected 'this'.","line":35,"column":44,"nodeType":"ThisExpression","endLine":35,"endColumn":48},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":38,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":38,"endColumn":11},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":47,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":47,"endColumn":37},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":54,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":54,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Container' is assigned a value but never used.","line":67,"column":7,"nodeType":"Identifier","endLine":67,"endColumn":16},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":77,"column":31,"nodeType":null,"endLine":77,"endColumn":31,"fix":{"range":[2041,2041],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":82,"column":23,"nodeType":null,"endLine":82,"endColumn":23,"fix":{"range":[2116,2116],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Header' is assigned a value but never used.","line":85,"column":7,"nodeType":"Identifier","endLine":85,"endColumn":13},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":89,"column":23,"nodeType":null,"endLine":89,"endColumn":23,"fix":{"range":[2258,2258],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'StyledLogo' is assigned a value but never used.","line":92,"column":7,"nodeType":"Identifier","endLine":92,"endColumn":17},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":95,"column":23,"nodeType":null,"endLine":95,"endColumn":23,"fix":{"range":[2370,2370],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'StyledCurve' is assigned a value but never used.","line":98,"column":7,"nodeType":"Identifier","endLine":98,"endColumn":18},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":102,"column":10,"nodeType":null,"endLine":102,"endColumn":10,"fix":{"range":[2493,2493],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Heading' is assigned a value but never used.","line":105,"column":7,"nodeType":"Identifier","endLine":105,"endColumn":14},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":106,"column":42,"nodeType":null,"endLine":106,"endColumn":42,"fix":{"range":[2571,2571],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'StyledRocket' is assigned a value but never used.","line":109,"column":7,"nodeType":"Identifier","endLine":109,"endColumn":19},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":110,"column":13,"nodeType":null,"endLine":110,"endColumn":13,"fix":{"range":[2641,2641],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'StyledForm' is assigned a value but never used.","line":113,"column":7,"nodeType":"Identifier","endLine":113,"endColumn":17},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":120,"column":27,"nodeType":null,"endLine":120,"endColumn":27,"fix":{"range":[2855,2855],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'StyledInput' is assigned a value but never used.","line":123,"column":7,"nodeType":"Identifier","endLine":123,"endColumn":18},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":131,"column":32,"nodeType":null,"endLine":131,"endColumn":32,"fix":{"range":[3107,3107],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":132,"column":4,"nodeType":null,"endLine":132,"endColumn":4,"fix":{"range":[3111,3111],"text":","}}],"errorCount":13,"warningCount":15,"fixableErrorCount":10,"fixableWarningCount":0,"source":"import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport { size } from \"polished\";\n\nimport Button from \"./button\";\nimport space from \"../assets/images/space.jpg\";\nimport { ReactComponent as Logo } from \"../assets/logo.svg\";\nimport { ReactComponent as Curve } from \"../assets/curve.svg\";\nimport { ReactComponent as Rocket } from \"../assets/rocket.svg\";\nimport { colors, unit } from \"../styles\";\nimport * as LoginTypes from \"../pages/__generated__/login\";\n\ninterface LoginFormProps {\n  login: (a: { variables: LoginTypes.loginVariables }) => void;\n}\n\ninterface LoginFormState {\n  email: string;\n}\n\nexport default class LoginForm extends Component<\n  LoginFormProps,\n  LoginFormState\n> {\n  state = { email: \"\" };\n\n  onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const email = (event.target as HTMLInputElement).value;\n    this.setState((s) => ({ email }));\n  };\n\n  onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.props.login({ variables: { email: this.state.email } });\n  };\n\n  render() {\n    return (\n      <Container>\n        <Header>\n          <StyledCurve />\n          <StyledLogo />\n        </Header>\n        <StyledRocket />\n        <Heading>Space Explorer</Heading>\n        <StyledForm onSubmit={(e) => this.onSubmit(e)}>\n          <StyledInput\n            required\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            data-testid=\"login-input\"\n            onChange={(e) => this.onChange(e)}\n          />\n          <Button type=\"submit\">Log in</Button>\n        </StyledForm>\n      </Container>\n    );\n  }\n}\n\n/**\n * STYLED COMPONENTS USED IN THIS FILE ARE BELOW HERE\n */\n\nconst Container = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  flexGrow: 1,\n  paddingBottom: unit * 6,\n  color: \"white\",\n  backgroundColor: colors.primary,\n  backgroundImage: `url(${space})`,\n  backgroundSize: \"cover\",\n  backgroundPosition: \"center\"\n});\n\nconst svgClassName = css({\n  display: \"block\",\n  fill: \"currentColor\"\n});\n\nconst Header = styled(\"header\")(svgClassName, {\n  width: \"100%\",\n  marginBottom: unit * 5,\n  padding: unit * 2.5,\n  position: \"relative\"\n});\n\nconst StyledLogo = styled(Logo)(size(56), {\n  display: \"block\",\n  margin: \"0 auto\",\n  position: \"relative\"\n});\n\nconst StyledCurve = styled(Curve)(size(\"100%\"), {\n  fill: colors.primary,\n  position: \"absolute\",\n  top: 0,\n  left: 0\n});\n\nconst Heading = styled(\"h1\")({\n  margin: `${unit * 3}px 0 ${unit * 6}px`\n});\n\nconst StyledRocket = styled(Rocket)(svgClassName, {\n  width: 250\n});\n\nconst StyledForm = styled(\"form\")({\n  width: \"100%\",\n  maxWidth: 406,\n  padding: unit * 3.5,\n  borderRadius: 3,\n  boxShadow: \"6px 6px 1px rgba(0, 0, 0, 0.25)\",\n  color: colors.text,\n  backgroundColor: \"white\"\n});\n\nconst StyledInput = styled(\"input\")({\n  width: \"100%\",\n  marginBottom: unit * 2,\n  padding: `${unit * 1.25}px ${unit * 2.5}px`,\n  border: `1px solid ${colors.grey}`,\n  fontSize: 16,\n  outline: \"none\",\n  \":focus\": {\n    borderColor: colors.primary\n  }\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/components/menu-item.tsx","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":19,"column":27,"nodeType":null,"endLine":19,"endColumn":27,"fix":{"range":[462,462],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":20,"column":4,"nodeType":null,"endLine":20,"endColumn":4,"fix":{"range":[466,466],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":24,"column":25,"nodeType":null,"endLine":24,"endColumn":25,"fix":{"range":[547,547],"text":","}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"@reach/router\";\nimport { colors, unit } from \"../styles\";\n\nexport const menuItemClassName = css({\n  flexGrow: 1,\n  width: 0,\n  fontFamily: \"inherit\",\n  fontSize: 20,\n  color: \"inherit\",\n  letterSpacing: 1.5,\n  textTransform: \"uppercase\",\n  textAlign: \"center\",\n  svg: {\n    display: \"block\",\n    width: 60,\n    margin: `0 auto ${unit}px`,\n    fill: colors.secondary\n  }\n});\n\nconst MenuItem = styled(Link)(menuItemClassName, {\n  textDecoration: \"none\"\n});\n\nexport default MenuItem;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/components/page-container.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Fragment' is defined but never used.","line":1,"column":17,"nodeType":"Identifier","endLine":1,"endColumn":25},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":6,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":6,"endColumn":50},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":6,"column":46,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":6,"endColumn":49,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[168,171],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[168,171],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Bar' is assigned a value but never used.","line":19,"column":7,"nodeType":"Identifier","endLine":19,"endColumn":10},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":22,"column":34,"nodeType":null,"endLine":22,"endColumn":34,"fix":{"range":[440,440],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Container' is assigned a value but never used.","line":25,"column":7,"nodeType":"Identifier","endLine":25,"endColumn":16},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":33,"column":26,"nodeType":null,"endLine":33,"endColumn":26,"fix":{"range":[641,641],"text":","}}],"errorCount":2,"warningCount":6,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React, { Fragment } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport { unit, colors } from \"../styles\";\n\nexport default function PageContainer(props: any) {\n  return (\n    <Fragment>\n      <Bar />\n      <Container>{props.children}</Container>\n    </Fragment>\n  );\n}\n\n/**\n * STYLED COMPONENTS USED IN THIS FILE ARE BELOW HERE\n */\n\nconst Bar = styled(\"div\")({\n  flexShrink: 0,\n  height: 12,\n  backgroundColor: colors.primary\n});\n\nconst Container = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  flexGrow: 1,\n  width: \"100%\",\n  maxWidth: 600,\n  margin: \"0 auto\",\n  padding: unit * 3,\n  paddingBottom: unit * 5\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/containers/action-button.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","endLine":6,"endColumn":14},{"ruleId":"@typescript-eslint/no-empty-interface","severity":2,"message":"An interface declaring no members is equivalent to its supertype.","line":31,"column":11,"nodeType":"Identifier","messageId":"noEmptyWithSuper","endLine":31,"endColumn":28,"fix":{"range":[704,792],"text":"type ActionButtonProps = Partial<LaunchDetailTypes.LaunchDetails_launch>"}},{"ruleId":"@typescript-eslint/camelcase","severity":2,"message":"Identifier 'LaunchDetails_launch' is not in camel case.","line":32,"column":37,"nodeType":"Identifier","messageId":"notCamelCase","endLine":32,"endColumn":57},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":37,"column":11,"nodeType":null,"endLine":37,"endColumn":11,"fix":{"range":[875,875],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":46,"column":38,"nodeType":null,"endLine":46,"endColumn":38,"fix":{"range":[1127,1127],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":47,"column":10,"nodeType":null,"endLine":47,"endColumn":10,"fix":{"range":[1137,1137],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":48,"column":8,"nodeType":null,"endLine":48,"endColumn":8,"fix":{"range":[1145,1145],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":57,"column":24,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":57,"endColumn":29}],"errorCount":6,"warningCount":2,"fixableErrorCount":5,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { GET_LAUNCH_DETAILS } from \"../pages/launch\";\nimport Button from \"../components/button\";\nimport * as LaunchDetailTypes from \"../pages/__generated__/LaunchDetails\";\n\n// export all queries used in this file for testing\nexport { GET_LAUNCH_DETAILS };\n\nexport const TOGGLE_CART = gql`\n  mutation addOrRemoveFromCart($launchId: ID!) {\n    addOrRemoveFromCart(id: $launchId) @client\n  }\n`;\n\nexport const CANCEL_TRIP = gql`\n  mutation cancel($launchId: ID!) {\n    cancelTrip(launchId: $launchId) {\n      success\n      message\n      launches {\n        id\n        isBooked\n      }\n    }\n  }\n`;\n\ninterface ActionButtonProps\n  extends Partial<LaunchDetailTypes.LaunchDetails_launch> {}\n\nconst ActionButton: React.FC<ActionButtonProps> = ({\n  isBooked,\n  id,\n  isInCart\n}) => {\n  const [mutate, { loading, error }] = useMutation(\n    isBooked ? CANCEL_TRIP : TOGGLE_CART,\n    {\n      variables: { launchId: id },\n      refetchQueries: [\n        {\n          query: GET_LAUNCH_DETAILS,\n          variables: { launchId: id }\n        }\n      ]\n    }\n  );\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>An error occurred</p>;\n\n  return (\n    <div>\n      <Button onClick={() => mutate()} data-testid={\"action-button\"}>\n        {isBooked\n          ? \"Cancel This Trip\"\n          : isInCart\n          ? \"Remove from Cart\"\n          : \"Add to Cart\"}\n      </Button>\n    </div>\n  );\n};\n\nexport default ActionButton;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/containers/book-trips.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","endLine":5,"endColumn":14},{"ruleId":"@typescript-eslint/no-empty-interface","severity":2,"message":"An interface declaring no members is equivalent to its supertype.","line":23,"column":11,"nodeType":"Identifier","messageId":"noEmptyWithSuper","endLine":23,"endColumn":25,"fix":{"range":[538,604],"text":"type BookTripsProps = GetCartItemsTypes.GetCartItems"}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":33,"column":30,"nodeType":null,"endLine":33,"endColumn":30,"fix":{"range":[948,948],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":37,"column":6,"nodeType":null,"endLine":37,"endColumn":6,"fix":{"range":[1035,1035],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":43,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":43,"endColumn":27}],"errorCount":3,"warningCount":2,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport Button from \"../components/button\";\nimport { GET_LAUNCH } from \"./cart-item\";\nimport * as GetCartItemsTypes from \"../pages/__generated__/GetCartItems\";\nimport * as BookTripsTypes from \"./__generated__/BookTrips\";\n\nexport const BOOK_TRIPS = gql`\n  mutation BookTrips($launchIds: [ID]!) {\n    bookTrips(launchIds: $launchIds) {\n      success\n      message\n      launches {\n        id\n        isBooked\n      }\n    }\n  }\n`;\n\ninterface BookTripsProps extends GetCartItemsTypes.GetCartItems {}\n\nconst BookTrips: React.FC<BookTripsProps> = ({ cartItems }) => {\n  const [bookTrips, { data }] = useMutation<\n    BookTripsTypes.BookTrips,\n    BookTripsTypes.BookTripsVariables\n  >(BOOK_TRIPS, {\n    variables: { launchIds: cartItems },\n    refetchQueries: cartItems.map((launchId) => ({\n      query: GET_LAUNCH,\n      variables: { launchId }\n    })),\n    update(cache) {\n      cache.writeData({ data: { cartItems: [] } });\n    }\n  });\n\n  return data && data.bookTrips && !data.bookTrips.success ? (\n    <p data-testid=\"message\">{data.bookTrips.message}</p>\n  ) : (\n    <Button onClick={() => bookTrips()} data-testid=\"book-button\">\n      Book All\n    </Button>\n  );\n};\n\nexport default BookTrips;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/containers/cart-item.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'LaunchTile' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","endLine":5,"endColumn":18},{"ruleId":"@typescript-eslint/no-empty-interface","severity":2,"message":"An interface declaring no members is equivalent to its supertype.","line":18,"column":11,"nodeType":"Identifier","messageId":"noEmptyWithSuper","endLine":18,"endColumn":24,"fix":{"range":[440,515],"text":"type CartItemProps = LaunchDetailTypes.LaunchDetailsVariables"}}],"errorCount":1,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport LaunchTile from \"../components/launch-tile\";\nimport { LAUNCH_TILE_DATA } from \"../pages/launches\";\nimport * as LaunchDetailTypes from \"../pages/__generated__/LaunchDetails\";\n\nexport const GET_LAUNCH = gql`\n  query GetLaunch($launchId: ID!) {\n    launch(id: $launchId) {\n      ...LaunchTile\n    }\n  }\n  ${LAUNCH_TILE_DATA}\n`;\n\ninterface CartItemProps extends LaunchDetailTypes.LaunchDetailsVariables {}\n\nconst CartItem: React.FC<CartItemProps> = ({ launchId }) => {\n  const { data, loading, error } = useQuery<\n    LaunchDetailTypes.LaunchDetails,\n    LaunchDetailTypes.LaunchDetailsVariables\n  >(GET_LAUNCH, { variables: { launchId } });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR: {error.message}</p>;\n  if (!data) return <p>Not found</p>;\n  return data.launch && <LaunchTile launch={data.launch} />;\n};\n\nexport default CartItem;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/containers/index.tsx","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/containers/logout-button.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ExitIcon' is defined but never used.","line":6,"column":28,"nodeType":"Identifier","endLine":6,"endColumn":36},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":8,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":8,"endColumn":27},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":13,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":13,"endColumn":21},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'StyledButton' is assigned a value but never used.","line":30,"column":7,"nodeType":"Identifier","endLine":30,"endColumn":19},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":33,"column":13,"nodeType":null,"endLine":33,"endColumn":13,"fix":{"range":[774,774],"text":","}}],"errorCount":1,"warningCount":5,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\n\nimport { menuItemClassName } from \"../components/menu-item\";\nimport { ReactComponent as ExitIcon } from \"../assets/icons/exit.svg\";\n\nconst LogoutButton = () => {\n  const client = useApolloClient();\n  return (\n    <StyledButton\n      data-testid=\"logout-button\"\n      onClick={() => {\n        client.writeData({ data: { isLoggedIn: false } });\n        localStorage.clear();\n      }}\n    >\n      <ExitIcon />\n      Logout\n    </StyledButton>\n  );\n};\n\nexport default LogoutButton;\n\n/**\n * STYLED COMPONENTS USED IN THIS FILE ARE BELOW HERE\n */\n\nconst StyledButton = styled(\"button\")(menuItemClassName, {\n  background: \"none\",\n  border: \"none\",\n  padding: 0\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/pages/cart.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Fragment' is defined but never used.","line":1,"column":17,"nodeType":"Identifier","endLine":1,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","endLine":5,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Loading' is defined but never used.","line":5,"column":18,"nodeType":"Identifier","endLine":5,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CartItem' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","endLine":6,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'BookTrips' is defined but never used.","line":6,"column":20,"nodeType":"Identifier","endLine":6,"endColumn":29},{"ruleId":"@typescript-eslint/no-empty-interface","severity":2,"message":"An interface declaring no members is equivalent to its supertype.","line":16,"column":11,"nodeType":"Identifier","messageId":"noEmptyWithSuper","endLine":16,"endColumn":20,"fix":{"range":[426,476],"text":"type CartProps = RouteComponentProps"}},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":32,"column":43,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":32,"endColumn":46,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[959,962],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[959,962],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"no-extra-boolean-cast","severity":2,"message":"Redundant double negation.","line":35,"column":33,"nodeType":"UnaryExpression","messageId":"unexpectedNegation","endLine":35,"endColumn":39,"fix":{"range":[1079,1085],"text":"data"}}],"errorCount":2,"warningCount":6,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import React, { Fragment } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { Header, Loading } from \"../components\";\nimport { CartItem, BookTrips } from \"../containers\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { GetCartItems } from \"./__generated__/GetCartItems\";\n\nexport const GET_CART_ITEMS = gql`\n  query GetCartItems {\n    cartItems @client\n  }\n`;\n\ninterface CartProps extends RouteComponentProps {}\n\nconst Cart: React.FC<CartProps> = () => {\n  const { data, loading, error } = useQuery<GetCartItems>(GET_CART_ITEMS);\n\n  if (loading) return <Loading />;\n  if (error) return <p>ERROR: {error.message}</p>;\n\n  return (\n    <Fragment>\n      <Header>My Cart</Header>\n      {!data || (!!data && data.cartItems.length === 0) ? (\n        <p data-testid=\"empty-message\">No items in your cart</p>\n      ) : (\n        <Fragment>\n          {!!data &&\n            data.cartItems.map((launchId: any) => (\n              <CartItem key={launchId} launchId={launchId} />\n            ))}\n          <BookTrips cartItems={!!data ? data.cartItems : []} />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Cart;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/pages/index.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Router' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Launch' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","endLine":4,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Launches' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","endLine":5,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Cart' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","endLine":6,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Profile' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","endLine":7,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Footer' is defined but never used.","line":8,"column":10,"nodeType":"Identifier","endLine":8,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'PageContainer' is defined but never used.","line":8,"column":18,"nodeType":"Identifier","endLine":8,"endColumn":31},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":10,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":10,"endColumn":32}],"errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Fragment } from \"react\";\nimport { Router } from \"@reach/router\";\n\nimport Launch from \"./launch\";\nimport Launches from \"./launches\";\nimport Cart from \"./cart\";\nimport Profile from \"./profile\";\nimport { Footer, PageContainer } from \"../components\";\n\nexport default function Pages() {\n  return (\n    <Fragment>\n      <PageContainer>\n        <Router primary={false} component={Fragment}>\n          <Launches path=\"/\" />\n          <Launch path=\"launch/:launchId\" />\n          <Cart path=\"cart\" />\n          <Profile path=\"profile\" />\n        </Router>\n      </PageContainer>\n      <Footer />\n    </Fragment>\n  );\n}\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/pages/launch.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Fragment' is defined but never used.","line":1,"column":17,"nodeType":"Identifier","endLine":1,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Loading' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","endLine":6,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":6,"column":19,"nodeType":"Identifier","endLine":6,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'LaunchDetail' is defined but never used.","line":6,"column":27,"nodeType":"Identifier","endLine":6,"endColumn":39},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ActionButton' is defined but never used.","line":7,"column":10,"nodeType":"Identifier","endLine":7,"endColumn":22},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":26,"column":14,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":26,"endColumn":17,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[698,701],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[698,701],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Fragment } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { LAUNCH_TILE_DATA } from \"./launches\";\nimport { Loading, Header, LaunchDetail } from \"../components\";\nimport { ActionButton } from \"../containers\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport * as LaunchDetailsTypes from \"./__generated__/LaunchDetails\";\n\nexport const GET_LAUNCH_DETAILS = gql`\n  query LaunchDetails($launchId: ID!) {\n    launch(id: $launchId) {\n      isInCart @client\n      site\n      rocket {\n        type\n      }\n      ...LaunchTile\n    }\n  }\n  ${LAUNCH_TILE_DATA}\n`;\n\ninterface LaunchProps extends RouteComponentProps {\n  launchId?: any;\n}\n\nconst Launch: React.FC<LaunchProps> = ({ launchId }) => {\n  const { data, loading, error } = useQuery<\n    LaunchDetailsTypes.LaunchDetails,\n    LaunchDetailsTypes.LaunchDetailsVariables\n  >(GET_LAUNCH_DETAILS, { variables: { launchId } });\n\n  if (loading) return <Loading />;\n  if (error) return <p>ERROR: {error.message}</p>;\n  if (!data) return <p>Not found</p>;\n\n  return (\n    <Fragment>\n      <Header\n        image={\n          data.launch && data.launch.mission && data.launch.mission.missionPatch\n        }\n      >\n        {data && data.launch && data.launch.mission && data.launch.mission.name}\n      </Header>\n      <LaunchDetail {...data.launch} />\n      <ActionButton {...data.launch} />\n    </Fragment>\n  );\n};\n\nexport default Launch;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/pages/launches.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Fragment' is defined but never used.","line":1,"column":17,"nodeType":"Identifier","endLine":1,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'LaunchTile' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","endLine":5,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":5,"column":22,"nodeType":"Identifier","endLine":5,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":5,"column":30,"nodeType":"Identifier","endLine":5,"endColumn":36},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Loading' is defined but never used.","line":5,"column":38,"nodeType":"Identifier","endLine":5,"endColumn":45},{"ruleId":"@typescript-eslint/no-empty-interface","severity":2,"message":"An interface declaring no members is equivalent to its supertype.","line":38,"column":11,"nodeType":"Identifier","messageId":"noEmptyWithSuper","endLine":38,"endColumn":24,"fix":{"range":[729,783],"text":"type LaunchesProps = RouteComponentProps"}},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":54,"column":45,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":54,"endColumn":48,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1219,1222],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1219,1222],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":59,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":59,"endColumn":25},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":62,"column":44,"nodeType":null,"endLine":62,"endColumn":44,"fix":{"range":[1484,1484],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'rest' is defined but never used.","line":64,"column":57,"nodeType":"Identifier","endLine":64,"endColumn":61},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":72,"column":59,"nodeType":null,"endLine":72,"endColumn":59,"fix":{"range":[1903,1903],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":73,"column":22,"nodeType":null,"endLine":73,"endColumn":22,"fix":{"range":[1925,1925],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":74,"column":20,"nodeType":null,"endLine":74,"endColumn":20,"fix":{"range":[1945,1945],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":76,"column":16,"nodeType":null,"endLine":76,"endColumn":16,"fix":{"range":[1980,1980],"text":","}}],"errorCount":6,"warningCount":8,"fixableErrorCount":6,"fixableWarningCount":0,"source":"import React, { Fragment } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { LaunchTile, Header, Button, Loading } from \"../components\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport * as GetLaunchListTypes from \"./__generated__/GetLaunchList\";\n\nexport const LAUNCH_TILE_DATA = gql`\n  fragment LaunchTile on Launch {\n    __typename\n    id\n    isBooked\n    rocket {\n      id\n      name\n    }\n    mission {\n      name\n      missionPatch\n    }\n  }\n`;\n\nexport const GET_LAUNCHES = gql`\n  query GetLaunchList($after: String) {\n    launches(after: $after) {\n      cursor\n      hasMore\n      launches {\n        ...LaunchTile\n      }\n    }\n  }\n  ${LAUNCH_TILE_DATA}\n`;\n\ninterface LaunchesProps extends RouteComponentProps {}\n\nconst Launches: React.FC<LaunchesProps> = () => {\n  const { data, loading, error, fetchMore } = useQuery<\n    GetLaunchListTypes.GetLaunchList,\n    GetLaunchListTypes.GetLaunchListVariables\n  >(GET_LAUNCHES);\n\n  if (loading) return <Loading />;\n  if (error || !data) return <p>ERROR</p>;\n\n  return (\n    <Fragment>\n      <Header />\n      {data.launches &&\n        data.launches.launches &&\n        data.launches.launches.map((launch: any) => (\n          <LaunchTile key={launch.id} launch={launch} />\n        ))}\n      {data.launches && data.launches.hasMore && (\n        <Button\n          onClick={() =>\n            fetchMore({\n              variables: {\n                after: data.launches.cursor\n              },\n              updateQuery: (prev, { fetchMoreResult, ...rest }) => {\n                if (!fetchMoreResult) return prev;\n                return {\n                  ...fetchMoreResult,\n                  launches: {\n                    ...fetchMoreResult.launches,\n                    launches: [\n                      ...prev.launches.launches,\n                      ...fetchMoreResult.launches.launches\n                    ]\n                  }\n                };\n              }\n            })\n          }\n        >\n          Load More\n        </Button>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Launches;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/pages/login.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'LoginForm' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","endLine":5,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Loading' is defined but never used.","line":5,"column":21,"nodeType":"Identifier","endLine":5,"endColumn":28},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":15,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":15,"endColumn":32},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":16,"column":30,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":16,"endColumn":33,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[438,441],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[438,441],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":24,"column":6,"nodeType":null,"endLine":24,"endColumn":6,"fix":{"range":[729,729],"text":","}}],"errorCount":1,"warningCount":5,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { LoginForm, Loading } from \"../components\";\nimport ApolloClient from \"apollo-client\";\nimport * as LoginTypes from \"./__generated__/login\";\n\nexport const LOGIN_USER = gql`\n  mutation Login($email: String!) {\n    login(email: $email)\n  }\n`;\n\nexport default function Login() {\n  const client: ApolloClient<any> = useApolloClient();\n  const [login, { loading, error }] = useMutation<\n    LoginTypes.login,\n    LoginTypes.loginVariables\n  >(LOGIN_USER, {\n    onCompleted({ login }) {\n      localStorage.setItem(\"token\", login as string);\n      client.writeData({ data: { isLoggedIn: true } });\n    }\n  });\n\n  if (loading) return <Loading />;\n  if (error) return <p>An error occurred</p>;\n\n  return <LoginForm login={login} />;\n}\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/pages/profile.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Fragment' is defined but never used.","line":1,"column":17,"nodeType":"Identifier","endLine":1,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Loading' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","endLine":5,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":5,"column":19,"nodeType":"Identifier","endLine":5,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'LaunchTile' is defined but never used.","line":5,"column":27,"nodeType":"Identifier","endLine":5,"endColumn":37},{"ruleId":"@typescript-eslint/no-empty-interface","severity":2,"message":"An interface declaring no members is equivalent to its supertype.","line":23,"column":11,"nodeType":"Identifier","messageId":"noEmptyWithSuper","endLine":23,"endColumn":23,"fix":{"range":[510,563],"text":"type ProfileProps = RouteComponentProps"}},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":38,"column":36,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":38,"endColumn":39,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1015,1018],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1015,1018],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"errorCount":1,"warningCount":5,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { Fragment } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { Loading, Header, LaunchTile } from \"../components\";\nimport { LAUNCH_TILE_DATA } from \"./launches\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport * as GetMyTripsTypes from \"./__generated__/GetMyTrips\";\n\nexport const GET_MY_TRIPS = gql`\n  query GetMyTrips {\n    me {\n      id\n      email\n      trips {\n        ...LaunchTile\n      }\n    }\n  }\n  ${LAUNCH_TILE_DATA}\n`;\n\ninterface ProfileProps extends RouteComponentProps {}\n\nconst Profile: React.FC<ProfileProps> = () => {\n  const { data, loading, error } = useQuery<GetMyTripsTypes.GetMyTrips>(\n    GET_MY_TRIPS,\n    { fetchPolicy: \"network-only\" }\n  );\n  if (loading) return <Loading />;\n  if (error) return <p>ERROR: {error.message}</p>;\n  if (data === undefined) return <p>ERROR</p>;\n\n  return (\n    <Fragment>\n      <Header>My Trips</Header>\n      {data.me && data.me.trips.length ? (\n        data.me.trips.map((launch: any) => (\n          <LaunchTile key={launch.id} launch={launch} />\n        ))\n      ) : (\n        <p>You haven't booked any trips</p>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Profile;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__tests__/sublist/basic-actions.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":7,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":26,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":26,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":31,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":31,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":37,"column":18,"nodeType":null,"endLine":37,"endColumn":18,"fix":{"range":[1313,1313],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":41,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":41,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":44,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":44,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":65,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":65,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":71,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":71,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":79,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":79,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":85,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":85,"endColumn":5},{"ruleId":"prefer-const","severity":2,"message":"'listitems' is never reassigned. Use 'const' instead.","line":105,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":105,"endColumn":18,"fix":{"range":[3508,3511],"text":"const"}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":106,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":106,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":111,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":111,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":115,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":115,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":119,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":119,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":123,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":123,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":126,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":126,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":149,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":149,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":152,"column":13,"nodeType":null,"endLine":152,"endColumn":13,"fix":{"range":[5377,5377],"text":","}},{"ruleId":"prefer-const","severity":2,"message":"'buttons' is never reassigned. Use 'const' instead.","line":158,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":158,"endColumn":16,"fix":{"range":[5488,5491],"text":"const"}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":162,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":162,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":165,"column":13,"nodeType":null,"endLine":165,"endColumn":13,"fix":{"range":[5705,5705],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":167,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":167,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":170,"column":11,"nodeType":null,"endLine":170,"endColumn":11,"fix":{"range":[5812,5812],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":176,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":176,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":177,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":177,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":184,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":184,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":187,"column":13,"nodeType":null,"endLine":187,"endColumn":13,"fix":{"range":[6508,6508],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":189,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":189,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":192,"column":12,"nodeType":null,"endLine":192,"endColumn":12,"fix":{"range":[6615,6615],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":200,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":200,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":204,"column":13,"nodeType":null,"endLine":204,"endColumn":13,"fix":{"range":[6977,6977],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":206,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":206,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":210,"column":12,"nodeType":null,"endLine":210,"endColumn":12,"fix":{"range":[7097,7097],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":217,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":217,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":221,"column":13,"nodeType":null,"endLine":221,"endColumn":13,"fix":{"range":[7419,7419],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":223,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":223,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":227,"column":12,"nodeType":null,"endLine":227,"endColumn":12,"fix":{"range":[7538,7538],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":234,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":234,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":238,"column":13,"nodeType":null,"endLine":238,"endColumn":13,"fix":{"range":[7860,7860],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":240,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":240,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":244,"column":11,"nodeType":null,"endLine":244,"endColumn":11,"fix":{"range":[7978,7978],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":251,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":251,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":255,"column":13,"nodeType":null,"endLine":255,"endColumn":13,"fix":{"range":[8300,8300],"text":","}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":257,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":257,"endColumn":11},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":261,"column":11,"nodeType":null,"endLine":261,"endColumn":11,"fix":{"range":[8419,8419],"text":","}}],"errorCount":47,"warningCount":2,"fixableErrorCount":16,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { render, fireEvent, within } from \"@testing-library/react\";\nimport userEvents from \"@testing-library/user-event\";\nimport { App, getDeleteButtons, getExpandButtons } from \"../../__testHelpers__\";\n\ndescribe(\"Todo sublist\", () => {\n  it(\"Add\", async () => {\n    const { getByRole, getAllByRole, getAllByText } = render(\n      <App items={[\"foo\", \"bar\", \"baz\"]} />\n    );\n\n    const expandButtons = getExpandButtons(\n      getByRole(\"list\") as HTMLUListElement\n    );\n    userEvents.click(expandButtons[2]);\n\n    const sublist = Array.from(getAllByRole(\"list\"))[1] as HTMLUListElement;\n\n    const textbox = Array.from(getAllByRole(\"textbox\"))[1] as HTMLInputElement;\n    const addButton = Array.from(getAllByText(/add/i))[1] as HTMLButtonElement;\n\n    await userEvents.type(textbox, \"foobar\");\n    userEvents.click(addButton);\n\n    let listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"foobar\"]);\n\n    await userEvents.type(textbox, \"quux\");\n\n    listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"foobar\"]);\n\n    fireEvent.keyPress(textbox, {\n      key: \"Enter\",\n      code: 13,\n      charCode: 13,\n      keyCode: 13\n    });\n\n    listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"foobar\", \"quux\"]);\n  });\n\n  it(\"Remove\", async () => {\n    const { getByRole, getAllByRole, getAllByText } = render(\n      <App items={[\"foo\", \"bar\", \"baz\"]} />\n    );\n\n    const expandButtons = getExpandButtons(\n      getByRole(\"list\") as HTMLUListElement\n    );\n    userEvents.click(expandButtons[2]);\n\n    const sublist = Array.from(getAllByRole(\"list\"))[1] as HTMLUListElement;\n\n    const textbox = Array.from(getAllByRole(\"textbox\"))[1] as HTMLInputElement;\n    const addButton = Array.from(getAllByText(/add/i))[1] as HTMLButtonElement;\n\n    await userEvents.type(textbox, \"foobar\");\n    userEvents.click(addButton);\n    await userEvents.type(textbox, \"quux\");\n    userEvents.click(addButton);\n\n    let listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"foobar\", \"quux\"]);\n\n    let buttons = getDeleteButtons(sublist);\n    userEvents.click(buttons[0]);\n\n    listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"quux\"]);\n\n    buttons = getDeleteButtons(sublist);\n    userEvents.click(buttons[0]);\n\n    try {\n      within(sublist).getAllByRole(\"listitem\");\n    } catch (e) {\n      expect(e.message).toContain(\n        `Unable to find an accessible element with the role \"listitem\"`\n      );\n    }\n  });\n\n  it(\"Check\", async () => {\n    const { getByRole, getAllByRole, getAllByText } = render(\n      <App items={[\"foo\", \"bar\", \"baz\"]} />\n    );\n\n    const expandButtons = getExpandButtons(\n      getByRole(\"list\") as HTMLUListElement\n    );\n    userEvents.click(expandButtons[2]);\n\n    const sublist = Array.from(getAllByRole(\"list\"))[1] as HTMLUListElement;\n\n    const textbox = Array.from(getAllByRole(\"textbox\"))[1] as HTMLInputElement;\n    const addButton = Array.from(getAllByText(/add/i))[1] as HTMLButtonElement;\n\n    await userEvents.type(textbox, \"foobar\");\n    userEvents.click(addButton);\n    await userEvents.type(textbox, \"quux\");\n    userEvents.click(addButton);\n\n    let listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"foobar\", \"quux\"]);\n\n    let checkboxes = within(sublist).getAllByRole(\n      \"checkbox\"\n    ) as HTMLInputElement[];\n    expect(checkboxes.map((input) => input.checked)).toEqual([false, false]);\n\n    userEvents.click(checkboxes[0]);\n    checkboxes = within(sublist).getAllByRole(\"checkbox\") as HTMLInputElement[];\n    expect(checkboxes.map((input) => input.checked)).toEqual([true, false]);\n\n    userEvents.click(checkboxes[1]);\n    checkboxes = within(sublist).getAllByRole(\"checkbox\") as HTMLInputElement[];\n    expect(checkboxes.map((input) => input.checked)).toEqual([true, true]);\n\n    userEvents.click(checkboxes[0]);\n    checkboxes = within(sublist).getAllByRole(\"checkbox\") as HTMLInputElement[];\n    expect(checkboxes.map((input) => input.checked)).toEqual([false, true]);\n  });\n\n  it(\"Check/Add/Remove\", async () => {\n    const { getByRole, getAllByRole, getAllByText } = render(\n      <App items={[\"foo\", \"bar\", \"baz\"]} />\n    );\n\n    const expandButtons = getExpandButtons(\n      getByRole(\"list\") as HTMLUListElement\n    );\n    userEvents.click(expandButtons[2]);\n\n    const sublist = Array.from(getAllByRole(\"list\"))[1] as HTMLUListElement;\n\n    const textbox = Array.from(getAllByRole(\"textbox\"))[1] as HTMLInputElement;\n    const addButton = Array.from(getAllByText(/add/i))[1] as HTMLButtonElement;\n\n    await userEvents.type(textbox, \"foobar\");\n    userEvents.click(addButton);\n    await userEvents.type(textbox, \"qux\");\n    userEvents.click(addButton);\n    await userEvents.type(textbox, \"quux\");\n    userEvents.click(addButton);\n\n    let listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foobar\",\n      \"qux\",\n      \"quux\"\n    ]);\n\n    let checkboxes = within(sublist).getAllByRole(\n      \"checkbox\"\n    ) as HTMLInputElement[];\n    let buttons = getDeleteButtons(sublist);\n\n    userEvents.click(checkboxes[0]);\n    userEvents.click(checkboxes[2]);\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foobar\",\n      \"qux\",\n      \"quux\"\n    ]);\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      true,\n      false,\n      true\n    ]);\n\n    userEvents.click(buttons[1]);\n    checkboxes = within(sublist).getAllByRole(\"checkbox\") as HTMLInputElement[];\n    listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n    expect(listitems.map((li) => li.textContent)).toEqual([\"foobar\", \"quux\"]);\n    expect(checkboxes.map((input) => input.checked)).toEqual([true, true]);\n\n    await userEvents.type(textbox, \"bobo\");\n    userEvents.click(addButton);\n    checkboxes = within(sublist).getAllByRole(\"checkbox\") as HTMLInputElement[];\n    listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foobar\",\n      \"quux\",\n      \"bobo\"\n    ]);\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      true,\n      true,\n      false\n    ]);\n\n    await userEvents.type(textbox, \"bibi\");\n    userEvents.click(addButton);\n    checkboxes = within(sublist).getAllByRole(\"checkbox\") as HTMLInputElement[];\n    listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foobar\",\n      \"quux\",\n      \"bobo\",\n      \"bibi\"\n    ]);\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      true,\n      true,\n      false,\n      false\n    ]);\n\n    userEvents.click(checkboxes[2]);\n    checkboxes = within(sublist).getAllByRole(\"checkbox\") as HTMLInputElement[];\n    listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foobar\",\n      \"quux\",\n      \"bobo\",\n      \"bibi\"\n    ]);\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      true,\n      true,\n      true,\n      false\n    ]);\n\n    userEvents.click(checkboxes[3]);\n    checkboxes = within(sublist).getAllByRole(\"checkbox\") as HTMLInputElement[];\n    listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foobar\",\n      \"quux\",\n      \"bobo\",\n      \"bibi\"\n    ]);\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      true,\n      true,\n      true,\n      true\n    ]);\n\n    userEvents.click(checkboxes[2]);\n    checkboxes = within(sublist).getAllByRole(\"checkbox\") as HTMLInputElement[];\n    listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n\n    expect(listitems.map((li) => li.textContent)).toEqual([\n      \"foobar\",\n      \"quux\",\n      \"bobo\",\n      \"bibi\"\n    ]);\n    expect(checkboxes.map((input) => input.checked)).toEqual([\n      true,\n      true,\n      false,\n      true\n    ]);\n  });\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__tests__/sublist/parent-actions.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'render' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'fireEvent' is defined but never used.","line":2,"column":18,"nodeType":"Identifier","endLine":2,"endColumn":27},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'within' is defined but never used.","line":2,"column":29,"nodeType":"Identifier","endLine":2,"endColumn":35},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'userEvents' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","endLine":3,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'getDeleteButtons' is defined but never used.","line":4,"column":15,"nodeType":"Identifier","endLine":4,"endColumn":31},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'getExpandButtons' is defined but never used.","line":4,"column":33,"nodeType":"Identifier","endLine":4,"endColumn":49},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":7,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":7}],"errorCount":2,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { render, fireEvent, within } from \"@testing-library/react\";\nimport userEvents from \"@testing-library/user-event\";\nimport { App, getDeleteButtons, getExpandButtons } from \"../../__testHelpers__\";\n\ndescribe(\"Todo sublist\", () => {\n  test.todo(\"Remove parent\");\n  // it(\"Remove parent\", async () => {\n  //   const { getByRole, getAllByRole, getAllByText } = render(\n  //     <App items={[\"foo\", \"bar\", \"baz\"]} />\n  //   );\n\n  //   const expandButtons = getExpandButtons(\n  //     getByRole(\"list\") as HTMLUListElement\n  //   );\n  //   userEvents.click(expandButtons[2]);\n\n  //   const list = Array.from(getAllByRole(\"list\"))[0] as HTMLUListElement;\n  //   const sublist = Array.from(getAllByRole(\"list\"))[1] as HTMLUListElement;\n\n  //   const textbox = Array.from(getAllByRole(\"textbox\"))[1] as HTMLInputElement;\n  //   const addButton = Array.from(getAllByText(/add/i))[1] as HTMLButtonElement;\n\n  //   await userEvents.type(textbox, \"foobar\");\n  //   userEvents.click(addButton);\n  //   await userEvents.type(textbox, \"quux\");\n  //   userEvents.click(addButton);\n\n  //   let listitems = within(sublist).getAllByRole(\"listitem\") as HTMLLIElement[];\n  //   expect(listitems.map((li) => li.textContent)).toEqual([\"foobar\", \"quux\"]);\n\n  //   let buttons = getDeleteButtons(list);\n  //   userEvents.click(buttons[2]);\n\n  //   expect(sublist).not.toBeInTheDocument();\n  // });\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/App.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'react'` with `\"react\"`","line":1,"column":19,"nodeType":null,"endLine":1,"endColumn":26,"fix":{"range":[18,25],"text":"\"react\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'./logo.svg'` with `\"./logo.svg\"`","line":2,"column":18,"nodeType":null,"endLine":2,"endColumn":30,"fix":{"range":[44,56],"text":"\"./logo.svg\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'./App.css'` with `\"./App.css\"`","line":3,"column":8,"nodeType":null,"endLine":3,"endColumn":19,"fix":{"range":[65,76],"text":"\"./App.css\""}}],"errorCount":4,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/index.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":2,"message":"'App' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","endLine":4,"endColumn":11}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./sandbox/apollo-tutorial/client\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"},{"filePath":"/home/jason/Projets/js/tenth/src/serviceWorker.js","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'localhost'` with `\"localhost\"`","line":14,"column":32,"nodeType":null,"endLine":14,"endColumn":43,"fix":{"range":[637,648],"text":"\"localhost\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'[::1]'` with `\"[::1]\"`","line":16,"column":34,"nodeType":null,"endLine":16,"endColumn":41,"fix":{"range":[729,736],"text":"\"[::1]\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'production'·&&·'serviceWorker'` with `\"production\"·&&·\"serviceWorker\"`","line":24,"column":32,"nodeType":null,"endLine":24,"endColumn":63,"fix":{"range":[969,1000],"text":"\"production\" && \"serviceWorker\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'load'` with `\"load\"`","line":34,"column":29,"nodeType":null,"endLine":34,"endColumn":35,"fix":{"range":[1513,1519],"text":"\"load\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'This·web·app·is·being·served·cache-first·by·a·service·'` with `\"This·web·app·is·being·served·cache-first·by·a·service·\"`","line":45,"column":13,"nodeType":null,"endLine":45,"endColumn":69,"fix":{"range":[1976,2032],"text":"\"This web app is being served cache-first by a service \""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'worker.·To·learn·more,·visit·https://bit.ly/CRA-PWA'` with `\"worker.·To·learn·more,·visit·https://bit.ly/CRA-PWA\"`","line":46,"column":15,"nodeType":null,"endLine":46,"endColumn":68,"fix":{"range":[2049,2102],"text":"\"worker. To learn more, visit https://bit.ly/CRA-PWA\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `registration` with `(registration)`","line":60,"column":11,"nodeType":null,"endLine":60,"endColumn":23,"fix":{"range":[2363,2375],"text":"(registration)"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'installed'` with `\"installed\"`","line":67,"column":42,"nodeType":null,"endLine":67,"endColumn":53,"fix":{"range":[2640,2651],"text":"\"installed\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'New·content·is·available·and·will·be·used·when·all·'` with `\"New·content·is·available·and·will·be·used·when·all·\"`","line":73,"column":17,"nodeType":null,"endLine":73,"endColumn":70,"fix":{"range":[2967,3020],"text":"\"New content is available and will be used when all \""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'tabs·for·this·page·are·closed.·See·https://bit.ly/CRA-PWA.'` with `\"tabs·for·this·page·are·closed.·See·https://bit.ly/CRA-PWA.\"`","line":74,"column":19,"nodeType":null,"endLine":74,"endColumn":79,"fix":{"range":[3041,3101],"text":"\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'Content·is·cached·for·offline·use.'` with `\"Content·is·cached·for·offline·use.\"`","line":85,"column":27,"nodeType":null,"endLine":85,"endColumn":63,"fix":{"range":[3489,3525],"text":"\"Content is cached for offline use.\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `error` with `(error)`","line":96,"column":12,"nodeType":null,"endLine":96,"endColumn":17,"fix":{"range":[3739,3744],"text":"(error)"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'Error·during·service·worker·registration:'` with `\"Error·during·service·worker·registration:\"`","line":97,"column":21,"nodeType":null,"endLine":97,"endColumn":64,"fix":{"range":[3770,3813],"text":"\"Error during service worker registration:\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'Service-Worker':·'script'·}` with `\"Service-Worker\":·\"script\"·},`","line":104,"column":16,"nodeType":null,"endLine":104,"endColumn":44,"fix":{"range":[3992,4020],"text":"\"Service-Worker\": \"script\" },"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `response` with `(response)`","line":106,"column":11,"nodeType":null,"endLine":106,"endColumn":19,"fix":{"range":[4036,4044],"text":"(response)"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'content-type'` with `\"content-type\"`","line":108,"column":48,"nodeType":null,"endLine":108,"endColumn":62,"fix":{"range":[4178,4192],"text":"\"content-type\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'javascript'` with `\"javascript\"`","line":111,"column":53,"nodeType":null,"endLine":111,"endColumn":65,"fix":{"range":[4293,4305],"text":"\"javascript\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `registration` with `(registration)`","line":114,"column":44,"nodeType":null,"endLine":114,"endColumn":56,"fix":{"range":[4447,4459],"text":"(registration)"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'No·internet·connection·found.·App·is·running·in·offline·mode.'` with `\"No·internet·connection·found.·App·is·running·in·offline·mode.\"`","line":126,"column":9,"nodeType":null,"endLine":126,"endColumn":72,"fix":{"range":[4746,4809],"text":"\"No internet connection found. App is running in offline mode.\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'serviceWorker'` with `\"serviceWorker\"`","line":132,"column":7,"nodeType":null,"endLine":132,"endColumn":22,"fix":{"range":[4867,4882],"text":"\"serviceWorker\""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `registration` with `(registration)`","line":133,"column":40,"nodeType":null,"endLine":133,"endColumn":52,"fix":{"range":[4938,4950],"text":"(registration)"}}],"errorCount":21,"warningCount":0,"fixableErrorCount":21,"fixableWarningCount":0,"source":"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"},{"filePath":"/home/jason/Projets/js/tenth/src/setupTests.js","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'@testing-library/jest-dom/extend-expect'` with `\"@testing-library/jest-dom/extend-expect\"`","line":5,"column":8,"nodeType":null,"endLine":5,"endColumn":49,"fix":{"range":[212,253],"text":"\"@testing-library/jest-dom/extend-expect\""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"// jest-dom adds custom jest matchers for asserting on DOM nodes.\n// allows you to do things like:\n// expect(element).toHaveTextContent(/react/i)\n// learn more: https://github.com/testing-library/jest-dom\nimport '@testing-library/jest-dom/extend-expect';\n"},{"filePath":"/home/jason/Projets/js/tenth/src/react-app-env.d.ts","messages":[{"ruleId":"spaced-comment","severity":2,"message":"Expected space or tab after '//' in comment.","line":1,"column":1,"nodeType":"Line","endLine":1,"endColumn":40,"fix":{"range":[2,2],"text":" "}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"/// <reference types=\"react-scripts\" />\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/Tooltip.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":12,"column":53,"nodeType":null,"endLine":12,"endColumn":53,"fix":{"range":[381,381],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":13,"column":4,"nodeType":null,"endLine":13,"endColumn":4,"fix":{"range":[385,385],"text":","}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { Tooltip } from \"@material-ui/core\";\nimport { withStyles, Theme } from \"@material-ui/core/styles\";\n\nconst maxWidth = 220;\n\nexport const ErrorTooltip = withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.error.dark,\n    color: \"white\",\n    maxWidth,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid \" + theme.palette.error.light\n  }\n}))(Tooltip);\n"},{"filePath":"/home/jason/Projets/js/tenth/src/core/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/generics/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/generics/keys.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/generics/logical.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/generics/saga.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":3,"column":32,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":35,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[83,86],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[83,86],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":4,"column":16,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":4,"endColumn":19,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[116,119],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[116,119],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":4,"column":21,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":4,"endColumn":24,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[121,124],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[121,124],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":6,"column":3,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":6,"endColumn":6,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[135,138],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[135,138],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { StrictEffect } from \"redux-saga/effects\";\n\nexport type SagaGenerator<RT = any> = Generator<\n  StrictEffect<any, any>,\n  RT,\n  any\n>;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/mui-base/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/core/buttons/aria-labels.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/core/buttons/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/generics/__tsTests__/logical.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/mui-base/List/BaseList.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/mui-base/List/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/mui-base/ListItem/BaseListItem.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/mui-base/ListItem/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/combined-manager.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":11,"column":13,"nodeType":null,"endLine":11,"endColumn":13,"fix":{"range":[273,273],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":15,"column":36,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":17,"endColumn":5},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":16,"column":37,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":16,"endColumn":40,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[415,418],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[415,418],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":18,"column":37,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":18,"endColumn":40,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[465,468],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[465,468],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":19,"column":37,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":19,"endColumn":40,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[512,515],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[512,515],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":21,"column":21,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":21,"endColumn":47},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":21,"column":39,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":21,"endColumn":42,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[562,565],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[562,565],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":36,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":36,"endColumn":63},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":36,"column":46,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":36,"endColumn":49,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[945,948],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[945,948],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-use-before-define","severity":2,"message":"'managerIdsToRemove' was used before it was defined.","line":50,"column":5,"nodeType":"Identifier","messageId":"noUseBeforeDefine","endLine":50,"endColumn":23},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":62,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":68,"endColumn":7},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":64,"column":29,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":64,"endColumn":32,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1574,1577],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1574,1577],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":66,"column":28,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":66,"endColumn":31,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1646,1649],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1646,1649],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":74,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":80,"endColumn":7},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":76,"column":29,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":76,"endColumn":32,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1848,1851],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1848,1851],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":78,"column":28,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":78,"endColumn":31,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1920,1923],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1920,1923],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":90,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":96,"endColumn":7},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":92,"column":29,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":92,"endColumn":32,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2203,2206],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2203,2206],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":94,"column":28,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":94,"endColumn":31,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2275,2278],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2275,2278],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":107,"column":46,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":107,"endColumn":49,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2526,2529],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2526,2529],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":109,"column":30,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":109,"endColumn":33,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2585,2588],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2585,2588],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":117,"column":10,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":117,"endColumn":36},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":117,"column":28,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":117,"endColumn":31,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2746,2749],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2746,2749],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":126,"column":13,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":126,"endColumn":48},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":126,"column":31,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":126,"endColumn":34,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2979,2982],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2979,2982],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":135,"column":14,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":135,"endColumn":57},{"ruleId":"prefer-const","severity":2,"message":"'managerId' is never reassigned. Use 'const' instead.","line":139,"column":18,"nodeType":"Identifier","messageId":"useConst","endLine":139,"endColumn":27,"fix":{"range":[3373,3376],"text":"const"}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":153,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":153,"endColumn":20},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":160,"column":6,"nodeType":null,"endLine":160,"endColumn":6,"fix":{"range":[3871,3871],"text":","}}],"errorCount":4,"warningCount":25,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import { combineReducers, Action } from \"redux\";\nimport { put } from \"redux-saga/effects\";\nimport { SagaGenerator } from \"../../generics\";\nimport {\n  MutableCombinedState,\n  CombinedState,\n  MutableReducerMap,\n  CombinedReducer,\n  Manager,\n  MutableManagerMap,\n  ManagerMap\n} from \"./types\";\nimport { sagaMiddleware } from \"./saga-manager\";\n\nexport const makeCombinedManager = (\n  initialManagers: readonly Manager<any>[]\n) => {\n  const managers: MutableManagerMap<any> = {};\n  const reducers: MutableReducerMap<any> = {};\n\n  const addToMaps = (manager: Manager<any>) => {\n    const managerId = manager.managerId;\n\n    if (reducers[managerId]) {\n      throw new Error(\n        `A manager was already combined with the name: ${managerId}`\n      );\n    }\n\n    managers[managerId] = manager;\n    reducers[managerId] = manager.reducer;\n\n    manager.progenyHandler.getChildren().forEach(addToMaps);\n  };\n\n  const removeFromMaps = (managerId: Manager<any> | string) => {\n    const manager =\n      typeof managerId === \"string\" ? managers[managerId] : managerId;\n    const id = manager.managerId;\n\n    if (!manager) {\n      return;\n    }\n\n    manager.progenyHandler.getChildren().forEach(removeFromMaps);\n\n    delete managers[id];\n    delete reducers[id];\n\n    managerIdsToRemove.push(id);\n  };\n\n  initialManagers.forEach(addToMaps);\n\n  // Type cannot be statically inferred by Typescript\n  let combinedReducer = (combineReducers(\n    reducers\n  ) as unknown) as CombinedReducer;\n\n  let managerIdsToRemove: string[] = [];\n\n  const forEach = (\n    fn: (\n      manager: Omit<Manager<any>, \"managerId\">,\n      managerId: string,\n      managers: ManagerMap<any>\n    ) => void\n  ) => {\n    Object.keys(managers).forEach((managerId) => {\n      fn(managers[managerId], managerId, managers);\n    });\n  };\n\n  const map = <U>(\n    fn: (\n      manager: Omit<Manager<any>, \"managerId\">,\n      managerId: string,\n      managers: ManagerMap<any>\n    ) => U\n  ) => {\n    const map: { [key: string]: U } = {};\n\n    Object.keys(managers).forEach((managerId) => {\n      map[managerId] = fn(managers[managerId], managerId, managers);\n    });\n\n    return map;\n  };\n\n  const mapToArray = <U>(\n    fn: (\n      manager: Omit<Manager<any>, \"managerId\">,\n      managerId: string,\n      managers: ManagerMap<any>\n    ) => U\n  ) => {\n    const map: U[] = [];\n\n    Object.keys(managers).forEach((managerId) => {\n      map.push(fn(managers[managerId], managerId, managers));\n    });\n\n    return map;\n  };\n\n  return {\n    getManager: (managerId: string): Manager<any> => managers[managerId],\n\n    getManagers: (): Manager<any>[] => Object.values(managers),\n\n    getManagerIds: (): string[] => Object.keys(managers),\n\n    forEach,\n    map,\n    mapToArray,\n\n    add: (manager: Manager<any>) => {\n      addToMaps(manager);\n\n      // Type cannot be statically inferred by Typescript\n      combinedReducer = (combineReducers(\n        reducers\n      ) as unknown) as CombinedReducer;\n    },\n\n    remove: (manager: Manager<any> | string) => {\n      removeFromMaps(manager);\n\n      // Type cannot be statically inferred by Typescript\n      combinedReducer = (combineReducers(\n        reducers\n      ) as unknown) as CombinedReducer;\n    },\n\n    reducer: (state?: CombinedState, action?: Action) => {\n      if (managerIdsToRemove.length > 0) {\n        const newState: MutableCombinedState = { ...state };\n\n        for (let managerId of managerIdsToRemove) {\n          delete newState[managerId];\n        }\n\n        managerIdsToRemove = [];\n\n        return combinedReducer(newState, action);\n      }\n\n      return combinedReducer(state, action);\n    },\n\n    sagaMiddleware,\n\n    runSagas: () => {\n      forEach(({ sagaManager }) => sagaManager.startAll());\n      forEach(({ actionCreators: { ready } }) =>\n        sagaMiddleware.run(function* (): SagaGenerator {\n          yield put(ready());\n        })\n      );\n    }\n  };\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/enable-localstorage.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":5,"column":35,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":5,"endColumn":62},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":10,"column":39,"nodeType":null,"endLine":10,"endColumn":39,"fix":{"range":[364,364],"text":","}}],"errorCount":1,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { all, put, take } from \"redux-saga/effects\";\nimport { SagaGenerator } from \"../../generics\";\nimport { PersistedItemMap, SelectionMap, Manager } from \"./types\";\n\nexport const enableLocalStorage = <T>(manager: Manager<T>) => {\n  const {\n    managerId: localStorageId,\n    CONSTS: { READY },\n    actionCreators: { set },\n    progenyHandler: { getDescendants }\n  } = manager;\n  const ALL_READY = [READY].concat(\n    getDescendants().map(({ CONSTS: { READY } }) => READY)\n  );\n\n  manager.sagaManager.add(\"loadFromLocalStorage\", function* (): SagaGenerator {\n    yield all(ALL_READY.map((READY) => take(READY)));\n\n    const { todos: items, parts: selections } = JSON.parse(\n      localStorage.getItem(localStorageId) || `{\"todos\":{},\"parts\":{}}`\n    ) as { todos: PersistedItemMap<T>; parts: SelectionMap };\n\n    yield put(set({ items, selections }));\n  });\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/manager-action-creators.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":11,"column":19,"nodeType":null,"endLine":11,"endColumn":19,"fix":{"range":[209,209],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":38,"column":10,"nodeType":null,"endLine":38,"endColumn":10,"fix":{"range":[586,586],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":43,"column":12,"nodeType":null,"endLine":43,"endColumn":12,"fix":{"range":[700,700],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":48,"column":11,"nodeType":null,"endLine":48,"endColumn":11,"fix":{"range":[796,796],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":57,"column":12,"nodeType":null,"endLine":57,"endColumn":12,"fix":{"range":[942,942],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":65,"column":12,"nodeType":null,"endLine":65,"endColumn":12,"fix":{"range":[1093,1093],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":69,"column":16,"nodeType":null,"endLine":69,"endColumn":16,"fix":{"range":[1159,1159],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":76,"column":14,"nodeType":null,"endLine":76,"endColumn":14,"fix":{"range":[1301,1301],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":83,"column":12,"nodeType":null,"endLine":83,"endColumn":12,"fix":{"range":[1440,1440],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":88,"column":11,"nodeType":null,"endLine":88,"endColumn":11,"fix":{"range":[1541,1541],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":94,"column":12,"nodeType":null,"endLine":94,"endColumn":12,"fix":{"range":[1674,1674],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":102,"column":12,"nodeType":null,"endLine":102,"endColumn":12,"fix":{"range":[1824,1824],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":106,"column":19,"nodeType":null,"endLine":106,"endColumn":19,"fix":{"range":[1895,1895],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":113,"column":14,"nodeType":null,"endLine":113,"endColumn":14,"fix":{"range":[2042,2042],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":121,"column":21,"nodeType":null,"endLine":121,"endColumn":21,"fix":{"range":[2208,2208],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":128,"column":21,"nodeType":null,"endLine":128,"endColumn":21,"fix":{"range":[2373,2373],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":134,"column":13,"nodeType":null,"endLine":134,"endColumn":13,"fix":{"range":[2500,2500],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":140,"column":13,"nodeType":null,"endLine":140,"endColumn":13,"fix":{"range":[2632,2632],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":144,"column":16,"nodeType":null,"endLine":144,"endColumn":16,"fix":{"range":[2698,2698],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":168,"column":10,"nodeType":null,"endLine":168,"endColumn":10,"fix":{"range":[2954,2954],"text":","}}],"errorCount":20,"warningCount":0,"fixableErrorCount":20,"fixableWarningCount":0,"source":"import { DropResult } from \"react-beautiful-dnd\";\nimport {\n  Payload,\n  PersistedItem,\n  PayloadMap,\n  PersistedItemMap,\n  SelectionMap,\n  ManagerConsts,\n  ManagerAction,\n  ActionCreatorMap,\n  VisibilityFilter\n} from \"./types\";\n\nexport const makeManagerActionCreators = <T>(\n  CONSTS: ManagerConsts\n): ActionCreatorMap<T> => {\n  const {\n    CREATE,\n    DESTROY,\n    MODIFY,\n    SET,\n    CLEAR,\n    MOVE,\n\n    DO_CREATE,\n    DO_DESTROY,\n    DO_MODIFY,\n    DO_SET,\n    DO_CLEAR,\n    DO_MOVE,\n\n    SET_VISIBILITY_FILTER,\n    DO_SET_VISIBILITY_FILTER,\n\n    EXPAND,\n    DO_EXPAND,\n\n    READY\n  } = CONSTS;\n\n  const create = (payload: PersistedItem<T>): ManagerAction<T> => ({\n    type: CREATE,\n    payload\n  });\n\n  const destroy = (itemId: string): ManagerAction<T> => ({\n    type: DESTROY,\n    itemId\n  });\n\n  const modify = (\n    itemId: string,\n    payload: PersistedItem<T>\n  ): ManagerAction<T> => ({\n    type: MODIFY,\n    itemId,\n    payload\n  });\n\n  const set = (payload: {\n    items: PersistedItemMap<T>;\n    selections: SelectionMap;\n  }): ManagerAction<T> => ({\n    type: SET,\n    payload\n  });\n\n  const clear = (): ManagerAction<T> => ({\n    type: CLEAR\n  });\n\n  const move = (itemId: string, payload: DropResult): ManagerAction<T> => {\n    return {\n      type: MOVE,\n      itemId,\n      payload\n    };\n  };\n\n  const doCreate = (itemId: string, payload: Payload<T>): ManagerAction<T> => ({\n    type: DO_CREATE,\n    itemId,\n    payload\n  });\n\n  const doDestroy = (itemId: string): ManagerAction<T> => ({\n    type: DO_DESTROY,\n    itemId\n  });\n\n  const doModify = (itemId: string, payload: Payload<T>): ManagerAction<T> => ({\n    type: DO_MODIFY,\n    itemId,\n    payload\n  });\n\n  const doSet = (payload: {\n    items: PayloadMap<T>;\n    selections: SelectionMap;\n  }): ManagerAction<T> => ({\n    type: DO_SET,\n    payload\n  });\n\n  const doClear = (): ManagerAction<T> => ({\n    type: DO_CLEAR\n  });\n\n  const doMove = (itemId: string, payload: DropResult): ManagerAction<T> => {\n    return {\n      type: DO_MOVE,\n      itemId,\n      payload\n    };\n  };\n\n  const setVisibilityFilter = (\n    visibilityFilter: VisibilityFilter\n  ): ManagerAction<T> => ({\n    type: SET_VISIBILITY_FILTER,\n    visibilityFilter\n  });\n\n  const doSetVisibilityFilter = (\n    visibilityFilter: VisibilityFilter\n  ): ManagerAction<T> => ({\n    type: DO_SET_VISIBILITY_FILTER,\n    visibilityFilter\n  });\n\n  const expand = (itemId: string, expanded: boolean): ManagerAction<T> => ({\n    type: EXPAND,\n    itemId,\n    expanded\n  });\n\n  const doExpand = (itemId: string, expanded: boolean): ManagerAction<T> => ({\n    type: DO_EXPAND,\n    itemId,\n    expanded\n  });\n\n  const ready = (): ManagerAction<T> => ({\n    type: READY\n  });\n\n  return {\n    create,\n    destroy,\n    modify,\n    set,\n    clear,\n    move,\n\n    doCreate,\n    doDestroy,\n    doModify,\n    doSet,\n    doClear,\n    doMove,\n\n    setVisibilityFilter,\n    doSetVisibilityFilter,\n\n    expand,\n    doExpand,\n\n    ready\n  };\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/manager-constants.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":3,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":3,"endColumn":70},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":13,"column":61,"nodeType":null,"endLine":13,"endColumn":61,"fix":{"range":[645,645],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":17,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":17,"endColumn":59},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":21,"column":32,"nodeType":null,"endLine":21,"endColumn":32,"fix":{"range":[831,831],"text":","}}],"errorCount":2,"warningCount":2,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { ManagerConsts } from \"./types\";\n\nconst makeConstants = (managerId: string, prefix: \"\" | \"DO_\" = \"\") => {\n  return {\n    [prefix + \"CREATE\"]: managerId + \"_\" + prefix + \"CREATE\",\n    [prefix + \"DESTROY\"]: managerId + \"_\" + prefix + \"DESTROY\",\n    [prefix + \"MODIFY\"]: managerId + \"_\" + prefix + \"MODIFY\",\n    [prefix + \"SET\"]: managerId + \"_\" + prefix + \"SET\",\n    [prefix + \"CLEAR\"]: managerId + \"_\" + prefix + \"CLEAR\",\n    [prefix + \"MOVE\"]: managerId + \"_\" + prefix + \"MOVE\",\n    [prefix + \"SET_VISIBILITY_FILTER\"]:\n      managerId + \"_\" + prefix + \"SET_VISIBILITY_FILTER\",\n    [prefix + \"EXPAND\"]: managerId + \"_\" + prefix + \"EXPAND\"\n  };\n};\n\nexport const makeManagerConstants = (managerId: string) => {\n  return {\n    ...makeConstants(managerId),\n    ...makeConstants(managerId, \"DO_\"),\n    READY: managerId + \"_READY\"\n  } as ManagerConsts; // Trick Typescript to discriminate between constructed strings\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/manager-progeny-handler.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":5,"column":22,"nodeType":null,"endLine":5,"endColumn":22,"fix":{"range":[77,77],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":13,"column":17,"nodeType":null,"endLine":13,"endColumn":17,"fix":{"range":[222,222],"text":","}},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":20,"column":39,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":20,"endColumn":42,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[460,463],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[460,463],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":29,"column":18,"nodeType":null,"endLine":29,"endColumn":18,"fix":{"range":[655,655],"text":","}},{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":38,"column":14,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":38,"endColumn":43},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":49,"column":18,"nodeType":null,"endLine":49,"endColumn":18,"fix":{"range":[1174,1174],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":64,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":64,"endColumn":42},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":65,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":65,"endColumn":47},{"ruleId":"prefer-const","severity":2,"message":"'manager' is never reassigned. Use 'const' instead.","line":70,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":70,"endColumn":21,"fix":{"range":[1641,1644],"text":"const"}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":79,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":79,"endColumn":28},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":80,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":80,"endColumn":31},{"ruleId":"no-extra-boolean-cast","severity":2,"message":"Redundant Boolean call.","line":81,"column":9,"nodeType":"CallExpression","messageId":"unexpectedCall","endLine":81,"endColumn":31,"fix":{"range":[1891,1913],"text":"children.size"}},{"ruleId":"prefer-const","severity":2,"message":"'manager' is never reassigned. Use 'const' instead.","line":85,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":85,"endColumn":21,"fix":{"range":[1952,1955],"text":"const"}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":94,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":94,"endColumn":42},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":95,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":95,"endColumn":47},{"ruleId":"prefer-const","severity":2,"message":"'manager' is never reassigned. Use 'const' instead.","line":100,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":21,"fix":{"range":[2306,2309],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'descendant' is never reassigned. Use 'const' instead.","line":101,"column":11,"nodeType":"Identifier","messageId":"useConst","endLine":101,"endColumn":21,"fix":{"range":[2348,2351],"text":"const"}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":108,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":108,"endColumn":28},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":109,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":109,"endColumn":31},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":110,"column":30,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":110,"endColumn":33,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2606,2609],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2606,2609],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prefer-const","severity":2,"message":"'manager' is never reassigned. Use 'const' instead.","line":112,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":112,"endColumn":21,"fix":{"range":[2629,2632],"text":"const"}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":134,"column":19,"nodeType":null,"endLine":134,"endColumn":19,"fix":{"range":[3060,3060],"text":","}}],"errorCount":11,"warningCount":11,"fixableErrorCount":11,"fixableWarningCount":0,"source":"import {\n  Payload,\n  Manager,\n  ManagerProgenyHandler,\n  ManagerRelationship\n} from \"./types\";\nimport {\n  addCreateSagas,\n  addDestroySagas,\n  addModifySagas,\n  addSetSagas,\n  addSetVisibilityFilterSagas,\n  addExpandSagas\n} from \"./sagas\";\n\nexport const makeManagerProgenyHandler = <T>(\n  manager: Manager<T>,\n  makeManager: <U>(managerId: string, parentManagerId?: string) => Manager<U>\n): ManagerProgenyHandler<T> => {\n  const children: Map<string, Manager<any>> = new Map();\n  const managerId = manager.managerId;\n\n  const addChild = <U>(\n    childManagerId: string,\n    {\n      adaptToParent,\n      adaptToChild,\n      relationship,\n      selectionId\n    }: {\n      adaptToParent?: (payload: Payload<U>) => Payload<T>;\n      adaptToChild?: (payload: Payload<T>) => Payload<U>;\n      relationship: ManagerRelationship;\n      selectionId?: string;\n    }\n  ): Manager<U> => {\n    if (children.has(childManagerId)) {\n      return children.get(childManagerId)!;\n    }\n\n    const childManager = makeManager<U>(childManagerId, managerId);\n\n    const sagaArgs = {\n      manager,\n      childManager,\n      adaptToChild,\n      adaptToParent,\n      relationship,\n      selectionId\n    };\n\n    addCreateSagas(sagaArgs);\n    addDestroySagas(sagaArgs);\n    addModifySagas(sagaArgs);\n    addSetSagas(sagaArgs);\n    addSetVisibilityFilterSagas(sagaArgs);\n    addExpandSagas(sagaArgs);\n\n    children.set(childManagerId, childManager);\n\n    return childManager;\n  };\n\n  const hasChild = (managerId: string) => children.has(managerId);\n  const hasDescendant = (managerId: string) => {\n    if (children.has(managerId)) {\n      return true;\n    }\n\n    for (let manager of children.values()) {\n      if (manager.progenyHandler.hasDescendant(managerId)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const hasChildren = () => Boolean(children.size);\n  const hasDescendants = () => {\n    if (Boolean(children.size)) {\n      return true;\n    }\n\n    for (let manager of children.values()) {\n      if (manager.progenyHandler.hasDescendants()) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const getChild = (managerId: string) => children.get(managerId);\n  const getDescendant = (managerId: string) => {\n    if (children.has(managerId)) {\n      return children.get(managerId);\n    }\n\n    for (let manager of children.values()) {\n      let descendant = manager.progenyHandler.getDescendant(managerId);\n      if (descendant) {\n        return descendant;\n      }\n    }\n  };\n\n  const getChildren = () => Array.from(children.values());\n  const getDescendants = () => {\n    let descendants: Manager<any>[] = [];\n\n    for (let manager of children.values()) {\n      descendants.push(manager);\n\n      if (manager.progenyHandler.hasChildren()) {\n        descendants = descendants.concat(\n          manager.progenyHandler.getDescendants()\n        );\n      }\n    }\n\n    return descendants;\n  };\n\n  return {\n    addChild,\n    hasChild,\n    hasDescendant,\n    hasChildren,\n    hasDescendants,\n    getChild,\n    getDescendant,\n    getChildren,\n    getDescendants\n  };\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/manager-reducer.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":6,"column":19,"nodeType":null,"endLine":6,"endColumn":19,"fix":{"range":[101,101],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":15,"column":51,"nodeType":null,"endLine":15,"endColumn":51,"fix":{"range":[351,351],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":25,"column":14,"nodeType":null,"endLine":25,"endColumn":14,"fix":{"range":[483,483],"text":","}},{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":56,"column":29,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":56,"endColumn":53},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":70,"column":60,"nodeType":null,"endLine":70,"endColumn":60,"fix":{"range":[1750,1750],"text":","}}],"errorCount":4,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import {\n  ManagerState,\n  ManagerConsts,\n  ManagerReducer,\n  ManagerAnswerAction,\n  VisibilityFilter\n} from \"./types\";\n\nexport const makeManagerReducer = <T>(\n  CONSTS: ManagerConsts\n): ManagerReducer<T> => {\n  const initialState: ManagerState<T> = {\n    items: new Map(),\n    selections: new Map(),\n    visibilityFilter: VisibilityFilter.SHOW_ACTIVE\n  };\n\n  const {\n    DO_CREATE,\n    DO_DESTROY,\n    DO_MODIFY,\n    DO_SET,\n    DO_CLEAR,\n    DO_SET_VISIBILITY_FILTER,\n    DO_EXPAND\n  } = CONSTS;\n\n  const reducer = (\n    state = initialState,\n    action?: ManagerAnswerAction<T>\n  ): ManagerState<T> => {\n    if (action) {\n      switch (action.type) {\n        case DO_CREATE: {\n          const { itemId } = action;\n\n          if (!state.items.has(itemId)) {\n            const newItems = new Map(state.items);\n            newItems.set(itemId, action.payload);\n            return { ...state, items: newItems };\n          }\n\n          return state;\n        }\n\n        case DO_DESTROY: {\n          const newItems = new Map(state.items);\n          newItems.delete(action.itemId);\n          return { ...state, items: newItems };\n        }\n\n        case DO_MODIFY: {\n          const { itemId } = action;\n\n          if (state.items.has(itemId)) {\n            const payload = state.items.get(itemId)!;\n            const newItems = new Map(state.items);\n            newItems.set(itemId, { ...payload, ...action.payload });\n            return { ...state, items: newItems };\n          }\n\n          return state;\n        }\n\n        case DO_SET: {\n          const { items, selections } = action.payload;\n          return {\n            ...initialState,\n            items: new Map(Object.entries(items)),\n            selections: new Map(Object.entries(selections))\n          };\n        }\n\n        case DO_CLEAR: {\n          return initialState;\n        }\n\n        case DO_SET_VISIBILITY_FILTER: {\n          return { ...state, visibilityFilter: action.visibilityFilter };\n        }\n\n        case DO_EXPAND: {\n          const { itemId, expanded } = action;\n\n          if (!state.selections.has(itemId) && expanded) {\n            const newSelections = new Map(state.selections);\n            newSelections.set(itemId, []);\n            return { ...state, selections: newSelections };\n          } else if (state.selections.has(itemId) && !expanded) {\n            const newSelections = new Map(state.selections);\n            newSelections.delete(itemId);\n            return { ...state, selections: newSelections };\n          }\n\n          return state;\n        }\n      }\n    }\n\n    return state;\n  };\n\n  return reducer;\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/manager.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":17,"column":19,"nodeType":null,"endLine":17,"endColumn":19,"fix":{"range":[355,355],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":38,"column":11,"nodeType":null,"endLine":38,"endColumn":11,"fix":{"range":[943,943],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":48,"column":13,"nodeType":null,"endLine":48,"endColumn":13,"fix":{"range":[1125,1125],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":53,"column":21,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":53,"endColumn":26},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":60,"column":40,"nodeType":null,"endLine":60,"endColumn":40,"fix":{"range":[1593,1593],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":67,"column":24,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":67,"endColumn":51},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":110,"column":57,"nodeType":null,"endLine":110,"endColumn":57,"fix":{"range":[3139,3139],"text":","}},{"ruleId":"prefer-const","severity":2,"message":"'itemId' is never reassigned. Use 'const' instead.","line":114,"column":17,"nodeType":"Identifier","messageId":"useConst","endLine":114,"endColumn":23,"fix":{"range":[3244,3247],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'persistedItem' is never reassigned. Use 'const' instead.","line":114,"column":25,"nodeType":"Identifier","messageId":"useConst","endLine":114,"endColumn":38,"fix":{"range":[3244,3247],"text":"const"}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":145,"column":6,"nodeType":null,"endLine":145,"endColumn":6,"fix":{"range":[4206,4206],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":152,"column":24,"nodeType":null,"endLine":152,"endColumn":24,"fix":{"range":[4395,4395],"text":","}}],"errorCount":9,"warningCount":2,"fixableErrorCount":9,"fixableWarningCount":0,"source":"import { all, call, put, take } from \"redux-saga/effects\";\nimport { SagaGenerator } from \"../../generics\";\nimport {\n  CombinedState,\n  Validator,\n  PersistedItem,\n  MutablePayloadMap,\n  Errors,\n  Manager,\n  ManagerProgenyHandler,\n  CreateAction,\n  DestroyAction,\n  ModifyAction,\n  SetAction,\n  SetVisibilityFilterAction,\n  ExpandAction,\n  StateSelectorMap\n} from \"./types\";\nimport { makeSagaManager } from \"./saga-manager\";\nimport { makeManagerConstants } from \"./manager-constants\";\nimport { makeManagerActionCreators } from \"./manager-action-creators\";\nimport { makeManagerReducer } from \"./manager-reducer\";\nimport { makeManagerProgenyHandler } from \"./manager-progeny-handler\";\n\nlet counter = 0;\n\nexport const makeManager = <T>(\n  managerId: string,\n  parentManagerId?: string\n): Manager<T> => {\n  const CONSTS = makeManagerConstants(managerId);\n  const {\n    CREATE,\n    DESTROY,\n    MODIFY,\n    SET,\n    SET_VISIBILITY_FILTER,\n    EXPAND\n  } = CONSTS;\n\n  const actionCreators = makeManagerActionCreators<T>(CONSTS);\n  const {\n    doCreate,\n    doDestroy,\n    doModify,\n    doSet,\n    doSetVisibilityFilter,\n    doExpand\n  } = actionCreators;\n\n  const reducer = makeManagerReducer<T>(CONSTS);\n\n  const makeTmpId = () => managerId + \"_\" + counter++;\n\n  const stateSelectors: StateSelectorMap<T> = {\n    getState: (state: CombinedState) => state[managerId],\n    getItemMap: (state: CombinedState) => state[managerId].items,\n    getSelectionMap: (state: CombinedState) => state[managerId].selections,\n    getVisibilityFilter: (state: CombinedState) =>\n      state[managerId].visibilityFilter\n  };\n\n  const sagaManager = makeSagaManager();\n\n  const validators: Set<Validator<T>> = new Set();\n\n  const addValidator = (validate: Validator<T>) => {\n    if (parentManagerId) {\n      throw new Error(\n        `A child childManager cannot have validators: ${managerId}`\n      );\n    }\n\n    validators.add(validate);\n  };\n\n  function* validateSaga(payload: PersistedItem<T>): SagaGenerator {\n    const validationMessages: string[][] = yield all(\n      Array.from(validators).map((validate) => call(validate, payload))\n    );\n\n    const errors: Set<string> = new Set();\n    validationMessages.forEach((msgs) =>\n      msgs.forEach((msg) => errors.add(msg))\n    );\n\n    return Array.from(errors);\n  }\n\n  if (!parentManagerId) {\n    sagaManager.add(CREATE, function* (): SagaGenerator {\n      const { payload }: CreateAction<T> = yield take(CREATE);\n      const errors: Errors | undefined = yield* validateSaga(payload);\n      yield put(doCreate(makeTmpId(), { ...payload, errors } as const));\n    });\n\n    sagaManager.add(DESTROY, function* (): SagaGenerator {\n      const { itemId }: DestroyAction = yield take(DESTROY);\n      yield put(doDestroy(itemId));\n    });\n\n    sagaManager.add(MODIFY, function* (): SagaGenerator {\n      const { itemId, payload }: ModifyAction<T> = yield take(MODIFY);\n      const errors: Errors = yield* validateSaga(payload);\n      yield put(doModify(itemId, { ...payload, errors }));\n    });\n\n    sagaManager.add(SET, function* (): SagaGenerator {\n      const {\n        payload: { items: persistedItemMap, selections }\n      }: SetAction<T> = yield take(SET);\n      const payloadMap: MutablePayloadMap<T> = {};\n\n      for (let [itemId, persistedItem] of Object.entries(persistedItemMap)) {\n        const errors: Errors = yield* validateSaga(persistedItem);\n        payloadMap[itemId] = { ...persistedItem, errors };\n      }\n\n      yield put(doSet({ items: payloadMap, selections }));\n    });\n\n    sagaManager.add(SET_VISIBILITY_FILTER, function* (): SagaGenerator {\n      const { visibilityFilter }: SetVisibilityFilterAction = yield take(\n        SET_VISIBILITY_FILTER\n      );\n      yield put(doSetVisibilityFilter(visibilityFilter));\n    });\n\n    sagaManager.add(EXPAND, function* (): SagaGenerator {\n      const { itemId }: ExpandAction = yield take(EXPAND);\n      yield put(doExpand(itemId, true));\n    });\n  }\n\n  const manager = {\n    managerId,\n    CONSTS,\n    actionCreators,\n    stateSelectors,\n    reducer,\n    sagaManager,\n    addValidator,\n    get progenyHandler(): ManagerProgenyHandler<T> {\n      throw new Error(\"Manager.progenyHandler accessed before being set\");\n    }\n  };\n\n  Object.defineProperty(manager, \"progenyHandler\", {\n    value: makeManagerProgenyHandler<T>(manager, makeManager),\n    writable: false,\n    enumerable: true,\n    configurable: false\n  });\n\n  return manager;\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/saga-manager.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":13,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":17,"endColumn":7},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":39,"column":17,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":39,"endColumn":38},{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":41,"column":26,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":41,"endColumn":46},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":46,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":46,"endColumn":37},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":50,"column":18,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":50,"endColumn":39},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":56,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":60,"endColumn":7},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":69,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":69,"endColumn":25},{"ruleId":"prefer-const","severity":2,"message":"'sagaName' is never reassigned. Use 'const' instead.","line":70,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":70,"endColumn":22,"fix":{"range":[1643,1646],"text":"const"}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":75,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":75,"endColumn":24},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":79,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":83,"endColumn":7},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":102,"column":8,"nodeType":null,"endLine":102,"endColumn":8,"fix":{"range":[2120,2120],"text":","}}],"errorCount":2,"warningCount":9,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import createSagaMiddleware from \"redux-saga\";\nimport { take } from \"redux-saga/effects\";\nimport { SagaGenerator } from \"../../generics\";\nimport { SagaManager } from \"./types\";\n\nexport const sagaMiddleware = createSagaMiddleware();\n\nexport const makeSagaManager = (): SagaManager => {\n  const triggers: Map<string, string> = new Map();\n  const sagas: Map<string, () => SagaGenerator> = new Map();\n  const runningSagas: Set<string> = new Set();\n\n  const add = (\n    sagaName: string,\n    saga: () => SagaGenerator,\n    trigger?: string\n  ) => {\n    if (sagas.has(sagaName)) {\n      return;\n    }\n\n    if (trigger) {\n      triggers.set(sagaName, trigger);\n    }\n\n    const controllableSaga = function* (): SagaGenerator {\n      if (triggers.has(sagaName)) {\n        yield take(triggers.get(sagaName));\n      }\n\n      do {\n        yield* saga();\n      } while (runningSagas.has(sagaName));\n    };\n\n    sagas.set(sagaName, controllableSaga);\n  };\n\n  const start = (sagaName: string) => {\n    if (sagas.has(sagaName) && !runningSagas.has(sagaName)) {\n      sagaMiddleware.run(sagas.get(sagaName)!);\n      runningSagas.add(sagaName);\n    }\n  };\n\n  const stop = (sagaName: string) => {\n    runningSagas.delete(sagaName);\n  };\n\n  const remove = (sagaName: string) => {\n    stop(sagaName);\n    sagas.delete(sagaName);\n    triggers.delete(sagaName);\n  };\n\n  const replace = (\n    sagaName: string,\n    saga: () => SagaGenerator,\n    trigger?: string\n  ) => {\n    const running = runningSagas.has(sagaName);\n    remove(sagaName);\n    add(sagaName, saga, trigger);\n    if (running) {\n      start(sagaName);\n    }\n  };\n\n  const startAll = () => {\n    for (let sagaName of sagas.keys()) {\n      start(sagaName);\n    }\n  };\n\n  const stopAll = () => {\n    runningSagas.clear();\n  };\n\n  const run = (\n    sagaName?: string,\n    saga?: () => SagaGenerator,\n    trigger?: string\n  ) => {\n    if (!sagaName) {\n      startAll();\n    } else {\n      if (saga) {\n        add(sagaName, saga, trigger);\n      }\n      start(sagaName);\n    }\n  };\n\n  return {\n    add,\n    remove,\n    replace,\n    start,\n    stop,\n    startAll,\n    stopAll,\n    run\n  };\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App2/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/todo.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":7,"column":28,"nodeType":null,"endLine":7,"endColumn":28,"fix":{"range":[168,168],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":19,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":23,"endColumn":5},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":31,"column":53,"nodeType":null,"endLine":31,"endColumn":53,"fix":{"range":[683,683],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":39,"column":52,"nodeType":null,"endLine":39,"endColumn":52,"fix":{"range":[857,857],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":47,"column":55,"nodeType":null,"endLine":47,"endColumn":55,"fix":{"range":[1032,1032],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":61,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":61,"endColumn":27},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":63,"column":30,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":63,"endColumn":48}],"errorCount":4,"warningCount":3,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import { VisibilityFilter, TodoStates, View } from \"./types\";\nimport {\n  TodoActions,\n  AddPartAction,\n  AddViewAction,\n  UpdateViewsAction,\n  SetVisibilityFilterAction\n} from \"./actions\";\n\nexport type TodoActionType =\n  | TodoActions\n  | AddPartAction\n  | AddViewAction\n  | UpdateViewsAction\n  | SetVisibilityFilterAction;\n\nexport const rootId = \"ROOT\";\n\nexport const makeView = (\n  partId: string,\n  visibilityFilter: VisibilityFilter,\n  todos: TodoStates\n) => {\n  let view: View<\"todos\", TodoStates>;\n\n  switch (visibilityFilter) {\n    case VisibilityFilter.SHOW_ACTIVE:\n      view = {\n        partId,\n        visibilityFilter,\n        todos: todos.filter((todo) => !todo.checked)\n      };\n      break;\n\n    case VisibilityFilter.SHOW_COMPLETED:\n      view = {\n        partId,\n        visibilityFilter,\n        todos: todos.filter((todo) => todo.checked)\n      };\n      break;\n\n    case VisibilityFilter.SHOW_INVALID:\n      view = {\n        partId,\n        visibilityFilter,\n        todos: todos.filter((todo) => !todo.validated)\n      };\n      break;\n\n    case VisibilityFilter.SHOW_ALL:\n    default:\n      view = { partId, visibilityFilter, todos };\n      break;\n  }\n\n  return view;\n};\n\nlet currentId = Date.now();\nexport const tmpId = () => \"todo\" + currentId++;\n\nexport const validateTitle = (title: string) => {\n  const errors: string[] = [];\n\n  if (title === \"\") {\n    errors.push(\"Empty string\");\n  }\n\n  return errors;\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/ui.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":24,"column":9,"nodeType":null,"endLine":24,"endColumn":9,"fix":{"range":[541,541],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":31,"column":9,"nodeType":null,"endLine":31,"endColumn":9,"fix":{"range":[668,668],"text":","}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"export interface UI {\n  mainViewId: string;\n  subViewId?: string;\n}\n\nexport const UPDATE_SUBVIEW = \"UPDATE_SUBVIEW\";\nexport const CLOSE_SUBVIEW = \"CLOSE_SUBVIEW\";\n\ninterface UpdateSubViewAction {\n  type: typeof UPDATE_SUBVIEW;\n  meta: { subViewId: string };\n}\n\ninterface CloseSubViewAction {\n  type: typeof CLOSE_SUBVIEW;\n  meta: { subViewId: string };\n}\n\nexport type UIAction = UpdateSubViewAction | CloseSubViewAction;\n\nexport const updateSubView = (meta: { subViewId: string }): UIAction => {\n  return {\n    type: UPDATE_SUBVIEW,\n    meta\n  };\n};\n\nexport const closeSubView = (meta: { subViewId: string }): UIAction => {\n  return {\n    type: CLOSE_SUBVIEW,\n    meta\n  };\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/components/custom-types.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/sagas/create.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":8,"column":17,"nodeType":null,"endLine":8,"endColumn":17,"fix":{"range":[185,185],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":11,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":23,"endColumn":6},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":16,"column":16,"nodeType":null,"endLine":16,"endColumn":16,"fix":{"range":[323,323],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":26,"column":31,"nodeType":null,"endLine":26,"endColumn":31,"fix":{"range":[601,601],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":32,"column":16,"nodeType":null,"endLine":32,"endColumn":16,"fix":{"range":[758,758],"text":","}}],"errorCount":4,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import { put, take } from \"redux-saga/effects\";\nimport { SagaGenerator } from \"../../../generics\";\nimport {\n  Manager,\n  Payload,\n  ManagerRelationship,\n  CreateAction,\n  DoCreateAction\n} from \"../types\";\n\nexport const addCreateSagas = <T, U = T>({\n  manager,\n  childManager,\n  relationship,\n  adaptToChild,\n  adaptToParent\n}: {\n  manager: Manager<T>;\n  childManager: Manager<U>;\n  relationship: ManagerRelationship;\n  adaptToChild?: (payload: Payload<T>) => Payload<U>;\n  adaptToParent?: (payload: Payload<U>) => Payload<T>;\n}) => {\n  const {\n    CONSTS: { DO_CREATE },\n    actionCreators: { create }\n  } = manager;\n\n  const {\n    CONSTS: { CREATE: CHILD_CREATE, DO_CREATE: CHILD_DO_CREATE },\n    actionCreators: { doCreate: childDoCreate },\n    sagaManager\n  } = childManager;\n\n  switch (relationship) {\n    case ManagerRelationship.MAP: {\n      if (adaptToParent && adaptToChild) {\n        sagaManager.add(CHILD_CREATE, function* (): SagaGenerator {\n          const { payload }: CreateAction<U> = yield take(CHILD_CREATE);\n          yield put(create(adaptToParent(payload)));\n        });\n\n        sagaManager.add(CHILD_DO_CREATE, function* (): SagaGenerator {\n          const { itemId, payload }: DoCreateAction<T> = yield take(DO_CREATE);\n          yield put(childDoCreate(itemId, adaptToChild(payload)));\n        });\n      }\n\n      break;\n    }\n\n    case ManagerRelationship.FILTER: {\n      sagaManager.add(CHILD_CREATE, function* (): SagaGenerator {\n        const { payload: childPayload }: CreateAction<T> = yield take(\n          CHILD_CREATE\n        );\n        yield put(create(childPayload));\n\n        const { itemId, payload }: DoCreateAction<U> = yield take(DO_CREATE);\n        yield put(childDoCreate(itemId, payload));\n      });\n\n      break;\n    }\n\n    case ManagerRelationship.SELECT: {\n      break;\n    }\n  }\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/sagas/destroy.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":7,"column":18,"nodeType":null,"endLine":7,"endColumn":18,"fix":{"range":[176,176],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":10,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":18,"endColumn":6},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":13,"column":15,"nodeType":null,"endLine":13,"endColumn":15,"fix":{"range":[278,278],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":21,"column":32,"nodeType":null,"endLine":21,"endColumn":32,"fix":{"range":[449,449],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":26,"column":16,"nodeType":null,"endLine":26,"endColumn":16,"fix":{"range":[611,611],"text":","}}],"errorCount":4,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import { put, take } from \"redux-saga/effects\";\nimport { SagaGenerator } from \"../../../generics\";\nimport {\n  Manager,\n  ManagerRelationship,\n  DestroyAction,\n  DoDestroyAction\n} from \"../types\";\n\nexport const addDestroySagas = <T, U>({\n  manager,\n  childManager,\n  relationship\n}: {\n  manager: Manager<T>;\n  childManager: Manager<U>;\n  relationship: ManagerRelationship;\n}) => {\n  const {\n    CONSTS: { DO_DESTROY },\n    actionCreators: { destroy }\n  } = manager;\n  const {\n    CONSTS: { DESTROY: CHILD_DESTROY, DO_DESTROY: CHILD_DO_DESTROY },\n    actionCreators: { doDestroy: childDoDestroy },\n    sagaManager\n  } = childManager;\n\n  switch (relationship) {\n    case ManagerRelationship.MAP:\n    case ManagerRelationship.FILTER: {\n      sagaManager.add(CHILD_DESTROY, function* (): SagaGenerator {\n        const { itemId }: DestroyAction = yield take(CHILD_DESTROY);\n        yield put(destroy(itemId));\n      });\n\n      sagaManager.add(CHILD_DO_DESTROY, function* (): SagaGenerator {\n        const { itemId }: DoDestroyAction = yield take(DO_DESTROY);\n        yield put(childDoDestroy(itemId));\n      });\n\n      break;\n    }\n\n    case ManagerRelationship.SELECT: {\n      break;\n    }\n  }\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/sagas/expand.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":8,"column":17,"nodeType":null,"endLine":8,"endColumn":17,"fix":{"range":[185,185],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":11,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":21,"endColumn":6},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":14,"column":15,"nodeType":null,"endLine":14,"endColumn":15,"fix":{"range":[290,290],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":24,"column":31,"nodeType":null,"endLine":24,"endColumn":31,"fix":{"range":[568,568],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":30,"column":16,"nodeType":null,"endLine":30,"endColumn":16,"fix":{"range":[725,725],"text":","}}],"errorCount":4,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import { put, take } from \"redux-saga/effects\";\nimport { SagaGenerator } from \"../../../generics\";\nimport {\n  Manager,\n  Payload,\n  ManagerRelationship,\n  ExpandAction,\n  DoExpandAction\n} from \"../types\";\n\nexport const addExpandSagas = <T, U = T>({\n  manager,\n  childManager,\n  relationship\n}: {\n  manager: Manager<T>;\n  childManager: Manager<U>;\n  relationship: ManagerRelationship;\n  adaptToChild?: (payload: Payload<T>) => Payload<U>;\n  adaptToParent?: (payload: Payload<U>) => Payload<T>;\n}) => {\n  const {\n    CONSTS: { DO_EXPAND },\n    actionCreators: { expand }\n  } = manager;\n\n  const {\n    CONSTS: { EXPAND: CHILD_EXPAND, DO_EXPAND: CHILD_DO_EXPAND },\n    actionCreators: { doExpand: childDoExpand },\n    sagaManager\n  } = childManager;\n\n  switch (relationship) {\n    case ManagerRelationship.MAP: {\n      sagaManager.add(CHILD_EXPAND, function* (): SagaGenerator {\n        const { itemId, expanded }: ExpandAction = yield take(CHILD_EXPAND);\n        yield put(expand(itemId, expanded));\n      });\n\n      sagaManager.add(CHILD_DO_EXPAND, function* (): SagaGenerator {\n        const { itemId, expanded }: DoExpandAction = yield take(DO_EXPAND);\n        yield put(childDoExpand(itemId, expanded));\n      });\n\n      break;\n    }\n\n    case ManagerRelationship.FILTER: {\n      sagaManager.add(CHILD_EXPAND, function* (): SagaGenerator {\n        const { itemId, expanded }: ExpandAction = yield take(CHILD_EXPAND);\n        yield put(expand(itemId, expanded));\n\n        yield take(DO_EXPAND);\n        yield put(childDoExpand(itemId, expanded));\n      });\n\n      break;\n    }\n\n    case ManagerRelationship.SELECT: {\n      break;\n    }\n  }\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/sagas/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/sagas/modify.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":8,"column":17,"nodeType":null,"endLine":8,"endColumn":17,"fix":{"range":[185,185],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":11,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":23,"endColumn":6},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":16,"column":16,"nodeType":null,"endLine":16,"endColumn":16,"fix":{"range":[319,319],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":26,"column":31,"nodeType":null,"endLine":26,"endColumn":31,"fix":{"range":[597,597],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":31,"column":16,"nodeType":null,"endLine":31,"endColumn":16,"fix":{"range":[753,753],"text":","}}],"errorCount":4,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import { put, take } from \"redux-saga/effects\";\nimport { SagaGenerator } from \"../../../generics\";\nimport {\n  Manager,\n  Payload,\n  ManagerRelationship,\n  ModifyAction,\n  DoModifyAction\n} from \"../types\";\n\nexport const addModifySagas = <T, U>({\n  manager,\n  childManager,\n  relationship,\n  adaptToChild,\n  adaptToParent\n}: {\n  manager: Manager<T>;\n  childManager: Manager<U>;\n  relationship: ManagerRelationship;\n  adaptToChild?: (payload: Payload<T>) => Payload<U>;\n  adaptToParent?: (payload: Payload<U>) => Payload<T>;\n}) => {\n  const {\n    CONSTS: { DO_MODIFY },\n    actionCreators: { modify }\n  } = manager;\n  const {\n    CONSTS: { MODIFY: CHILD_MODIFY, DO_MODIFY: CHILD_DO_MODIFY },\n    actionCreators: { doModify: childDoModify },\n    sagaManager\n  } = childManager;\n\n  switch (relationship) {\n    case ManagerRelationship.MAP: {\n      if (adaptToParent && adaptToChild) {\n        sagaManager.add(CHILD_MODIFY, function* (): SagaGenerator {\n          const { itemId, payload }: ModifyAction<U> = yield take(CHILD_MODIFY);\n          yield put(modify(itemId, adaptToParent(payload)));\n        });\n\n        sagaManager.add(CHILD_DO_MODIFY, function* (): SagaGenerator {\n          const { itemId, payload }: DoModifyAction<T> = yield take(DO_MODIFY);\n          yield put(childDoModify(itemId, adaptToChild(payload)));\n        });\n      }\n\n      break;\n    }\n\n    case ManagerRelationship.FILTER: {\n      sagaManager.add(CHILD_MODIFY, function* (): SagaGenerator {\n        const { itemId, payload }: ModifyAction<T> = yield take(CHILD_MODIFY);\n        yield put(modify(itemId, payload));\n      });\n\n      sagaManager.add(CHILD_DO_MODIFY, function* (): SagaGenerator {\n        const { itemId, payload }: DoModifyAction<U> = yield take(DO_MODIFY);\n        yield put(childDoModify(itemId, payload));\n      });\n\n      break;\n    }\n\n    case ManagerRelationship.SELECT: {\n      break;\n    }\n  }\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/sagas/set-visibility-filter.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":5,"column":44,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":11,"endColumn":6},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":7,"column":15,"nodeType":null,"endLine":7,"endColumn":15,"fix":{"range":[240,240],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":13,"column":41,"nodeType":null,"endLine":13,"endColumn":41,"fix":{"range":[355,355],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":18,"column":16,"nodeType":null,"endLine":18,"endColumn":16,"fix":{"range":[539,539],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":24,"column":31,"nodeType":null,"endLine":24,"endColumn":31,"fix":{"range":[776,776],"text":","}}],"errorCount":4,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import { put, take } from \"redux-saga/effects\";\nimport { SagaGenerator } from \"../../../generics\";\nimport { Manager, SetVisibilityFilterAction } from \"../types\";\n\nexport const addSetVisibilityFilterSagas = <T, U>({\n  manager,\n  childManager\n}: {\n  manager: Manager<T>;\n  childManager: Manager<U>;\n}) => {\n  const {\n    CONSTS: { DO_SET_VISIBILITY_FILTER }\n  } = manager;\n  const {\n    CONSTS: { SET_VISIBILITY_FILTER: CHILD_SET_VISIBILITY_FILTER },\n    actionCreators: { doSetVisibilityFilter: childDoSetVisibilityFilter },\n    sagaManager\n  } = childManager;\n\n  sagaManager.add(CHILD_SET_VISIBILITY_FILTER, function* (): SagaGenerator {\n    const { visibilityFilter }: SetVisibilityFilterAction = yield take([\n      CHILD_SET_VISIBILITY_FILTER,\n      DO_SET_VISIBILITY_FILTER\n    ]);\n\n    yield put(childDoSetVisibilityFilter(visibilityFilter));\n  });\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/sagas/set.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":8,"column":20,"nodeType":null,"endLine":8,"endColumn":20,"fix":{"range":[187,187],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":11,"column":28,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":25,"endColumn":6},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":17,"column":14,"nodeType":null,"endLine":17,"endColumn":14,"fix":{"range":[333,333],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":27,"column":23,"nodeType":null,"endLine":27,"endColumn":23,"fix":{"range":[600,600],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":32,"column":16,"nodeType":null,"endLine":32,"endColumn":16,"fix":{"range":[722,722],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":40,"column":55,"nodeType":null,"endLine":40,"endColumn":55,"fix":{"range":[989,989],"text":","}},{"ruleId":"prefer-const","severity":2,"message":"'itemId' is never reassigned. Use 'const' instead.","line":44,"column":21,"nodeType":"Identifier","messageId":"useConst","endLine":44,"endColumn":27,"fix":{"range":[1116,1119],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'payload' is never reassigned. Use 'const' instead.","line":44,"column":29,"nodeType":"Identifier","messageId":"useConst","endLine":44,"endColumn":36,"fix":{"range":[1116,1119],"text":"const"}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":59,"column":55,"nodeType":null,"endLine":59,"endColumn":55,"fix":{"range":[1563,1563],"text":","}},{"ruleId":"prefer-const","severity":2,"message":"'itemId' is never reassigned. Use 'const' instead.","line":64,"column":21,"nodeType":"Identifier","messageId":"useConst","endLine":64,"endColumn":27,"fix":{"range":[1758,1761],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'payload' is never reassigned. Use 'const' instead.","line":64,"column":29,"nodeType":"Identifier","messageId":"useConst","endLine":64,"endColumn":36,"fix":{"range":[1758,1761],"text":"const"}}],"errorCount":10,"warningCount":1,"fixableErrorCount":10,"fixableWarningCount":0,"source":"import { put, take } from \"redux-saga/effects\";\nimport { SagaGenerator } from \"../../../generics\";\nimport {\n  Manager,\n  Payload,\n  ManagerRelationship,\n  DoSetAction,\n  MutablePayloadMap\n} from \"../types\";\n\nexport const addSetSagas = <T, U>({\n  manager,\n  childManager,\n  relationship,\n  adaptToChild,\n  adaptToParent,\n  selectionId\n}: {\n  manager: Manager<T>;\n  childManager: Manager<U>;\n  relationship: ManagerRelationship;\n  adaptToChild?: (payload: Payload<T>) => Payload<U>;\n  adaptToParent?: (payload: Payload<U>) => Payload<T>;\n  selectionId?: string;\n}) => {\n  const {\n    CONSTS: { DO_SET }\n  } = manager;\n  const {\n    CONSTS: { DO_SET: CHILD_DO_SET },\n    actionCreators: { doSet: childDoSet },\n    sagaManager\n  } = childManager;\n\n  switch (relationship) {\n    case ManagerRelationship.MAP: {\n      if (adaptToParent && adaptToChild) {\n        sagaManager.add(CHILD_DO_SET, function* (): SagaGenerator {\n          const {\n            payload: { items: payloadMap, selections }\n          }: DoSetAction<T> = yield take(DO_SET);\n          const childPayloadMap: MutablePayloadMap<U> = {};\n\n          for (let [itemId, payload] of Object.entries(payloadMap)) {\n            childPayloadMap[itemId] = adaptToChild(payload);\n          }\n\n          yield put(childDoSet({ items: childPayloadMap, selections }));\n        });\n      }\n\n      break;\n    }\n\n    case ManagerRelationship.FILTER: {\n      if (selectionId) {\n        sagaManager.add(CHILD_DO_SET, function* (): SagaGenerator {\n          const {\n            payload: { items: payloadMap, selections }\n          }: DoSetAction<U> = yield take(DO_SET);\n          const childPayloadMap: MutablePayloadMap<U> = {};\n          const selection = new Set(selections[selectionId] || []);\n\n          for (let [itemId, payload] of Object.entries(payloadMap)) {\n            if (!selection.size) {\n              break;\n            }\n\n            if (selection.has(itemId)) {\n              childPayloadMap[itemId] = payload;\n              selection.delete(itemId);\n            }\n          }\n\n          yield put(childDoSet({ items: childPayloadMap, selections }));\n        });\n      }\n\n      break;\n    }\n\n    case ManagerRelationship.SELECT: {\n      break;\n    }\n  }\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/action-creator-map.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/combined-manager-reducer.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":4,"column":72,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":4,"endColumn":75,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[170,173],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[170,173],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Action } from \"redux\";\nimport { ManagerState, ManagerReducer } from \"./manager-reducer\";\n\nexport type MutableCombinedState = { [managerId: string]: ManagerState<any> };\nexport type CombinedState = Readonly<MutableCombinedState>;\n\nexport type MutableReducerMap<T> = { [managerId: string]: ManagerReducer<T> };\n\nexport type CombinedReducer = (\n  state?: CombinedState,\n  action?: Action\n) => CombinedState;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/errors.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/index.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":9,"column":18,"nodeType":null,"endLine":9,"endColumn":18,"fix":{"range":[184,184],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":20,"column":13,"nodeType":null,"endLine":20,"endColumn":13,"fix":{"range":[372,372],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":27,"column":24,"nodeType":null,"endLine":27,"endColumn":24,"fix":{"range":[474,474],"text":","}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"export * from \"./actions\";\n\nexport type { ActionCreatorMap } from \"./action-creator-map\";\n\nexport type {\n  MutableCombinedState,\n  CombinedState,\n  MutableReducerMap,\n  CombinedReducer\n} from \"./combined-manager-reducer\";\n\nexport type { Errors } from \"./errors\";\n\nexport type {\n  PersistedItem,\n  Payload,\n  ItemState,\n  MutablePayloadMap,\n  PersistedItemMap,\n  PayloadMap\n} from \"./item\";\n\nexport type {\n  Manager,\n  MutableManagerMap,\n  ManagerMap,\n  ManagerProgenyHandler\n} from \"./manager\";\nexport { ManagerRelationship } from \"./manager\";\n\nexport type { ManagerConsts } from \"./manager-consts\";\nexport type { ManagerState, ManagerReducer } from \"./manager-reducer\";\nexport type { SagaManager } from \"./saga-manager\";\nexport type { Selections, SelectionMap } from \"./selections\";\nexport type { StateSelectorMap } from \"./state-selector\";\nexport type { Validator } from \"./validator\";\n\nexport { VisibilityFilter } from \"./visibility-filter\";\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/item.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/manager-consts.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/manager-reducer.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/manager.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":29,"column":9,"nodeType":null,"endLine":29,"endColumn":9,"fix":{"range":[847,847],"text":","}},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":47,"column":44,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":47,"endColumn":47,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1372,1375],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1372,1375],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":48,"column":49,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":48,"endColumn":52,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1438,1441],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1438,1441],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":49,"column":39,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":49,"endColumn":42,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1494,1497],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1494,1497],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":50,"column":42,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":50,"endColumn":45,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1543,1546],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1543,1546],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"errorCount":1,"warningCount":4,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { SagaManager } from \"./saga-manager\";\nimport { ManagerConsts } from \"./manager-consts\";\nimport { ActionCreatorMap } from \"./action-creator-map\";\nimport { ManagerReducer } from \"./manager-reducer\";\nimport { Payload } from \"./item\";\nimport { Validator } from \"./validator\";\nimport { StateSelectorMap } from \"./state-selector\";\n\nexport type Manager<T> = Readonly<{\n  managerId: string;\n  CONSTS: ManagerConsts;\n  actionCreators: ActionCreatorMap<T>;\n  stateSelectors: StateSelectorMap<T>;\n  reducer: ManagerReducer<T>;\n  sagaManager: SagaManager;\n  progenyHandler: ManagerProgenyHandler<T>;\n  addValidator: (validate: Validator<T>) => void;\n}>;\n\nexport type MutableManagerMap<T> = {\n  [managerId: string]: Manager<T>;\n};\n\nexport type ManagerMap<T> = Readonly<MutableManagerMap<T>>;\n\nexport enum ManagerRelationship {\n  MAP,\n  FILTER,\n  SELECT\n}\nexport type ManagerProgenyHandler<T> = Readonly<{\n  addChild: <U>(\n    childManagerId: string,\n    options: {\n      adaptToParent?: (payload: Payload<U>) => Payload<T>;\n      adaptToChild?: (payload: Payload<T>) => Payload<U>;\n      relationship: ManagerRelationship;\n      selectionId?: string;\n    }\n  ) => Manager<U>;\n\n  hasChild: (managerId: string) => boolean;\n  hasDescendant: (managerId: string) => boolean;\n  hasChildren: () => boolean;\n  hasDescendants: () => boolean;\n\n  getChild: (managerId: string) => Manager<any> | undefined;\n  getDescendant: (managerId: string) => Manager<any> | undefined;\n  getChildren: () => readonly Manager<any>[];\n  getDescendants: () => readonly Manager<any>[];\n}>;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/saga-manager.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/selections.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/state-selector.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":6,"column":55,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":6,"endColumn":58,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[255,258],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[255,258],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ManagerState } from \"./manager-reducer\";\nimport { Payload } from \"./item\";\nimport { CombinedState } from \"./combined-manager-reducer\";\nimport { VisibilityFilter } from \"./visibility-filter\";\n\nexport type StateSelector = (state: CombinedState) => any;\n\nexport type StateSelectorMap<T> = {\n  getState: (state: CombinedState) => ManagerState<T>;\n  getItemMap: (state: CombinedState) => Map<string, Payload<T>>;\n  getSelectionMap: (state: CombinedState) => Map<string, readonly string[]>;\n  getVisibilityFilter: (state: CombinedState) => VisibilityFilter;\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/validator.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/visibility-filter.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":5,"column":15,"nodeType":null,"endLine":5,"endColumn":15,"fix":{"range":[90,90],"text":","}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"export enum VisibilityFilter {\n  SHOW_ALL,\n  SHOW_ACTIVE,\n  SHOW_COMPLETED,\n  SHOW_INVALID\n}\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App2/managers/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App2/managers/saga-manager.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":13,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":13,"endColumn":69},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":38,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":38,"endColumn":27},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":44,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":44,"endColumn":73},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":53,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":53,"endColumn":26},{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":55,"column":26,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":55,"endColumn":51},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":60,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":60,"endColumn":25},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":64,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":64,"endColumn":13},{"ruleId":"prefer-const","severity":2,"message":"'sagaName' is never reassigned. Use 'const' instead.","line":65,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":65,"endColumn":22,"fix":{"range":[1731,1734],"text":"const"}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":70,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":70,"endColumn":12},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":74,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":74,"endColumn":71}],"errorCount":1,"warningCount":9,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import createSagaMiddleware from \"redux-saga\";\nimport { take } from \"redux-saga/effects\";\nimport { SagaGenerator } from \"../../../generics\";\nimport { SagaManager as SagaManagerInterface } from \"../types\";\n\nexport const sagaMiddleware = createSagaMiddleware();\n\nexport class SagaManager implements SagaManagerInterface {\n  private triggers: Map<string, string> = new Map();\n  private sagas: Map<string, () => SagaGenerator> = new Map();\n  private runningSagas: Set<string> = new Set();\n\n  add(sagaName: string, saga: () => SagaGenerator, trigger?: string) {\n    if (this.sagas.has(sagaName)) {\n      return;\n    }\n\n    if (trigger) {\n      this.triggers.set(sagaName, trigger);\n    }\n\n    const triggers = this.triggers;\n    const runningSagas = this.runningSagas;\n\n    const controllableSaga = function* (): SagaGenerator {\n      if (triggers.has(sagaName)) {\n        yield take(triggers.get(sagaName));\n      }\n\n      do {\n        yield* saga();\n      } while (runningSagas.has(sagaName));\n    };\n\n    this.sagas.set(sagaName, controllableSaga);\n  }\n\n  remove(sagaName: string) {\n    this.stop(sagaName);\n    this.sagas.delete(sagaName);\n    this.triggers.delete(sagaName);\n  }\n\n  replace(sagaName: string, saga: () => SagaGenerator, trigger?: string) {\n    const running = this.runningSagas.has(sagaName);\n    this.remove(sagaName);\n    this.add(sagaName, saga, trigger);\n    if (running) {\n      this.start(sagaName);\n    }\n  }\n\n  start(sagaName: string) {\n    if (this.sagas.has(sagaName) && !this.runningSagas.has(sagaName)) {\n      sagaMiddleware.run(this.sagas.get(sagaName)!);\n      this.runningSagas.add(sagaName);\n    }\n  }\n\n  stop(sagaName: string) {\n    this.runningSagas.delete(sagaName);\n  }\n\n  startAll() {\n    for (let sagaName of this.sagas.keys()) {\n      this.start(sagaName);\n    }\n  }\n\n  stopAll() {\n    this.runningSagas.clear();\n  }\n\n  run(sagaName?: string, saga?: () => SagaGenerator, trigger?: string) {\n    if (!sagaName) {\n      this.startAll();\n    } else {\n      if (saga) {\n        this.add(sagaName, saga, trigger);\n      }\n      this.start(sagaName);\n    }\n  }\n}\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App2/types/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/__types__/schema.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/__types__/spacex-schema.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/datasources/launch.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":7,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":7,"endColumn":25},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":14,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":14,"endColumn":35},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":22,"column":55,"nodeType":null,"endLine":22,"endColumn":55,"fix":{"range":[740,740],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":27,"column":41,"nodeType":null,"endLine":27,"endColumn":41,"fix":{"range":[886,886],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":28,"column":8,"nodeType":null,"endLine":28,"endColumn":8,"fix":{"range":[894,894],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":32,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":32,"endColumn":58},{"ruleId":"@typescript-eslint/camelcase","severity":2,"message":"Identifier 'flight_number' is not in camel case.","line":34,"column":7,"nodeType":"Identifier","messageId":"notCamelCase","endLine":34,"endColumn":20},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":34,"column":44,"nodeType":null,"endLine":34,"endColumn":44,"fix":{"range":[1060,1060],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":39,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":39,"endColumn":68}],"errorCount":5,"warningCount":4,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import { RESTDataSource } from \"apollo-datasource-rest\";\nimport { GQLLaunch } from \"../__types__/spacex-schema\";\n\nexport class LaunchAPI extends RESTDataSource {\n  baseURL = \"https://api.spacexdata.com/v2/\";\n\n  async getAllLaunches() {\n    const response = await this.get(\"launches\");\n    return Array.isArray(response)\n      ? response.map((launch) => this.launchReducer(launch))\n      : [];\n  }\n\n  launchReducer(launch: GQLLaunch) {\n    return {\n      id: launch.flight_number || 0,\n      cursor: `${launch.launch_date_unix}`,\n      site: launch.launch_site?.site_name,\n      mission: {\n        name: launch.mission_name,\n        missionPatchSmall: launch.links?.mission_patch_small,\n        missionPatchLarge: launch.links?.mission_patch\n      },\n      rocket: {\n        id: launch.rocket?.rocket_id,\n        name: launch.rocket?.rocket_name,\n        type: launch.rocket?.rocket_type\n      }\n    };\n  }\n\n  async getLaunchById({ launchId }: { launchId: string }) {\n    const response = await this.get(\"launches\", {\n      flight_number: parseInt(launchId, 10)\n    } as Partial<GQLLaunch>);\n    return this.launchReducer(response[0]);\n  }\n\n  getLaunchesByIds({ launchIds }: { launchIds: readonly string[] }) {\n    return Promise.all(\n      launchIds.map((launchId) => this.getLaunchById({ launchId }))\n    );\n  }\n}\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/datasources/user.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'TripDataType' is defined but never used.","line":4,"column":29,"nodeType":"Identifier","endLine":4,"endColumn":41},{"ruleId":"valid-jsdoc","severity":2,"message":"Missing JSDoc for parameter 'config'.","line":17,"column":3,"nodeType":"Block","messageId":"missingParam","endLine":22,"endColumn":6},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":23,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":23,"endColumn":48},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":32,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":32,"endColumn":69},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":37,"column":23,"nodeType":null,"endLine":37,"endColumn":23,"fix":{"range":[1293,1293],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":42,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":42,"endColumn":67},{"ruleId":"prefer-const","severity":2,"message":"'results' is never reassigned. Use 'const' instead.","line":46,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":46,"endColumn":16,"fix":{"range":[1497,1500],"text":"const"}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":58,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":58,"endColumn":53},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":63,"column":34,"nodeType":null,"endLine":63,"endColumn":34,"fix":{"range":[1993,1993],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":68,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":68,"endColumn":55},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":75,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":75,"endColumn":29},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":80,"column":24,"nodeType":null,"endLine":80,"endColumn":24,"fix":{"range":[2463,2463],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":88,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":88,"endColumn":61},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":93,"column":34,"nodeType":null,"endLine":93,"endColumn":34,"fix":{"range":[2844,2844],"text":","}}],"errorCount":6,"warningCount":8,"fixableErrorCount":5,"fixableWarningCount":0,"source":"import { DataSource, DataSourceConfig } from \"apollo-datasource\";\nimport isEmail from \"isemail\";\nimport { GQLUser } from \"../__types__/schema\";\nimport { Store, Trip, User, TripDataType } from \"../server/utils\";\n\nexport class UserAPI<Context extends { user?: GQLUser }> extends DataSource<\n  Context\n> {\n  private context: Context | undefined;\n  private store: Store;\n\n  constructor({ store }: { store: Store }) {\n    super();\n    this.store = store;\n  }\n\n  /**\n   * This is a function that gets called by ApolloServer when being setup.\n   * This function gets called with the datasource config including things\n   * like caches and context. We'll assign this.context to the request context\n   * here, so we can know about the user making requests\n   */\n  initialize(config: DataSourceConfig<Context>) {\n    this.context = config.context;\n  }\n\n  /**\n   * User can be called with an argument that includes email, but it doesn't\n   * have to be. If the user is already on the context, it will use that user\n   * instead\n   */\n  async findOrCreateUser({ email: emailArg }: Partial<GQLUser> = {}) {\n    const email = this.context?.user?.email || emailArg;\n    if (!email || !isEmail.validate(email)) return null;\n\n    const users = await this.store.users.findOrCreate<User>({\n      where: { email }\n    });\n    return users && users[0] ? users[0] : null;\n  }\n\n  async bookTrips({ launchIds }: { launchIds: readonly string[] }) {\n    const userId = this.context?.user?.id;\n    if (!userId) return;\n\n    let results = [];\n\n    // for each launch id, try to book the trip and add it to the results array\n    // if successful\n    for (const launchId of launchIds) {\n      const res = await this.bookTrip({ launchId });\n      if (res) results.push(res);\n    }\n\n    return results;\n  }\n\n  async bookTrip({ launchId }: { launchId: string }) {\n    const userId = this.context?.user?.id;\n    if (!userId) return;\n\n    const res = await this.store.trips.findOrCreate<Trip>({\n      where: { userId, launchId }\n    });\n    return res && res.length ? (res[0].get() as { id: number }) : false;\n  }\n\n  async cancelTrip({ launchId }: { launchId: string }) {\n    const userId = this.context?.user?.id;\n    if (!userId) return;\n\n    return !!this.store.trips.destroy({ where: { userId, launchId } });\n  }\n\n  async getLaunchIdsByUser() {\n    const userId = this.context?.user?.id;\n    if (!userId) return;\n\n    const found = await this.store.trips.findAll<Trip>({\n      where: { userId }\n    });\n\n    return found && found.length\n      ? found.map((l) => l.dataValues.launchId).filter((l) => !!l)\n      : [];\n  }\n\n  async isBookedOnLaunch({ launchId }: { launchId: string }) {\n    if (!this.context || !this.context.user) return false;\n\n    const userId = this.context.user.id;\n    const found = await this.store.trips.findAll<Trip>({\n      where: { userId, launchId }\n    });\n\n    return found && found.length > 0;\n  }\n}\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/server/index.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":17,"column":12,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":17,"endColumn":30},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":30,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":30,"endColumn":21},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":32,"column":36,"nodeType":null,"endLine":32,"endColumn":36,"fix":{"range":[1054,1054],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":33,"column":5,"nodeType":null,"endLine":33,"endColumn":5,"fix":{"range":[1059,1059],"text":","}}],"errorCount":2,"warningCount":2,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { ApolloServer } from \"apollo-server\";\nimport { importSchema } from \"graphql-import\";\nimport path from \"path\";\nimport { createStore, User } from \"./utils\";\nimport { resolvers } from \"./resolvers\";\nimport { LaunchAPI } from \"../datasources/launch\";\nimport { UserAPI } from \"../datasources/user\";\nimport isEmail from \"isemail\";\n\nconst typeDefs = importSchema(\n  path.join(__dirname, \"../schemas/schema.graphql\")\n);\n\nconst store = createStore();\n\nconst server = new ApolloServer({\n  context: async ({ req }) => {\n    // simple auth check on every request\n    const auth = (req.headers && req.headers.authorization) || \"\";\n    const email = Buffer.from(auth, \"base64\").toString(\"ascii\");\n    if (!isEmail.validate(email)) return { user: null };\n    // find a user by their email\n    const users = await store.users.findOrCreate<User>({ where: { email } });\n    const user = users[0];\n\n    return { user: { ...user.dataValues } };\n  },\n  typeDefs,\n  resolvers,\n  dataSources: () => ({\n    launchAPI: new LaunchAPI(),\n    userAPI: new UserAPI({ store })\n  })\n});\n\nserver.listen().then(({ url }) => {\n  console.log(`🚀 Server ready at ${url}`);\n});\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/server/resolvers.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":12,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":16,"endColumn":9},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":13,"column":10,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":13,"endColumn":13,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[369,372],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[369,372],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":23,"column":29,"nodeType":null,"endLine":23,"endColumn":29,"fix":{"range":[744,744],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":33,"column":18,"nodeType":null,"endLine":33,"endColumn":18,"fix":{"range":[1186,1186],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":36,"column":13,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":36,"endColumn":74},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":36,"column":17,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":36,"endColumn":20,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1219,1222],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1219,1222],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":38,"column":9,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":38,"endColumn":55},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":38,"column":13,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":38,"endColumn":16,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1350,1353],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1350,1353],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":38,"column":22,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":38,"endColumn":25,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1359,1362],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1359,1362],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":39,"column":45,"nodeType":null,"endLine":39,"endColumn":45,"fix":{"range":[1437,1437],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":43,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":47,"endColumn":9},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":44,"column":10,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":44,"endColumn":13,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1490,1493],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1490,1493],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":50,"column":18,"nodeType":null,"endLine":50,"endColumn":18,"fix":{"range":[1753,1753],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":62,"column":17,"nodeType":null,"endLine":62,"endColumn":17,"fix":{"range":[2179,2179],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":65,"column":17,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":69,"endColumn":9},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":66,"column":10,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":66,"endColumn":13,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2229,2232],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2229,2232],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":75,"column":43,"nodeType":null,"endLine":75,"endColumn":43,"fix":{"range":[2496,2496],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":82,"column":27,"nodeType":null,"endLine":82,"endColumn":27,"fix":{"range":[2686,2686],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":85,"column":12,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":89,"endColumn":9},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":86,"column":10,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":86,"endColumn":13,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2731,2734],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2731,2734],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":92,"column":6,"nodeType":null,"endLine":92,"endColumn":6,"fix":{"range":[2955,2955],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":97,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":104,"endColumn":9},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":108,"column":6,"nodeType":null,"endLine":108,"endColumn":6,"fix":{"range":[3341,3341],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":112,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":112,"endColumn":77},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":112,"column":44,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":112,"endColumn":47,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3403,3406],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3403,3406],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":113,"column":68,"nodeType":null,"endLine":113,"endColumn":68,"fix":{"range":[3504,3504],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":117,"column":12,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":117,"endColumn":64},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":117,"column":22,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":117,"endColumn":25,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3542,3545],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3542,3545],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":117,"column":31,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":117,"endColumn":34,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3551,3554],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3551,3554],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":126,"column":20,"nodeType":null,"endLine":126,"endColumn":20,"fix":{"range":[3880,3880],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":129,"column":6,"nodeType":null,"endLine":129,"endColumn":6,"fix":{"range":[3912,3912],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":130,"column":4,"nodeType":null,"endLine":130,"endColumn":4,"fix":{"range":[3916,3916],"text":","}}],"errorCount":13,"warningCount":19,"fixableErrorCount":13,"fixableWarningCount":0,"source":"import { GQLLaunch, GQLUser } from \"../__types__/schema\";\nimport { LaunchAPI } from \"../datasources/launch\";\nimport { UserAPI } from \"../datasources/user\";\nimport { paginateResults } from \"./utils\";\n\ntype Context = {\n  dataSources: { launchAPI: LaunchAPI; userAPI: UserAPI<{ user?: GQLUser }> };\n};\n\nexport const resolvers = {\n  Query: {\n    launches: async (\n      _: any,\n      { pageSize = 20, after }: { pageSize?: number; after?: string },\n      { dataSources }: Context\n    ) => {\n      const allLaunches = await dataSources.launchAPI.getAllLaunches();\n      // we want these in reverse chronological order\n      allLaunches.reverse();\n      const launches = paginateResults({\n        after,\n        pageSize,\n        results: allLaunches\n      });\n      return {\n        launches,\n        cursor: launches.length ? launches[launches.length - 1].cursor : null,\n        // if the cursor of the end of the paginated results is the same as the\n        // last item in _all_ results, then there are no more results after this\n        hasMore: launches.length\n          ? launches[launches.length - 1].cursor !==\n            allLaunches[allLaunches.length - 1].cursor\n          : false\n      };\n    },\n    launch: (_: any, { id }: { id: string }, { dataSources }: Context) =>\n      dataSources.launchAPI.getLaunchById({ launchId: id }),\n    me: (_: any, __: any, { dataSources }: Context) =>\n      dataSources.userAPI.findOrCreateUser()\n  },\n\n  Mutation: {\n    bookTrips: async (\n      _: any,\n      { launchIds }: { launchIds: readonly string[] },\n      { dataSources }: Context\n    ) => {\n      const results = await dataSources.userAPI.bookTrips({ launchIds });\n      const launches = await dataSources.launchAPI.getLaunchesByIds({\n        launchIds\n      });\n\n      return {\n        success: results && results.length === launchIds.length,\n        message:\n          results && results.length === launchIds.length\n            ? \"trips booked successfully\"\n            : `the following launches couldn't be booked: ${launchIds.filter(\n                (id) =>\n                  results && !results.find((res) => res.id === parseInt(id, 10))\n              )}`,\n        launches\n      };\n    },\n    cancelTrip: async (\n      _: any,\n      { launchId }: { launchId: string },\n      { dataSources }: Context\n    ) => {\n      const result = await dataSources.userAPI.cancelTrip({ launchId });\n\n      if (!result)\n        return {\n          success: false,\n          message: \"failed to cancel trip\"\n        };\n\n      const launch = await dataSources.launchAPI.getLaunchById({ launchId });\n      return {\n        success: true,\n        message: \"trip cancelled\",\n        launches: [launch]\n      };\n    },\n    login: async (\n      _: any,\n      { email }: { email: string },\n      { dataSources }: Context\n    ) => {\n      const user = await dataSources.userAPI.findOrCreateUser({ email });\n      if (user) return Buffer.from(email).toString(\"base64\");\n    }\n  },\n\n  Mission: {\n    // make sure the default size is 'large' in case user doesn't specify\n    missionPatch: (\n      mission: {\n        name: string;\n        missionPatchSmall: string;\n        missionPatchLarge: string;\n      },\n      { size } = { size: \"LARGE\" }\n    ) => {\n      return size === \"SMALL\"\n        ? mission.missionPatchSmall\n        : mission.missionPatchLarge;\n    }\n  },\n\n  Launch: {\n    isBooked: async (launch: GQLLaunch, _: any, { dataSources }: Context) =>\n      dataSources.userAPI.isBookedOnLaunch({ launchId: launch.id })\n  },\n\n  User: {\n    trips: async (_: any, __: any, { dataSources }: Context) => {\n      // get ids of launches by user\n      const launchIds = await dataSources.userAPI.getLaunchIdsByUser();\n\n      if (!launchIds || !launchIds.length) return [];\n\n      // look up those launches by their ids\n      return (\n        dataSources.launchAPI.getLaunchesByIds({\n          launchIds\n        }) || []\n      );\n    }\n  }\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/server/utils.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":38,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":49,"endColumn":6},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":43,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":43,"endColumn":20},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":43,"column":25,"nodeType":null,"endLine":43,"endColumn":25,"fix":{"range":[888,888],"text":","}},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":47,"column":12,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":47,"endColumn":15,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[944,947],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[944,947],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":48,"column":23,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":48,"endColumn":26,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[973,976],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[973,976],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prefer-const","severity":2,"message":"'itemCursor' is never reassigned. Use 'const' instead.","line":55,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":55,"endColumn":19,"fix":{"range":[1222,1225],"text":"const"}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":75,"column":19,"nodeType":null,"endLine":75,"endColumn":19,"fix":{"range":[1852,1852],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":82,"column":26,"nodeType":null,"endLine":82,"endColumn":26,"fix":{"range":[1976,1976],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":87,"column":18,"nodeType":null,"endLine":87,"endColumn":18,"fix":{"range":[2062,2062],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":94,"column":26,"nodeType":null,"endLine":94,"endColumn":26,"fix":{"range":[2195,2195],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":99,"column":20,"nodeType":null,"endLine":99,"endColumn":20,"fix":{"range":[2287,2287],"text":","}}],"errorCount":7,"warningCount":4,"fixableErrorCount":7,"fixableWarningCount":0,"source":"import { Sequelize, ModelCtor, Model, INTEGER, DATE, STRING } from \"sequelize\";\n\nexport type UserDataType = {\n  id: {\n    type: number;\n    primaryKey: true;\n    autoIncrement: true;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n  email: string;\n  token: string;\n};\n\nexport type User = Model<UserDataType> & { dataValues: UserDataType };\nexport type Users = ModelCtor<User>;\n\nexport type TripDataType = {\n  id: {\n    type: number;\n    primaryKey: true;\n    autoIncrement: true;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n  launchId: string;\n  userId: number;\n};\n\nexport type Trip = Model<TripDataType> & { dataValues: TripDataType };\nexport type Trips = ModelCtor<Trip>;\n\nexport type Store = {\n  users: Users;\n  trips: Trips;\n};\n\nexport const paginateResults = ({\n  after: cursor,\n  pageSize = 20,\n  results,\n  // can pass in a function to calculate an item's cursor\n  getCursor = () => null\n}: {\n  after?: string;\n  pageSize?: number;\n  results: any[];\n  getCursor?: (item?: any) => string | null;\n}) => {\n  if (pageSize < 1) return [];\n\n  if (!cursor) return results.slice(0, pageSize);\n  const cursorIndex = results.findIndex((item) => {\n    // if an item has a `cursor` on it, use that, otherwise try to generate one\n    let itemCursor = item.cursor ? item.cursor : getCursor(item);\n\n    // if there's still not a cursor, return false by default\n    return itemCursor ? cursor === itemCursor : false;\n  });\n\n  return cursorIndex >= 0\n    ? cursorIndex === results.length - 1 // don't let us overflow\n      ? []\n      : results.slice(\n          cursorIndex + 1,\n          Math.min(results.length, cursorIndex + 1 + pageSize)\n        )\n    : results.slice(0, pageSize);\n};\n\nexport const createStore = (): Store => {\n  const db = new Sequelize(\"database\", \"username\", \"password\", {\n    dialect: \"sqlite\",\n    storage: \"./store.sqlite\",\n    logging: false\n  });\n\n  const users = db.define(\"user\", {\n    id: {\n      type: INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    createdAt: DATE,\n    updatedAt: DATE,\n    email: STRING,\n    token: STRING\n  }) as Users;\n\n  const trips = db.define(\"trip\", {\n    id: {\n      type: INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    createdAt: DATE,\n    updatedAt: DATE,\n    launchId: INTEGER,\n    userId: INTEGER\n  }) as Trips;\n\n  return { users, trips };\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__testHelpers__/buttons.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":6,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":6,"endColumn":54},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":10,"column":33,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":10,"endColumn":60},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":14,"column":33,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":14,"endColumn":60},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":18,"column":30,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":18,"endColumn":51}],"errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const CLOSE_BUTTON_ATTRIBUTE = `[aria-label=\"Close item\"]`;\nconst DELETE_BUTTON_ATTRIBUTE = `[aria-label=\"Delete item\"]`;\nconst EXPAND_BUTTON_ATTRIBUTE = `[aria-label=\"Expand item\"]`;\nconst MENU_BUTTON_ATTRIBUTE = `[aria-label=\"setting\"]`;\n\nexport const getCloseButtons = (list: HTMLElement) => {\n  return Array.from(list.querySelectorAll(CLOSE_BUTTON_ATTRIBUTE));\n};\n\nexport const getDeleteButtons = (list: HTMLUListElement) => {\n  return Array.from(list.querySelectorAll(DELETE_BUTTON_ATTRIBUTE));\n};\n\nexport const getExpandButtons = (list: HTMLUListElement) => {\n  return Array.from(list.querySelectorAll(EXPAND_BUTTON_ATTRIBUTE));\n};\n\nexport const getMenuButton = (app: HTMLElement) => {\n  return app.querySelector(MENU_BUTTON_ATTRIBUTE);\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__testHelpers__/dnd-mock.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":1,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":1,"endColumn":42},{"ruleId":"@typescript-eslint/ban-ts-ignore","severity":2,"message":"Do not use \"// @ts-ignore\" comments because they suppress compilation errors.","line":2,"column":3,"nodeType":"Line","messageId":"tsIgnoreComment","endLine":2,"endColumn":73},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":3,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":7},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":16,"column":21,"nodeType":null,"endLine":16,"endColumn":21,"fix":{"range":[512,512],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":20,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":20,"endColumn":18},{"ruleId":"@typescript-eslint/ban-ts-ignore","severity":2,"message":"Do not use \"// @ts-ignore\" comments because they suppress compilation errors.","line":21,"column":3,"nodeType":"Line","messageId":"tsIgnoreComment","endLine":21,"endColumn":39},{"ruleId":"no-invalid-this","severity":2,"message":"Unexpected 'this'.","line":22,"column":25,"nodeType":"ThisExpression","endLine":22,"endColumn":29},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":25,"column":42,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":25,"endColumn":62},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":26,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":26,"endColumn":7},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":35,"column":11,"nodeType":null,"endLine":35,"endColumn":11,"fix":{"range":[864,864],"text":","}}],"errorCount":7,"warningCount":3,"fixableErrorCount":2,"fixableWarningCount":0,"source":"export const mockGetComputedStyle = () => {\n  // @ts-ignore Ignore return type CSSStyleDeclaration (in lib.dom.d.ts)\n  jest.spyOn(window, \"getComputedStyle\").mockImplementation(() => ({\n    paddingTop: \"0px\",\n    paddingRight: \"0px\",\n    paddingBottom: \"0px\",\n    paddingLeft: \"0px\",\n    marginTop: \"0px\",\n    marginRight: \"0px\",\n    marginBottom: \"0px\",\n    marginLeft: \"0px\",\n    borderTopWidth: \"0px\",\n    borderRightWidth: \"0px\",\n    borderBottomWidth: \"0px\",\n    borderLeftWidth: \"0px\",\n    display: \"block\"\n  }));\n};\n\nfunction toJSON() {\n  // @ts-ignore this may have any type\n  return JSON.stringify(this);\n}\n\nexport const mockGetBoundingClientRect = (el: HTMLElement) => {\n  jest.spyOn(el, \"getBoundingClientRect\").mockImplementation(() => ({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    toJSON\n  }));\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__testHelpers__/dnd-render.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":5,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":5,"endColumn":44},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":9,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":9,"endColumn":25},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":14,"column":10,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":14,"endColumn":41},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":17,"column":20,"nodeType":null,"endLine":17,"endColumn":20,"fix":{"range":[530,530],"text":","}}],"errorCount":1,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { render as rtlRender } from \"@testing-library/react\";\nimport { ReactElement } from \"react\";\nimport { dragAndDrop } from \"./dnd\";\n\nexport const render = (ui: ReactElement) => {\n  const renderResult = rtlRender(ui);\n  const { getByRole, getAllByRole, getByText } = renderResult;\n  const list = getByRole(\"list\") as HTMLUListElement;\n  const getItems = () => getAllByRole(\"listitem\");\n\n  return {\n    list,\n\n    dnd: (start: number, end: number) =>\n      dragAndDrop(start, end, { getItems, getByText }),\n\n    ...renderResult\n  };\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__testHelpers__/dnd.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":26,"column":33,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":30,"endColumn":5},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":44,"column":28,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":54,"endColumn":5},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":49,"column":13,"nodeType":null,"endLine":49,"endColumn":13,"fix":{"range":[1243,1243],"text":","}},{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":57,"column":22,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":57,"endColumn":35}],"errorCount":1,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { fireEvent, waitFor } from \"@testing-library/react\";\n\nexport const DROPPABLE_ATTRIBUTE = \"[data-rbd-droppable-id]\";\nexport const DRAGGABLE_ATTRIBUTE = \"[data-rbd-draggable-id]\";\n\nexport const getDroppable = (container: HTMLElement): HTMLElement | null => {\n  return container.querySelector(DROPPABLE_ATTRIBUTE);\n};\n\nexport const getDraggable = (container: HTMLElement): HTMLElement | null => {\n  return container.querySelector(DRAGGABLE_ATTRIBUTE);\n};\n\nexport const getDroppables = (container: HTMLElement): HTMLElement[] => {\n  return Array.from(container.querySelectorAll(DROPPABLE_ATTRIBUTE));\n};\n\nexport const getDraggables = (container: HTMLElement): HTMLElement[] => {\n  return Array.from(container.querySelectorAll(DRAGGABLE_ATTRIBUTE));\n};\n\nconst spaceKey = { keyCode: 32 };\nconst arrowUpKey = { keyCode: 38 };\nconst arrowDownKey = { keyCode: 40 };\n\nconst getIntermediaryElements = (\n  items: HTMLElement[],\n  start: number,\n  end: number\n) => {\n  if (start === end) {\n    return [];\n  }\n\n  if (start < end) {\n    return items.slice(start + 1, end);\n  }\n\n  return Array.from(items)\n    .reverse()\n    .slice(end + 1, start);\n};\n\nexport const dragAndDrop = async (\n  start: number,\n  end: number,\n  {\n    getByText,\n    getItems\n  }: {\n    getByText: (regex: RegExp) => HTMLElement;\n    getItems: () => HTMLElement[];\n  }\n) => {\n  const items = getItems();\n  const elements = getIntermediaryElements(items, start, end);\n  const dragSource = items[start]!;\n\n  dragSource.focus();\n  fireEvent.keyDown(dragSource, spaceKey);\n\n  for (let i = 0; i < elements.length; i++) {\n    await waitFor(() => getByText(/You have lifted an item/i));\n    fireEvent.keyDown(dragSource, start < end ? arrowDownKey : arrowUpKey);\n    await waitFor(() => getByText(/You have moved the item/i));\n  }\n\n  fireEvent.keyDown(dragSource, start < end ? arrowDownKey : arrowUpKey);\n  fireEvent.keyDown(dragSource, spaceKey);\n  await waitFor(() => getByText(/You have dropped the item/i));\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/__testHelpers__/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/action-creators/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/action-creators/part.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":7,"column":9,"nodeType":null,"endLine":7,"endColumn":9,"fix":{"range":[194,194],"text":","}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { ADD_PART } from \"../constants\";\nimport { TodoActionType } from \"../todo\";\n\nexport const addPart = (meta: { partId: string }): TodoActionType => {\n  return {\n    type: ADD_PART,\n    meta\n  };\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/action-creators/todo.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":14,"column":14,"nodeType":null,"endLine":14,"endColumn":14,"fix":{"range":[292,292],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":24,"column":9,"nodeType":null,"endLine":24,"endColumn":9,"fix":{"range":[494,494],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":33,"column":9,"nodeType":null,"endLine":33,"endColumn":9,"fix":{"range":[639,639],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":42,"column":9,"nodeType":null,"endLine":42,"endColumn":9,"fix":{"range":[797,797],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":52,"column":9,"nodeType":null,"endLine":52,"endColumn":9,"fix":{"range":[937,937],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":61,"column":9,"nodeType":null,"endLine":61,"endColumn":9,"fix":{"range":[1083,1083],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":72,"column":9,"nodeType":null,"endLine":72,"endColumn":9,"fix":{"range":[1254,1254],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":81,"column":9,"nodeType":null,"endLine":81,"endColumn":9,"fix":{"range":[1464,1464],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":91,"column":9,"nodeType":null,"endLine":91,"endColumn":9,"fix":{"range":[1607,1607],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":100,"column":9,"nodeType":null,"endLine":100,"endColumn":9,"fix":{"range":[1749,1749],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":109,"column":9,"nodeType":null,"endLine":109,"endColumn":9,"fix":{"range":[1899,1899],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":119,"column":9,"nodeType":null,"endLine":119,"endColumn":9,"fix":{"range":[2042,2042],"text":","}}],"errorCount":12,"warningCount":0,"fixableErrorCount":12,"fixableWarningCount":0,"source":"import { DropResult } from \"react-beautiful-dnd\";\nimport { Todos, TodoState, TodoStates } from \"../types\";\nimport {\n  RESET_TODOS,\n  SET_TODOS,\n  SET_TODOS_NOSAVE,\n  ADD_TODO,\n  UPDATE_TODO_TITLE,\n  DO_ADD_TODO,\n  DO_UPDATE_TODO_TITLE,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  MOVE_TODO,\n  EXPAND_TODO\n} from \"../constants\";\nimport { TodoActionType } from \"../todo\";\n\nexport const resetTodos = (meta: {\n  partId: string;\n  todos: Todos;\n}): TodoActionType => {\n  return {\n    type: RESET_TODOS,\n    meta\n  };\n};\nexport const setTodos = (meta: {\n  partId: string;\n  todos: TodoStates;\n}): TodoActionType => {\n  return {\n    type: SET_TODOS,\n    meta\n  };\n};\nexport const setTodosNoSave = (meta: {\n  partId: string;\n  todos: TodoStates;\n}): TodoActionType => {\n  return {\n    type: SET_TODOS_NOSAVE,\n    meta\n  };\n};\n\nexport const addTodo = (meta: {\n  viewId: string;\n  title: string;\n}): TodoActionType => {\n  return {\n    type: ADD_TODO,\n    meta\n  };\n};\nexport const doAddTodo = (meta: {\n  viewId: string;\n  todo: TodoState;\n}): TodoActionType => {\n  return {\n    type: DO_ADD_TODO,\n    meta\n  };\n};\n\nexport const updateTodoTitle = (meta: {\n  viewId: string;\n  id: string;\n  title: string;\n}): TodoActionType => {\n  return {\n    type: UPDATE_TODO_TITLE,\n    meta\n  };\n};\nexport const doUpdateTodoTitle = (meta: {\n  viewId: string;\n  todo: Pick<TodoState, \"id\" | \"title\" | \"validated\" | \"errors\">;\n}): TodoActionType => {\n  return {\n    type: DO_UPDATE_TODO_TITLE,\n    meta\n  };\n};\n\nexport const deleteTodo = (meta: {\n  viewId: string;\n  id: string;\n}): TodoActionType => {\n  return {\n    type: DELETE_TODO,\n    meta\n  };\n};\nexport const toggleTodo = (meta: {\n  viewId: string;\n  id: string;\n}): TodoActionType => {\n  return {\n    type: TOGGLE_TODO,\n    meta\n  };\n};\nexport const moveTodo = (meta: {\n  viewId: string;\n  dropResult: DropResult;\n}): TodoActionType => {\n  return {\n    type: MOVE_TODO,\n    meta\n  };\n};\n\nexport const expandTodo = (meta: {\n  viewId: string;\n  id: string;\n}): TodoActionType => {\n  return {\n    type: EXPAND_TODO,\n    meta\n  };\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/action-creators/view.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":12,"column":9,"nodeType":null,"endLine":12,"endColumn":9,"fix":{"range":[312,312],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":19,"column":9,"nodeType":null,"endLine":19,"endColumn":9,"fix":{"range":[440,440],"text":","}}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { VisibilityFilter } from \"../types\";\nimport { ADD_VIEW, UPDATE_VIEWS } from \"../constants\";\nimport { TodoActionType } from \"../todo\";\n\nexport const addView = (meta: {\n  viewId: string;\n  partId: string;\n  visibilityFilter: VisibilityFilter;\n}): TodoActionType => {\n  return {\n    type: ADD_VIEW,\n    meta\n  };\n};\n\nexport const updateViews = (meta: { partId: string }): TodoActionType => {\n  return {\n    type: UPDATE_VIEWS,\n    meta\n  };\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/action-creators/visibility-filter.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":11,"column":9,"nodeType":null,"endLine":11,"endColumn":9,"fix":{"range":[318,318],"text":","}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { VisibilityFilter } from \"../types\";\nimport { SET_VISIBILITY_FILTER } from \"../constants\";\nimport { TodoActionType } from \"../todo\";\n\nexport const setVisibilityFilter = (meta: {\n  viewId: string;\n  visibilityFilter: VisibilityFilter;\n}): TodoActionType => {\n  return {\n    type: SET_VISIBILITY_FILTER,\n    meta\n  };\n};\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/actions/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/actions/part.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/actions/todo.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":13,"column":14,"nodeType":null,"endLine":13,"endColumn":14,"fix":{"range":[235,235],"text":","}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { DropResult } from \"react-beautiful-dnd\";\nimport {\n  RESET_TODOS,\n  SET_TODOS,\n  SET_TODOS_NOSAVE,\n  ADD_TODO,\n  UPDATE_TODO_TITLE,\n  DO_ADD_TODO,\n  DO_UPDATE_TODO_TITLE,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  MOVE_TODO,\n  EXPAND_TODO\n} from \"../constants\";\nimport { Todos, TodoState, TodoStates } from \"../types\";\n\nexport type TodoActions =\n  | ResetTodosAction\n  | SetTodosAction\n  | SetTodosNoSaveAction\n  | AddTodoAction\n  | DoAddTodoAction\n  | UpdateTodoTitleAction\n  | DoUpdateTodoTitleAction\n  | DeleteTodoAction\n  | ToggleTodoAction\n  | MoveTodoAction\n  | ExpandTodoAction;\n\nexport interface ResetTodosAction {\n  type: typeof RESET_TODOS;\n  meta: { partId: string; todos: Todos };\n}\n\nexport interface SetTodosAction {\n  type: typeof SET_TODOS;\n  meta: { partId: string; todos: TodoStates };\n}\n\nexport interface SetTodosNoSaveAction {\n  type: typeof SET_TODOS_NOSAVE;\n  meta: { partId: string; todos: TodoStates };\n}\n\nexport interface AddTodoAction {\n  type: typeof ADD_TODO;\n  meta: { viewId: string; title: string };\n}\n\nexport interface DoAddTodoAction {\n  type: typeof DO_ADD_TODO;\n  meta: { viewId: string; todo: TodoState };\n}\n\nexport interface UpdateTodoTitleAction {\n  type: typeof UPDATE_TODO_TITLE;\n  meta: { viewId: string; id: string; title: string };\n}\n\nexport interface DoUpdateTodoTitleAction {\n  type: typeof DO_UPDATE_TODO_TITLE;\n  meta: {\n    viewId: string;\n    todo: Pick<TodoState, \"id\" | \"title\" | \"validated\" | \"errors\">;\n  };\n}\n\nexport interface DeleteTodoAction {\n  type: typeof DELETE_TODO;\n  meta: { viewId: string; id: string };\n}\n\nexport interface ToggleTodoAction {\n  type: typeof TOGGLE_TODO;\n  meta: { viewId: string; id: string };\n}\n\nexport interface MoveTodoAction {\n  type: typeof MOVE_TODO;\n  meta: { viewId: string; dropResult: DropResult };\n}\n\nexport interface ExpandTodoAction {\n  type: typeof EXPAND_TODO;\n  meta: { viewId: string; id: string };\n}\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/actions/view.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/actions/visibility-filter.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/constants/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/constants/part.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/constants/todo.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/constants/view.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/constants/visibility-filter.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/reducers/index.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":7,"column":5,"nodeType":null,"endLine":7,"endColumn":5,"fix":{"range":[156,156],"text":","}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\nimport ui from \"./ui\";\n\nexport const combinedReducer = combineReducers({\n  todos,\n  ui\n});\n\nexport * from \"./todos\";\nexport * from \"./ui\";\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/reducers/todos.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":13,"column":24,"nodeType":null,"endLine":13,"endColumn":24,"fix":{"range":[232,232],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":24,"column":16,"nodeType":null,"endLine":24,"endColumn":16,"fix":{"range":[534,534],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":25,"column":6,"nodeType":null,"endLine":25,"endColumn":6,"fix":{"range":[540,540],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":27,"column":26,"nodeType":null,"endLine":27,"endColumn":26,"fix":{"range":[571,571],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":48,"column":48,"nodeType":null,"endLine":48,"endColumn":48,"fix":{"range":[1059,1059],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":59,"column":66,"nodeType":null,"endLine":59,"endColumn":66,"fix":{"range":[1329,1329],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":76,"column":12,"nodeType":null,"endLine":76,"endColumn":12,"fix":{"range":[1756,1756],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":77,"column":10,"nodeType":null,"endLine":77,"endColumn":10,"fix":{"range":[1766,1766],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":92,"column":67,"nodeType":null,"endLine":92,"endColumn":67,"fix":{"range":[2115,2115],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":93,"column":10,"nodeType":null,"endLine":93,"endColumn":10,"fix":{"range":[2125,2125],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":110,"column":12,"nodeType":null,"endLine":110,"endColumn":12,"fix":{"range":[2548,2548],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":111,"column":10,"nodeType":null,"endLine":111,"endColumn":10,"fix":{"range":[2558,2558],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":142,"column":50,"nodeType":null,"endLine":142,"endColumn":50,"fix":{"range":[3451,3451],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":163,"column":22,"nodeType":null,"endLine":163,"endColumn":22,"fix":{"range":[3875,3875],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":164,"column":12,"nodeType":null,"endLine":164,"endColumn":12,"fix":{"range":[3887,3887],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":165,"column":10,"nodeType":null,"endLine":165,"endColumn":10,"fix":{"range":[3897,3897],"text":","}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_' is defined but never used.","line":172,"column":11,"nodeType":"Identifier","endLine":172,"endColumn":12},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":184,"column":12,"nodeType":null,"endLine":184,"endColumn":12,"fix":{"range":[4397,4397],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":185,"column":10,"nodeType":null,"endLine":185,"endColumn":10,"fix":{"range":[4407,4407],"text":","}}],"errorCount":18,"warningCount":1,"fixableErrorCount":18,"fixableWarningCount":0,"source":"import { VisibilityFilter } from \"../types\";\nimport {\n  SET_TODOS,\n  SET_TODOS_NOSAVE,\n  DO_ADD_TODO,\n  DO_UPDATE_TODO_TITLE,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  MOVE_TODO,\n  ADD_PART,\n  ADD_VIEW,\n  UPDATE_VIEWS,\n  SET_VISIBILITY_FILTER\n} from \"../constants\";\nimport { TodosState } from \"../types\";\nimport { TodoActionType, rootId, makeView } from \"../todo\";\n\nexport const todosInitialState: TodosState = {\n  todos: {},\n  views: {\n    [rootId]: {\n      partId: rootId,\n      visibilityFilter: VisibilityFilter.SHOW_ACTIVE,\n      todos: []\n    }\n  },\n  parts: { [rootId]: [] }\n};\n\nexport const todos = (\n  state = todosInitialState,\n  action: TodoActionType\n): TodosState => {\n  const { todos, views, parts } = state;\n\n  switch (action.type) {\n    case SET_TODOS:\n    case SET_TODOS_NOSAVE: {\n      const { partId, todos: newTodos } = action.meta;\n      const todoMap = { ...todos };\n      newTodos.forEach((todo) => {\n        todoMap[todo.id] = todo;\n      });\n\n      return {\n        todos: todoMap,\n        views,\n        parts: { ...parts, [partId]: newTodos }\n      };\n    }\n\n    case DO_ADD_TODO: {\n      const { viewId, todo } = action.meta;\n      const partId = views[viewId].partId;\n\n      return {\n        todos: { ...todos, [todo.id]: todo },\n        views,\n        parts: { ...parts, [partId]: parts[partId].concat(todo) }\n      };\n    }\n\n    case DO_UPDATE_TODO_TITLE: {\n      const { viewId, todo } = action.meta;\n      const partId = views[viewId].partId;\n      const id = todo.id;\n      const newTodo = { ...todos[id], ...todo };\n\n      return {\n        todos: { ...todos, [id]: newTodo },\n        views,\n        parts: {\n          ...parts,\n          [partId]: parts[partId].map((todo) =>\n            todo.id === id ? newTodo : todo\n          )\n        }\n      };\n    }\n\n    case DELETE_TODO: {\n      const { viewId, id } = action.meta;\n      const partId = views[viewId].partId;\n      const newTodos = { ...todos };\n      delete newTodos[id];\n\n      return {\n        todos: newTodos,\n        views,\n        parts: {\n          ...parts,\n          [partId]: parts[partId].filter((todo) => todo.id !== id)\n        }\n      };\n    }\n\n    case TOGGLE_TODO: {\n      const { viewId, id } = action.meta;\n      const partId = views[viewId].partId;\n      const newTodo = { ...todos[id] };\n      newTodo.checked = !newTodo.checked;\n\n      return {\n        todos: { ...todos, [id]: newTodo },\n        views,\n        parts: {\n          ...parts,\n          [partId]: parts[partId].map((todo) =>\n            todo.id !== id ? todo : newTodo\n          )\n        }\n      };\n    }\n\n    case MOVE_TODO: {\n      const { viewId, dropResult } = action.meta;\n      const { source, destination } = dropResult;\n      const partId = views[viewId].partId;\n\n      if (!destination) {\n        return state;\n      }\n\n      if (destination.droppableId === source.droppableId) {\n        if (destination.index === source.index) {\n          return state;\n        }\n\n        const newTodos = parts[partId].concat();\n\n        const sId = views[viewId].todos[source.index].id;\n        const dId = views[viewId].todos[destination.index].id;\n        const sIndex = newTodos.findIndex((todo) => todo.id === sId);\n        const dIndex = newTodos.findIndex((todo) => todo.id === dId);\n\n        newTodos.splice(sIndex, 1);\n        newTodos.splice(dIndex, 0, parts[partId][sIndex]);\n\n        return {\n          todos,\n          views,\n          parts: { ...parts, [partId]: newTodos }\n        };\n      }\n\n      return state;\n    }\n\n    case ADD_PART: {\n      const { partId } = action.meta;\n      return { ...state, parts: { ...parts, [partId]: [] } };\n    }\n\n    case ADD_VIEW: {\n      const { viewId, partId, visibilityFilter } = action.meta;\n      return {\n        ...state,\n        views: {\n          ...views,\n          [viewId]: {\n            partId,\n            visibilityFilter,\n            todos: []\n          }\n        }\n      };\n    }\n\n    case UPDATE_VIEWS: {\n      const { partId } = action.meta;\n      const relevantViews = Object.entries(views).filter(\n        ([_, view]) => view.partId === partId\n      );\n      const todos = parts[partId];\n\n      return {\n        ...state,\n        views: {\n          ...views,\n          ...Object.fromEntries(\n            relevantViews.map(([viewId, { visibilityFilter }]) => {\n              return [viewId, makeView(partId, visibilityFilter, todos)];\n            })\n          )\n        }\n      };\n    }\n\n    case SET_VISIBILITY_FILTER: {\n      const { viewId, visibilityFilter } = action.meta;\n      const partId = views[viewId].partId;\n      const view = makeView(partId, visibilityFilter, parts[partId]);\n\n      return { ...state, views: { ...views, [viewId]: view } };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/reducers/ui.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":5,"column":21,"nodeType":null,"endLine":5,"endColumn":21,"fix":{"range":[151,151],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":8,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":8,"endColumn":62}],"errorCount":1,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { rootId } from \"../todo\";\nimport { UIAction, UPDATE_SUBVIEW, UI, CLOSE_SUBVIEW } from \"../ui\";\n\nconst initialState: UI = {\n  mainViewId: rootId\n};\n\nexport const ui = (state = initialState, action: UIAction) => {\n  switch (action.type) {\n    case UPDATE_SUBVIEW: {\n      return { ...state, subViewId: action.meta.subViewId };\n    }\n\n    case CLOSE_SUBVIEW: {\n      const newState = { ...state };\n      delete newState.subViewId;\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/sagas/addTodoSaga.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":11,"column":30,"nodeType":null,"endLine":11,"endColumn":30,"fix":{"range":[375,375],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":25,"column":21,"nodeType":null,"endLine":25,"endColumn":21,"fix":{"range":[699,699],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":27,"column":59,"nodeType":null,"endLine":27,"endColumn":59,"fix":{"range":[772,772],"text":","}}],"errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import { SagaIterator } from \"redux-saga\";\nimport { put, take } from \"redux-saga/effects\";\nimport { tmpId, validateTitle } from \"../todo\";\nimport { ADD_TODO } from \"../constants\";\nimport { AddTodoAction } from \"../actions\";\nimport { doAddTodo } from \"../action-creators\";\n\nexport function* addTodoSaga(): SagaIterator {\n  while (1) {\n    const {\n      meta: { viewId, title }\n    }: AddTodoAction = yield take(ADD_TODO);\n    const id = tmpId();\n    const errors = validateTitle(title);\n\n    yield put(\n      doAddTodo({\n        viewId,\n        todo: errors.length\n          ? {\n              id,\n              title,\n              checked: false,\n              validated: false,\n              errors\n            }\n          : { id, title, checked: false, validated: true }\n      })\n    );\n  }\n}\n\nexport default addTodoSaga;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/sagas/deleteTodoSaga.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":11,"column":27,"nodeType":null,"endLine":11,"endColumn":27,"fix":{"range":[388,388],"text":","}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { SagaIterator } from \"redux-saga\";\nimport { put, take } from \"redux-saga/effects\";\nimport { DELETE_TODO } from \"../constants\";\nimport { DeleteTodoAction } from \"../actions\";\n// import { doDeleteTodo } from \"../action-creators\";\nimport { deleteTodo } from \"../action-creators\";\n\nexport function* deleteTodoSaga(): SagaIterator {\n  while (1) {\n    const {\n      meta: { viewId, id }\n    }: DeleteTodoAction = yield take(DELETE_TODO);\n\n    yield put(deleteTodo({ viewId, id }));\n    // yield put(doDeleteTodo({ viewId, id }));\n  }\n}\n\nexport default deleteTodoSaga;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/sagas/enableLocalStorageSaga.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":9,"column":12,"nodeType":null,"endLine":9,"endColumn":12,"fix":{"range":[275,275],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":14,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":14,"endColumn":55},{"ruleId":"prefer-const","severity":2,"message":"'id' is never reassigned. Use 'const' instead.","line":20,"column":13,"nodeType":"Identifier","messageId":"useConst","endLine":20,"endColumn":15,"fix":{"range":[705,708],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'ids' is never reassigned. Use 'const' instead.","line":20,"column":17,"nodeType":"Identifier","messageId":"useConst","endLine":20,"endColumn":20,"fix":{"range":[705,708],"text":"const"}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":25,"column":25,"nodeType":null,"endLine":25,"endColumn":25,"fix":{"range":[842,842],"text":","}},{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":35,"column":26,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":35,"endColumn":36},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":44,"column":25,"nodeType":null,"endLine":44,"endColumn":25,"fix":{"range":[1304,1304],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":50,"column":34,"nodeType":null,"endLine":50,"endColumn":34,"fix":{"range":[1476,1476],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":52,"column":27,"nodeType":null,"endLine":52,"endColumn":27,"fix":{"range":[1522,1522],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":58,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":58,"endColumn":53},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":69,"column":34,"nodeType":null,"endLine":69,"endColumn":34,"fix":{"range":[1922,1922],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":78,"column":63,"nodeType":null,"endLine":78,"endColumn":63,"fix":{"range":[2279,2279],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":83,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":83,"endColumn":59},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":91,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":91,"endColumn":64}],"errorCount":9,"warningCount":5,"fixableErrorCount":9,"fixableWarningCount":0,"source":"import { put, select, takeLatest } from \"redux-saga/effects\";\nimport { validateTitle, rootId } from \"../todo\";\nimport { Todo, TodoMap, TodoStates, TodosState, PartMap } from \"../types\";\nimport {\n  DO_ADD_TODO,\n  DO_UPDATE_TODO_TITLE,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  MOVE_TODO\n} from \"../constants\";\nimport { setTodosNoSave, addView } from \"../action-creators\";\nimport { todosInitialState } from \"../reducers\";\n\nfunction* loadFromLocalStorage(localStorageId: string) {\n  const { todos, parts } = JSON.parse(\n    localStorage.getItem(localStorageId) || `{\"todos\":{},\"parts\":{}}`\n  ) as { todos: TodoMap; parts: PartMap };\n  const visibilityFilter = todosInitialState.views[rootId].visibilityFilter;\n\n  for (let [id, ids] of Object.entries(parts)) {\n    yield put(\n      addView({\n        viewId: id,\n        partId: id,\n        visibilityFilter\n      })\n    );\n\n    yield put(\n      setTodosNoSave({\n        partId: id,\n        todos: ids\n          .filter((id) => todos[id])\n          .map((id) => {\n            const todo = todos[id]!;\n            const errors = validateTitle(todo.title);\n\n            return errors.length\n              ? {\n                  id,\n                  title: todo.title,\n                  checked: todo.completed,\n                  validated: false,\n                  errors\n                }\n              : {\n                  id,\n                  title: todo.title,\n                  checked: todo.completed,\n                  validated: true\n                };\n          }) as TodoStates\n      })\n    );\n  }\n}\n\nfunction* saveToLocalStorage(localStorageId: string) {\n  const { todos, parts }: TodosState = yield select(\n    (state: { todos: TodosState }) => state.todos\n  );\n\n  localStorage.setItem(\n    localStorageId,\n    JSON.stringify({\n      todos: Object.entries(todos).reduce((map, [id, todo]) => {\n        map[id] = {\n          title: todo.title,\n          completed: todo.checked\n        };\n        return map;\n      }, {} as { [id: string]: Omit<Todo, \"id\"> }) as TodoMap,\n      parts: Object.entries(parts).reduce((map, [partId, todosStates]) => {\n        if (todosStates.length) {\n          map[partId] = todosStates.map((todo) => todo.id);\n        }\n        return map;\n      }, {} as { [id: string]: readonly string[] }) as PartMap\n    })\n  );\n}\n\nfunction* enableSaveToLocalStorage(localStorageId: string) {\n  yield takeLatest(\n    [DO_ADD_TODO, DO_UPDATE_TODO_TITLE, DELETE_TODO, TOGGLE_TODO, MOVE_TODO],\n    saveToLocalStorage,\n    localStorageId\n  );\n}\n\nexport function* enableLocalStorageSaga(localStorageId: string) {\n  yield loadFromLocalStorage(localStorageId);\n  yield enableSaveToLocalStorage(localStorageId);\n}\nexport default enableLocalStorageSaga;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/sagas/expandTodoSaga.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":12,"column":27,"nodeType":null,"endLine":12,"endColumn":27,"fix":{"range":[426,426],"text":","}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { SagaIterator } from \"redux-saga\";\nimport { put, take, select } from \"redux-saga/effects\";\nimport { TodosState } from \"../types\";\nimport { EXPAND_TODO } from \"../constants\";\nimport { ExpandTodoAction } from \"../actions\";\nimport { addPart, addView } from \"../action-creators\";\nimport { updateSubView } from \"../ui\";\n\nexport function* expandTodoSaga(): SagaIterator {\n  while (1) {\n    const {\n      meta: { viewId, id }\n    }: ExpandTodoAction = yield take(EXPAND_TODO);\n    const { views, parts }: TodosState = yield select(\n      (state: { todos: TodosState }) => state.todos\n    );\n    const visibilityFilter = views[viewId].visibilityFilter;\n\n    if (!parts[id]) {\n      yield put(addPart({ partId: id }));\n      yield put(addView({ viewId: id, partId: id, visibilityFilter }));\n    }\n\n    yield put(updateSubView({ subViewId: id }));\n  }\n}\n\nexport default expandTodoSaga;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/sagas/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/sagas/mainSaga.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/sagas/resetTodosSaga.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":13,"column":30,"nodeType":null,"endLine":13,"endColumn":30,"fix":{"range":[481,481],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":20,"column":75,"nodeType":null,"endLine":20,"endColumn":75,"fix":{"range":[679,679],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":35,"column":23,"nodeType":null,"endLine":35,"endColumn":23,"fix":{"range":[1042,1042],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":41,"column":32,"nodeType":null,"endLine":41,"endColumn":32,"fix":{"range":[1211,1211],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":43,"column":25,"nodeType":null,"endLine":43,"endColumn":25,"fix":{"range":[1253,1253],"text":","}}],"errorCount":5,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"import { SagaIterator } from \"redux-saga\";\nimport { put, take } from \"redux-saga/effects\";\nimport { validateTitle, rootId } from \"../todo\";\nimport { TodoStates } from \"../types\";\nimport { RESET_TODOS } from \"../constants\";\nimport { ResetTodosAction } from \"../actions\";\nimport { setTodos, addView } from \"../action-creators\";\nimport { todosInitialState } from \"../reducers\";\n\nexport function* resetTodosSaga(): SagaIterator {\n  while (1) {\n    const {\n      meta: { partId, todos }\n    }: ResetTodosAction = yield take(RESET_TODOS);\n\n    yield put(\n      addView({\n        viewId: partId,\n        partId,\n        visibilityFilter: todosInitialState.views[rootId].visibilityFilter\n      })\n    );\n\n    yield put(\n      setTodos({\n        partId,\n        todos: todos.map((todo) => {\n          const errors = validateTitle(todo.title);\n          return errors.length\n            ? {\n                id: todo.id,\n                title: todo.title,\n                checked: todo.completed,\n                validated: false,\n                errors\n              }\n            : {\n                id: todo.id,\n                title: todo.title,\n                checked: todo.completed,\n                validated: true\n              };\n        }) as TodoStates\n      })\n    );\n  }\n}\n\nexport default resetTodosSaga;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/sagas/updateTodoTitleSaga.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":11,"column":34,"nodeType":null,"endLine":11,"endColumn":34,"fix":{"range":[405,405],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":23,"column":21,"nodeType":null,"endLine":23,"endColumn":21,"fix":{"range":[700,700],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":28,"column":30,"nodeType":null,"endLine":28,"endColumn":30,"fix":{"range":[797,797],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":29,"column":14,"nodeType":null,"endLine":29,"endColumn":14,"fix":{"range":[811,811],"text":","}}],"errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import { SagaIterator } from \"redux-saga\";\nimport { put, take } from \"redux-saga/effects\";\nimport { validateTitle } from \"../todo\";\nimport { UPDATE_TODO_TITLE } from \"../constants\";\nimport { UpdateTodoTitleAction } from \"../actions\";\nimport { doUpdateTodoTitle } from \"../action-creators\";\n\nexport function* updateTodoTitleSaga(): SagaIterator {\n  while (1) {\n    const {\n      meta: { viewId, id, title }\n    }: UpdateTodoTitleAction = yield take(UPDATE_TODO_TITLE);\n    const errors = validateTitle(title);\n\n    yield put(\n      doUpdateTodoTitle({\n        viewId,\n        todo: errors.length\n          ? {\n              id,\n              title,\n              validated: false,\n              errors\n            }\n          : {\n              id,\n              title,\n              validated: true\n            }\n      })\n    );\n  }\n}\n\nexport default updateTodoTitleSaga;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/sagas/updateViewsSaga.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":11,"column":12,"nodeType":null,"endLine":11,"endColumn":12,"fix":{"range":[266,266],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":20,"column":23,"nodeType":null,"endLine":20,"endColumn":23,"fix":{"range":[443,443],"text":","}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":24,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":24,"endColumn":35},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":37,"column":43,"nodeType":null,"endLine":37,"endColumn":43,"fix":{"range":[915,915],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":38,"column":10,"nodeType":null,"endLine":38,"endColumn":10,"fix":{"range":[925,925],"text":","}}],"errorCount":4,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"import { SagaIterator } from \"redux-saga\";\nimport { put, select, takeLatest } from \"redux-saga/effects\";\nimport { TodosState } from \"../types\";\nimport {\n  SET_TODOS,\n  SET_TODOS_NOSAVE,\n  DO_ADD_TODO,\n  DO_UPDATE_TODO_TITLE,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  MOVE_TODO\n} from \"../constants\";\nimport {\n  DoAddTodoAction,\n  DoUpdateTodoTitleAction,\n  DeleteTodoAction,\n  ToggleTodoAction,\n  MoveTodoAction,\n  SetTodosAction,\n  SetTodosNoSaveAction\n} from \"../actions\";\nimport { updateViews } from \"../action-creators\";\n\nexport function* updateViewsSaga() {\n  yield takeLatest(\n    [DO_ADD_TODO, DO_UPDATE_TODO_TITLE, DELETE_TODO, TOGGLE_TODO, MOVE_TODO],\n    function* (\n      action:\n        | DoAddTodoAction\n        | DoUpdateTodoTitleAction\n        | DeleteTodoAction\n        | ToggleTodoAction\n        | MoveTodoAction\n    ): SagaIterator {\n      const {\n        views: {\n          [action.meta.viewId]: { partId }\n        }\n      }: TodosState = yield select(\n        (state: { todos: TodosState }) => state.todos\n      );\n      yield put(updateViews({ partId }));\n    }\n  );\n\n  yield takeLatest([SET_TODOS, SET_TODOS_NOSAVE], function* (\n    action: SetTodosAction | SetTodosNoSaveAction\n  ): SagaIterator {\n    yield put(updateViews(action.meta));\n  });\n}\n\nexport default updateViewsSaga;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/types/ItemsState.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/types/Part.ts","messages":[{"ruleId":"no-undef","severity":2,"message":"'Part' is not defined.","line":4,"column":16,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":20}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export type Part = readonly string[];\nexport type PartMap = Readonly<{ [id: string]: Part }>;\n\nexport default Part;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/types/Todo.ts","messages":[{"ruleId":"no-undef","severity":2,"message":"'Todo' is not defined.","line":10,"column":16,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":20}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export type Todo = Readonly<{\n  id: string;\n  title: string;\n  completed: boolean;\n}>;\n\nexport type Todos = readonly Todo[];\nexport type TodoMap = Readonly<{ [id: string]: Omit<Todo, \"id\"> }>;\n\nexport default Todo;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/types/TodoState.ts","messages":[{"ruleId":"no-undef","severity":2,"message":"'TodoState' is not defined.","line":15,"column":16,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":25}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ItemsState } from \"./ItemsState\";\n\nexport type TodoState = Readonly<{\n  id: string;\n  title: string;\n  checked: boolean;\n  validated: boolean;\n  errors?: readonly string[];\n}>;\n\nexport type TodoStates = readonly TodoState[];\nexport type TodoStateMap = Readonly<{ [id: string]: TodoState }>;\nexport type TodosState = ItemsState<\"todos\", TodoState>;\n\nexport default TodoState;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/types/View.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":13,"column":40,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":13,"endColumn":43,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[296,299],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[296,299],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":22,"column":40,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":22,"endColumn":43,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[499,502],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[499,502],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { VisibilityFilter } from \"./VisibilityFilter\";\n\n/*\n{\n  partId: string,     //  id of subset of all items\n  visibilityFilter: VisibilityFilter,\n  items: itemState[]; // subset of subset of all items\n}\n*/\n\nexport type View<\n  ItemsKey extends string,\n  ItemStates extends readonly Readonly<any>[]\n> = Readonly<{\n  partId: string;\n  visibilityFilter: VisibilityFilter;\n}> &\n  Record<ItemsKey, ItemStates>;\n\nexport type ViewMap<\n  ItemsKey extends string,\n  ItemStates extends readonly Readonly<any>[]\n> = Readonly<{\n  [viewId: string]: View<ItemsKey, ItemStates>;\n}>;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/types/VisibilityFilter.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":5,"column":15,"nodeType":null,"endLine":5,"endColumn":15,"fix":{"range":[90,90],"text":","}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"export enum VisibilityFilter {\n  SHOW_ALL,\n  SHOW_ACTIVE,\n  SHOW_COMPLETED,\n  SHOW_INVALID\n}\n\nexport default VisibilityFilter;\n"},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/models/types/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/actions/answer-actions.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/actions/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/actions/misc-actions.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App/types/actions/request-actions.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App2/types/managers/index.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/App2/types/managers/saga-manager.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/containers/__generated__/BookTrips.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/containers/__generated__/GetLaunch.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/containers/__generated__/addOrRemoveFromCart.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/containers/__generated__/cancel.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/pages/__generated__/GetCartItems.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/pages/__generated__/GetLaunchList.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/pages/__generated__/GetMyTrips.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/pages/__generated__/LaunchDetails.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/pages/__generated__/LaunchTile.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/src/sandbox/apollo-tutorial/client/pages/__generated__/login.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulp/build.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulp/clean.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulp/copy.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulp/lint.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulp/tdd.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulp/transpile-all.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulp/types.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulp/watch.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulp/helpers/cleanup.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulp/helpers/dirs.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulp/helpers/pipes.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulp/helpers/source-globs.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/home/jason/Projets/js/tenth/gulpfile.js","messages":[{"ruleId":"no-inner-declarations","severity":2,"message":"Move function declaration to program root.","line":55,"column":3,"nodeType":"FunctionDeclaration","endLine":67,"endColumn":4},{"ruleId":"no-inner-declarations","severity":2,"message":"Move function declaration to program root.","line":69,"column":3,"nodeType":"FunctionDeclaration","endLine":72,"endColumn":4},{"ruleId":"no-inner-declarations","severity":2,"message":"Move function declaration to program root.","line":80,"column":3,"nodeType":"FunctionDeclaration","endLine":86,"endColumn":4}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\n\nconst gulp = require(\"gulp\");\nconst babel = require(\"gulp-babel\");\nconst newer = require(\"gulp-newer\");\nconst debug = require(\"gulp-debug\");\nconst log = require(\"fancy-log\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst chalk = require(\"chalk\");\nconst autoreload = require(\"autoreload-gulp\");\nconst usePlumbedGulpSrc = require(\"plumb-gulp\").usePlumbedGulpSrc;\nconst useOriginalGulpSrc = require(\"plumb-gulp\").useOriginalGulpSrc;\n\nconst gulpSrc = \"gulp/**/*.js\";\nconst buildDir = \"dev-build\";\nconst gulpDir = path.join(`${buildDir}`, \"gulp\");\nconst autoTask = \"tdd\";\n\nusePlumbedGulpSrc();\n\ntry {\n  // Attempt to load all include files from gulpDir\n  fs.readdirSync(gulpDir)\n    .filter((filename) => {\n      return filename.match(/\\.js$/);\n    })\n    .forEach((filename) => {\n      require(path.join(process.cwd(), gulpDir, filename));\n    });\n\n  require(path.join(\n    process.cwd(),\n    gulpDir,\n    \"helpers/cleanup\"\n  )).keepTopProcessAliveTillAutoTaskExits();\n\n  gulp.task(\n    autoTask,\n    gulp.parallel(\n      gulp.series(\"tdd:transpile:gulp\", \"types\", \"tdd:transpile:src\"),\n      \"copy\"\n    )\n  );\n\n  // If success, start infinite dev process with autoreload\n  gulp.task(\"default\", autoreload(autoTask, gulpDir));\n} catch (err) {\n  // If error, try to regenerate include files\n\n  // First make sure to abort on first subsequent error\n  useOriginalGulpSrc();\n\n  // define regeneration functions\n  function transpileGulp() {\n    return gulp\n      .src(gulpSrc, {\n        base: \".\",\n      })\n      .pipe(newer(buildDir))\n      .pipe(debug({ title: \"Build gulp include:\" }))\n      .pipe(babel())\n      .on(\"error\", (err) => {\n        log(chalk.red(err.stack));\n      })\n      .pipe(gulp.dest(buildDir));\n  }\n\n  function watchGulp(done) {\n    gulp.watch(gulpSrc, transpileGulp);\n    done();\n  }\n\n  const gulpDir = \"gulp\";\n  const copyGlob = [\n    path.join(gulpDir, \"**/*.json\"),\n    path.join(gulpDir, \"**/.*.json\"),\n  ];\n\n  function copy() {\n    return gulp\n      .src(copyGlob, { base: \".\" })\n      .pipe(newer(buildDir))\n      .pipe(debug({ title: \"Build gulp include:\" }))\n      .pipe(gulp.dest(buildDir));\n  }\n\n  // Distinguish between missing gulpDir ...\n  if (\n    err.message.match(new RegExp(`no such file or directory, scandir`)) ||\n    err.message.match(/Task never defined/) ||\n    err.message.match(/Cannot find module '\\.\\.?\\//)\n  ) {\n    log(chalk.red(err.message));\n    log(chalk.yellow(`'${gulpDir}/**/*.js' incomplete; Regenerating`));\n\n    // ... And errors due to corrupted files\n  } else {\n    log(chalk.red(err.stack));\n  }\n\n  gulp.task(autoTask, watchGulp);\n\n  gulp.task(\n    \"default\",\n    gulp.series(\n      gulp.parallel(copy, transpileGulp),\n      autoreload(autoTask, gulpDir)\n    )\n  );\n}\n"}],"metadata":{}}